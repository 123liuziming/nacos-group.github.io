{
  "filename": "architecture.md",
  "__html": "<h2>Basic Architecture and Concepts</h2>\n<p><img src=\"/img/nacos-Arch.jpg\" alt=\"nacos_arch.jpg\"></p>\n<ul>\n<li>\n<p><strong>Service</strong></p>\n<p>A software function or a set of software functions (such as the retrieval of specified information or the execution of a set of operations) with the purpose that different clients can be reused for different purposes (for example, through a cross-process network call). Nacos supports almost all types of services:\n<a href=\"https://kubernetes.io/docs/concepts/services-networking/service/\">Kubernetes Service</a></p>\n</li>\n</ul>\n<p><a href=\"https://grpc.io/docs/guides/concepts.html#service-definition\">gRPC</a>\n<a href=\"https://dubbo.incubator.apache.org/#/?lang=en-us\"> | Dubbo RPC Service</a></p>\n<p><a href=\"https://spring.io/understanding/REST\">Spring Cloud RESTful Service</a></p>\n<ul>\n<li>\n<p><strong>Service Registry</strong></p>\n<p>The database of services, instances and metadata. Service instances are registered with the service registry on startup and deregistered on shutdown. Clients of the service and/or routers query the service registry to find the available instances of a service. A service registry might invoke a service instance��s health check API to verify that it is able to handle requests.</p>\n</li>\n<li>\n<p><strong>Service Metadata</strong></p>\n<p>Data describing services such as service endpoints, service labels, service version, service instance weights, routing rules, security policies.</p>\n</li>\n<li>\n<p><strong>Service Provider</strong></p>\n<p>A process or application which provides reusable and callable services.</p>\n</li>\n<li>\n<p><strong>Service Consumer</strong></p>\n<p>A process or application which initiates a call to a service.</p>\n</li>\n<li>\n<p><strong>Configuration</strong></p>\n<p>During system development, developers usually extract some parameters or variables that need to be changed from the code and manage them in a separate configuration file. This enables the static system artifacts or deliverables (such as WAR and JAR packages) to fit with the physical operating environment in a better way. Configuration management is generally a part of system deployment, which is executed by the administrator or operation and maintenance personnel. Configuration modification is an effective method to adjust the behavior of a running system.</p>\n</li>\n<li>\n<p><strong>Configuration Management</strong></p>\n<p>In the data center, all configuration-related activities such as editing, storage, distribution, change management, history version management, and change audit are collectively referred to as configuration management.</p>\n</li>\n<li>\n<p><strong>Naming Service</strong></p>\n<p>Mapping the &quot;names&quot; of all the objects and entities in the distributed system to the associated metadata, for example, <code>ServiceName</code> -&gt; <code>Endpoints\\Version etc...</code>, <code>Distributed Lock Name</code> -&gt; <code>Lock Owner/Status Info</code>, <code>DNS Domain Name</code> -&gt; <code>IP List</code>. Service discovery and DNS are the two major scenarios of naming service.</p>\n</li>\n<li>\n<p><strong>Configuration Service</strong></p>\n<p>Providing dynamic configuration, service metadata and configuration management for other services or application.</p>\n</li>\n<li>\n<p><strong><a href=\"./concepts.md\">More concepts...</a></strong></p>\n</li>\n</ul>\n<h2>Artifacts, Deployment, and Start Mode</h2>\n<p><img src=\"https://cdn.yuque.com/lark/0/2018/png/15914/1531730742844-e8325932-258b-49b2-9473-8d1199efe20d.png\" alt=\"undefined\"></p>\n<ul>\n<li>\n<p><strong>Two Artifacts</strong></p>\n<p>Nacos supports both standard Docker images (v0.2.0) and nacos-.zip(tar.gz). You can choose the appropriate build to deploy the Nacos service according to your needs.</p>\n</li>\n<li>\n<p><strong>Two Start Modes</strong></p>\n<p>Nacos supports two start modes. you can merging the Service Registry and the Config Center in one process or deploying them in separately cluster.</p>\n</li>\n<li>\n<p><strong>Free Public Cloud Service on Alibaba Cloud</strong></p>\n<p>In addition to deploying and launching Nacos services by users themselves, Nacos also supports public cloud. Nacos public cloud service will be free in Alibaba Cloud's commercial service (such as <a href=\"https://www.aliyun.com/product/acm\">ACM</a>, <a href=\"https://www.aliyun.com/product/edas\">EDAS</a>). We also welcome other public cloud providers to offer Nacos public cloud services.</p>\n</li>\n</ul>\n"
}