!function(t){function e(a){if(n[a])return n[a].exports;var r=n[a]={i:a,l:!1,exports:{}};return t[a].call(r.exports,r,r.exports,e),r.l=!0,r.exports}var n={};e.m=t,e.c=n,e.i=function(t){return t},e.d=function(t,n,a){e.o(t,n)||Object.defineProperty(t,n,{configurable:!1,enumerable:!0,get:a})},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},e.p="/build/",e(e.s=45)}([function(t,e){t.exports=React},function(t,e,n){"use strict";function a(t,e,n,a){n&&Object.defineProperty(t,e,{enumerable:n.enumerable,configurable:n.configurable,writable:n.writable,value:n.initializer?n.initializer.call(a):void 0})}function r(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function s(t,e,n,a,r){var s={};return Object.keys(a).forEach(function(t){s[t]=a[t]}),s.enumerable=!!s.enumerable,s.configurable=!!s.configurable,("value"in s||s.initializer)&&(s.writable=!0),s=n.slice().reverse().reduce(function(n,a){return a(t,e,n)||n},s),r&&void 0!==s.initializer&&(s.value=s.initializer?s.initializer.call(r):void 0,s.initializer=void 0),void 0===s.initializer&&(Object.defineProperty(t,e,s),s=null),s}function i(t){if(Array.isArray(t)){for(var e=0,n=Array(t.length);e<t.length;e++)n[e]=t[e];return n}return Array.from(t)}function l(t){if(!t||!t.hasOwnProperty)return!1;for(var e=["value","initializer","get","set"],n=0,a=e.length;n<a;n++)if(t.hasOwnProperty(e[n]))return!0;return!1}function o(t,e){return l(e[e.length-1])?t.apply(void 0,i(e).concat([[]])):function(){return t.apply(void 0,i(Array.prototype.slice.call(arguments)).concat([e]))}}function c(t){return!1===t.hasOwnProperty(C)&&w(t,C,{value:new E}),t[C]}function d(t){var e={};return P(t).forEach(function(n){return e[n]=k(t,n)}),e}function p(t){return function(e){return Object.defineProperty(this,t,{configurable:!0,writable:!0,enumerable:!0,value:e}),e}}function u(t,e){return t.bind?t.bind(e):function(){return t.apply(e,arguments)}}function h(t){!0!==D[t]&&(D[t]=!0,O("DEPRECATION: "+t))}e.d=o,e.c=c,n.d(e,"g",function(){return P}),e.f=d,e.e=p,e.a=u,n.d(e,"b",function(){return O}),e.h=h;var f,g,y,m,v,b,x=n(22),S="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},w=Object.defineProperty,k=Object.getOwnPropertyDescriptor,N=Object.getOwnPropertyNames,j=Object.getOwnPropertySymbols,E=(f=function t(){r(this,t),a(this,"debounceTimeoutIds",g,this),a(this,"throttleTimeoutIds",y,this),a(this,"throttlePreviousTimestamps",m,this),a(this,"throttleTrailingArgs",v,this),a(this,"profileLastRan",b,this)},g=s(f.prototype,"debounceTimeoutIds",[x.a],{enumerable:!0,initializer:function(){return{}}}),y=s(f.prototype,"throttleTimeoutIds",[x.a],{enumerable:!0,initializer:function(){return{}}}),m=s(f.prototype,"throttlePreviousTimestamps",[x.a],{enumerable:!0,initializer:function(){return{}}}),v=s(f.prototype,"throttleTrailingArgs",[x.a],{enumerable:!0,initializer:function(){return null}}),b=s(f.prototype,"profileLastRan",[x.a],{enumerable:!0,initializer:function(){return null}}),f),C="function"==typeof Symbol?Symbol("__core_decorators__"):"__core_decorators__",P=j?function(t){return N(t).concat(j(t))}:N,O=function(){return"object"===("undefined"==typeof console?"undefined":S(console))&&console&&"function"==typeof console.warn?u(console.warn,console):function(){}}(),D={}},function(t,e){t.exports=ReactRouterDOM},function(t,e,n){var a,r;/*!
  Copyright (c) 2016 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/
!function(){"use strict";function n(){for(var t=[],e=0;e<arguments.length;e++){var a=arguments[e];if(a){var r=typeof a;if("string"===r||"number"===r)t.push(a);else if(Array.isArray(a))t.push(n.apply(null,a));else if("object"===r)for(var i in a)s.call(a,i)&&a[i]&&t.push(i)}}return t.join(" ")}var s={}.hasOwnProperty;void 0!==t&&t.exports?t.exports=n:(a=[],void 0!==(r=function(){return n}.apply(e,a))&&(t.exports=r))}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var a=n(64);n.d(e,"override",function(){return a.a});var r=n(57);n.d(e,"deprecate",function(){return r.a}),n.d(e,"deprecated",function(){return r.a});var s=n(67);n.d(e,"suppressWarnings",function(){return s.a});var i=n(60);n.d(e,"memoize",function(){return i.a});var l=n(54);n.d(e,"autobind",function(){return l.a});var o=n(66);n.d(e,"readonly",function(){return o.a});var c=n(58);n.d(e,"enumerable",function(){return c.a});var d=n(63);n.d(e,"nonenumerable",function(){return d.a});var p=n(62);n.d(e,"nonconfigurable",function(){return p.a});var u=n(55);n.d(e,"debounce",function(){return u.a});var h=n(68);n.d(e,"throttle",function(){return h.a});var f=n(56);n.d(e,"decorate",function(){return f.a});var g=n(61);n.d(e,"mixin",function(){return g.a}),n.d(e,"mixins",function(){return g.a});var y=n(22);n.d(e,"lazyInitialize",function(){return y.a});var m=n(69);n.d(e,"time",function(){return m.a});var v=n(59);n.d(e,"extendDescriptor",function(){return v.a});var b=n(65);n.d(e,"profile",function(){return b.a});var x=n(53);n.d(e,"applyDecorators",function(){return x.a})},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default={defaultLanguage:"en-us","en-us":{pageMenu:[{text:"HOME",link:"/"},{text:"DOCS",link:"/docs/quick-start.md"},{text:"BLOG",link:"/blog"},{text:"COMMUNITY",link:"/community"}],disclaimer:{title:"Vision",content:"By providing an easy-to-use service infrastructure such as dynamic service discovery, service configuration, service sharing and management and etc., Nacos help users better construct, deliver and manage their own service platform, reuse and composite business service faster and deliver value of business innovation more quickly so as to win market for users in the era of cloud native and in all cloud environments, such as private, mixed, or public clouds."},documentation:{title:"Documentation",list:[{text:"Overview",link:"/docs/what-is-nacos.md"},{text:"Quick start",link:"/docs/quick-start.md"},{text:"Developer guide",link:"/docs/contributing.md"}]},resources:{title:"Resources",list:[{text:"Community",link:"/community"}]},copyright:"@ 2018 The Nacos Authors | a alibaba middleware project"},"zh-cn":{pageMenu:[{text:"首页",link:"/"},{text:"文档",link:"/docs/what-is-nacos.md"},{text:"博客",link:"/blog"},{text:"社区",link:"/community"}],disclaimer:{title:"愿景",content:"Nacos 通过提供简单易用的动态服务发现、服务配置、服务共享与管理等服务基础设施，帮助用户在云原生时代，在私有云、混合云或者公有云等所有云环境中，更好的构建、交付、管理自己的微服务平台，更快的复用和组合业务服务，更快的交付商业创新的价值，从而为用户赢得市场。"},documentation:{title:"文档",list:[{text:"概览",link:"/docs/what-is-nacos.md"},{text:"快速开始",link:"/docs/quick-start.md"},{text:"开发者指南",link:"/docs/contributing.md"}]},resources:{title:"资源",list:[{text:"社区",link:"/community"}]},copyright:"@ 2018 The Nacos Authors | a alibaba middleware project"}}},function(t,e,n){var a,r;!function(s){var i=!1;if(a=s,void 0!==(r="function"==typeof a?a.call(e,n,e,t):a)&&(t.exports=r),i=!0,t.exports=s(),i=!0,!i){var l=window.Cookies,o=window.Cookies=s();o.noConflict=function(){return window.Cookies=l,o}}}(function(){function t(){for(var t=0,e={};t<arguments.length;t++){var n=arguments[t];for(var a in n)e[a]=n[a]}return e}function e(n){function a(e,r,s){var i;if("undefined"!=typeof document){if(arguments.length>1){if(s=t({path:"/"},a.defaults,s),"number"==typeof s.expires){var l=new Date;l.setMilliseconds(l.getMilliseconds()+864e5*s.expires),s.expires=l}s.expires=s.expires?s.expires.toUTCString():"";try{i=JSON.stringify(r),/^[\{\[]/.test(i)&&(r=i)}catch(t){}r=n.write?n.write(r,e):encodeURIComponent(String(r)).replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g,decodeURIComponent),e=encodeURIComponent(String(e)),e=e.replace(/%(23|24|26|2B|5E|60|7C)/g,decodeURIComponent),e=e.replace(/[\(\)]/g,escape);var o="";for(var c in s)s[c]&&(o+="; "+c,!0!==s[c]&&(o+="="+s[c]));return document.cookie=e+"="+r+o}e||(i={});for(var d=document.cookie?document.cookie.split("; "):[],p=/(%[0-9A-Z]{2})+/g,u=0;u<d.length;u++){var h=d[u].split("="),f=h.slice(1).join("=");this.json||'"'!==f.charAt(0)||(f=f.slice(1,-1));try{var g=h[0].replace(p,decodeURIComponent);if(f=n.read?n.read(f,g):n(f,g)||f.replace(p,decodeURIComponent),this.json)try{f=JSON.parse(f)}catch(t){}if(e===g){i=f;break}e||(i[g]=f)}catch(t){}}return i}}return a.set=a,a.get=function(t){return a.call(a,t)},a.getJSON=function(){return a.apply({json:!0},[].slice.call(arguments))},a.defaults={},a.remove=function(e,n){a(e,"",t(n,{expires:-1}))},a.withConverter=e,a}return e(function(){})})},function(t,e,n){"use strict";e.decode=e.parse=n(90),e.encode=e.stringify=n(91)},function(t,e){t.exports=ReactDOM},function(t,e,n){"use strict";function a(t){return t&&t.__esModule?t:{default:t}}Object.defineProperty(e,"__esModule",{value:!0});var r=n(0),s=a(r),i=n(2),l=n(6),o=a(l),c=n(5),d=a(c);n(73);var p=function(t){var e=o.default.get("docsite_language")||d.default.defaultLanguage,n=d.default[e];return s.default.createElement("footer",{className:"footer-container"},s.default.createElement("div",{className:"footer-body"},s.default.createElement("img",{src:t.logo}),s.default.createElement("div",{className:"cols-container"},s.default.createElement("div",{className:"col col-12"},s.default.createElement("h3",null,n.disclaimer.title),s.default.createElement("p",null,n.disclaimer.content)),s.default.createElement("div",{className:"col col-6"},s.default.createElement("dl",null,s.default.createElement("dt",null,n.documentation.title),n.documentation.list.map(function(t,e){return s.default.createElement("dd",{key:e},s.default.createElement(i.Link,{to:t.link},t.text))}))),s.default.createElement("div",{className:"col col-6"},s.default.createElement("dl",null,s.default.createElement("dt",null,n.resources.title),n.resources.list.map(function(t,e){return s.default.createElement("dd",{key:e},s.default.createElement(i.Link,{to:t.link},t.text))})))),s.default.createElement("div",{className:"copyright"},s.default.createElement("span",null,n.copyright))))};e.default=p},function(t,e,n){"use strict";function a(t){return t&&t.__esModule?t:{default:t}}function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function s(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function i(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function l(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}function o(t,e,n,a,r){var s={};return Object.keys(a).forEach(function(t){s[t]=a[t]}),s.enumerable=!!s.enumerable,s.configurable=!!s.configurable,("value"in s||s.initializer)&&(s.writable=!0),s=n.slice().reverse().reduce(function(n,a){return a(t,e,n)||n},s),r&&void 0!==s.initializer&&(s.value=s.initializer?s.initializer.call(r):void 0,s.initializer=void 0),void 0===s.initializer&&(Object.defineProperty(t,e,s),s=null),s}Object.defineProperty(e,"__esModule",{value:!0});var c,d=function(){function t(t,e){for(var n=0;n<e.length;n++){var a=e[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(t,a.key,a)}}return function(e,n,a){return n&&t(e.prototype,n),a&&t(e,a),e}}(),p=n(0),u=a(p),h=n(2),f=n(3),g=a(f),y=n(4),m=n(5),v=a(m);n(74);var b=[{text:"中",value:"en-us"},{text:"En",value:"zh-cn"}],x=function(){},S={type:"primary",language:"en-us",onLanguageChange:x},w=(c=function(t){function e(t){s(this,e);var n=i(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,t));return n.state={menuBodyVisible:!1,language:t.language},n}return l(e,t),d(e,[{key:"toggleMenu",value:function(){this.setState({menuBodyVisible:!this.state.menuBodyVisible})}},{key:"switchLang",value:function(){var t=void 0;t="zh-cn"===this.state.language?"en-us":"zh-cn",this.setState({language:t}),this.props.onLanguageChange(t)}},{key:"componentWillReceiveProps",value:function(t){this.setState({language:t.language})}},{key:"render",value:function(){var t=this.props,e=t.type,n=t.logo,a=t.onLanguageChange,s=this.state,i=s.menuBodyVisible,l=s.language;return u.default.createElement("header",{className:(0,g.default)(r({"header-container":!0},"header-container-"+e,!0))},u.default.createElement("div",{className:"header-body"},u.default.createElement(h.Link,{to:"/"},u.default.createElement("img",{className:"logo",alt:v.default.name,title:v.default.name,src:n})),a!==x?u.default.createElement("span",{className:(0,g.default)(r({"language-switch":!0},"language-switch-"+e,!0)),onClick:this.switchLang},b.find(function(t){return t.value===l}).text):null,u.default.createElement("div",{className:(0,g.default)({"header-menu":!0,"header-menu-open":i})},u.default.createElement("img",{className:"header-menu-toggle",onClick:this.toggleMenu,src:"primary"===e?"./img/menu_white.png":"./img/menu_gray.png"}),u.default.createElement("ul",null,v.default[l].pageMenu.map(function(t){if(t.link){var n;return u.default.createElement("li",{className:(0,g.default)((n={"menu-item":!0},r(n,"menu-item-"+e,!0),r(n,"menu-item-"+e+"-active",window.location.hash.split("?")[0].slice(1).split("/")[1]===t.link.split("/")[1]),n))},u.default.createElement(h.Link,{to:t.link},t.text))}if(t.href)return u.default.createElement("li",{className:(0,g.default)(r({"menu-item":!0},"menu-item-"+e,!0))},u.default.createElement("a",{href:t.href,target:"__blank"},t.text))})))))}}]),e}(u.default.Component),o(c.prototype,"toggleMenu",[y.autobind],Object.getOwnPropertyDescriptor(c.prototype,"toggleMenu"),c.prototype),o(c.prototype,"switchLang",[y.autobind],Object.getOwnPropertyDescriptor(c.prototype,"switchLang"),c.prototype),c);w.defaultProps=S,e.default=w},function(t,e,n){"use strict";function a(t){return t&&t.__esModule?t:{default:t}}function r(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function s(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function i(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var l,o=function(){function t(t,e){for(var n=0;n<e.length;n++){var a=e[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(t,a.key,a)}}return function(e,n,a){return n&&t(e.prototype,n),a&&t(e,a),e}}(),c=n(0),d=a(c),p=n(4),u=n(6),h=a(u),f=n(7),g=a(f),y=n(92),m=a(y),v=(l=function(t){function e(){r(this,e);var t=s(this,(e.__proto__||Object.getPrototypeOf(e)).call(this));return m.default.initialize("UA-121449408-1"),t}return i(e,t),o(e,[{key:"componentWillReceiveProps",value:function(){var t=window.location.pathname+window.location.hash;t.includes("/#/docs/")?t.includes("?lang=")&&m.default.pageview(t):m.default.pageview(t)}},{key:"onLanguageChange",value:function(t){this.props.location;h.default.set("docsite_language",t,{expires:365,path:""});var e=window.location.hash.split("?");if(e&&e.length){var n=g.default.parse(e[1]||"");n.lang=t,window.location.hash=(e[0]||"")+"?"+g.default.stringify(n)}this.forceUpdate()}}]),e}(d.default.Component),function(t,e,n,a,r){var s={};return Object.keys(a).forEach(function(t){s[t]=a[t]}),s.enumerable=!!s.enumerable,s.configurable=!!s.configurable,("value"in s||s.initializer)&&(s.writable=!0),s=n.slice().reverse().reduce(function(n,a){return a(t,e,n)||n},s),r&&void 0!==s.initializer&&(s.value=s.initializer?s.initializer.call(r):void 0,s.initializer=void 0),void 0===s.initializer&&(Object.defineProperty(t,e,s),s=null),s}(l.prototype,"onLanguageChange",[p.autobind],Object.getOwnPropertyDescriptor(l.prototype,"onLanguageChange"),l.prototype),l);e.default=v},function(t,e,n){t.exports=n(88)()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var a=function(t){if(t=t?0===t.indexOf("#")?t:"#"+t:"",history.pushState){var e=window.location;history.pushState(null,null,t||e.pathname+e.search)}else location.hash=t},r=function(){return window.location.hash.replace(/^#/,"")},s=function(t){return function(e){return t.contains?t!=e&&t.contains(e):!!(16&t.compareDocumentPosition(e))}},i=function(t,e){return t===document?e.getBoundingClientRect().top+(window.scrollY||window.pageYOffset):"relative"===getComputedStyle(t).position?e.offsetTop:e.getBoundingClientRect().top+t.scrollTop};e.default={pushHash:a,getHash:r,filterElementInContainer:s,scrollOffset:i}},function(t,e,n){"use strict";function a(t){return t&&t.__esModule?t:{default:t}}Object.defineProperty(e,"__esModule",{value:!0});var r=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(t[a]=n[a])}return t},s=n(13),i=a(s),l=n(25),o=a(l),c=n(18),d=a(c),p={},u=void 0;e.default={unmount:function(){p={}},register:function(t,e){p[t]=e},unregister:function(t){delete p[t]},get:function(t){return p[t]||document.getElementById(t)||document.getElementsByName(t)[0]||document.getElementsByClassName(t)[0]},setActiveLink:function(t){return u=t},getActiveLink:function(){return u},scrollTo:function(t,e){var n=this.get(t);if(!n)return void console.warn("target Element not found");e=r({},e,{absolute:!1});var a=e.containerId,s=e.container,l=void 0;l=a?document.getElementById(a):s&&s.nodeType?s:document,d.default.registered.begin&&d.default.registered.begin(t,n),e.absolute=!0;var c=i.default.scrollOffset(l,n)+(e.offset||0);if(!e.smooth)return l===document?window.scrollTo(0,c):l.scrollTop=c,void(d.default.registered.end&&d.default.registered.end(t,n));o.default.animateTopScroll(c,e,t,n)}}},function(t,e,n){"use strict";function a(t){return t&&t.__esModule?t:{default:t}}function r(t){var e=t.text,n=t.img,a=(0,o.default)({bar:!0});return i.default.createElement("div",{className:a},i.default.createElement("div",{className:"bar-body"},i.default.createElement("img",{src:n,className:"front-img"}),i.default.createElement("div",{className:"bar-title"},i.default.createElement("span",null,e),i.default.createElement(d.default,{type:"light"})),i.default.createElement("img",{src:n,className:"back-img"})))}Object.defineProperty(e,"__esModule",{value:!0}),e.default=r;var s=n(0),i=a(s),l=n(3),o=a(l),c=n(21),d=a(c);n(70)},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});e.throttle=function(t,e){var n=null;return function(){for(var a=arguments.length,r=Array(a),s=0;s<a;s++)r[s]=arguments[s];var i=this;clearTimeout(n),n=setTimeout(function(){t.apply(i,r)},e)}},e.getScrollTop=function(){var t=0;return document.documentElement&&document.documentElement.scrollTop?t=document.documentElement.scrollTop:document.body&&(t=document.body.scrollTop),t}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});e.addPassiveEventListener=function(t,e,n){var a=function(){var t=!1;try{var e=Object.defineProperty({},"passive",{get:function(){t=!0}});window.addEventListener("test",null,e)}catch(t){}return t}();t.addEventListener(e,n,!!a&&{passive:!0})},e.removePassiveEventListener=function(t,e,n){t.removeEventListener(e,n)}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var a={registered:{},scrollEvent:{register:function(t,e){a.registered[t]=e},remove:function(t){a.registered[t]=null}}};e.default=a},function(t,e,n){"use strict";function a(t){return t&&t.__esModule?t:{default:t}}function r(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function s(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function i(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}Object.defineProperty(e,"__esModule",{value:!0});var l=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(t[a]=n[a])}return t},o=function(){function t(t,e){for(var n=0;n<e.length;n++){var a=e[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(t,a.key,a)}}return function(e,n,a){return n&&t(e.prototype,n),a&&t(e,a),e}}(),c=n(0),d=a(c),p=n(8),u=(a(p),n(13)),h=(a(u),n(20)),f=a(h),g=n(14),y=a(g),m=n(12),v=a(m),b=n(27),x=a(b),S={to:v.default.string.isRequired,containerId:v.default.string,container:v.default.object,activeClass:v.default.string,spy:v.default.bool,smooth:v.default.oneOfType([v.default.bool,v.default.string]),offset:v.default.number,delay:v.default.number,isDynamic:v.default.bool,onClick:v.default.func,duration:v.default.oneOfType([v.default.number,v.default.func]),absolute:v.default.bool,onSetActive:v.default.func,onSetInactive:v.default.func,ignoreCancelEvents:v.default.bool,hashSpy:v.default.bool};e.default=function(t,e){var n=e||y.default,a=function(e){function a(t){r(this,a);var e=s(this,(a.__proto__||Object.getPrototypeOf(a)).call(this,t));return c.call(e),e.state={active:!1},e}return i(a,e),o(a,[{key:"getScrollSpyContainer",value:function(){var t=this.props.containerId,e=this.props.container;return t&&!e?document.getElementById(t):e&&e.nodeType?e:document}},{key:"componentDidMount",value:function(){if(this.props.spy||this.props.hashSpy){var t=this.getScrollSpyContainer();f.default.isMounted(t)||f.default.mount(t),this.props.hashSpy&&(x.default.isMounted()||x.default.mount(n),x.default.mapContainer(this.props.to,t)),f.default.addSpyHandler(this.spyHandler,t),this.setState({container:t})}}},{key:"componentWillUnmount",value:function(){f.default.unmount(this.stateHandler,this.spyHandler)}},{key:"render",value:function(){var e="";e=this.state&&this.state.active?((this.props.className||"")+" "+(this.props.activeClass||"active")).trim():this.props.className;var n=l({},this.props);for(var a in S)n.hasOwnProperty(a)&&delete n[a];return n.className=e,n.onClick=this.handleClick,d.default.createElement(t,n)}}]),a}(d.default.PureComponent),c=function(){var t=this;this.scrollTo=function(e,a){n.scrollTo(e,l({},t.state,a))},this.handleClick=function(e){t.props.onClick&&t.props.onClick(e),e.stopPropagation&&e.stopPropagation(),e.preventDefault&&e.preventDefault(),t.scrollTo(t.props.to,t.props)},this.spyHandler=function(e){var a=t.getScrollSpyContainer();if(!x.default.isMounted()||x.default.isInitialized()){var r=t.props.to,s=null,i=0,l=0,o=0;if(a.getBoundingClientRect){o=a.getBoundingClientRect().top}if(!s||t.props.isDynamic){if(!(s=n.get(r)))return;var c=s.getBoundingClientRect();i=c.top-o+e,l=i+c.height}var d=e-t.props.offset,p=d>=Math.floor(i)&&d<Math.floor(l),u=d<Math.floor(i)||d>=Math.floor(l),h=n.getActiveLink();u&&(r===h&&n.setActiveLink(void 0),t.props.hashSpy&&x.default.getHash()===r&&x.default.changeHash(),t.props.spy&&t.state.active&&(t.setState({active:!1}),t.props.onSetInactive&&t.props.onSetInactive(r,s))),!p||h===r&&!1!==t.state.active||(n.setActiveLink(r),t.props.hashSpy&&x.default.changeHash(r),t.props.spy&&(t.setState({active:!0}),t.props.onSetActive&&t.props.onSetActive(r,s)))}}};return a.propTypes=S,a.defaultProps={offset:0},a}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var a=n(86),r=function(t){return t&&t.__esModule?t:{default:t}}(a),s=n(17),i=function(t){return(0,r.default)(t,66)},l={spyCallbacks:[],spySetState:[],scrollSpyContainers:[],mount:function(t){if(t){var e=i(function(e){l.scrollHandler(t)});l.scrollSpyContainers.push(t),(0,s.addPassiveEventListener)(t,"scroll",e)}},isMounted:function(t){return-1!==l.scrollSpyContainers.indexOf(t)},currentPositionY:function(t){if(t===document){var e=void 0!==window.pageXOffset,n="CSS1Compat"===(document.compatMode||"");return e?window.pageYOffset:n?document.documentElement.scrollTop:document.body.scrollTop}return t.scrollTop},scrollHandler:function(t){(l.scrollSpyContainers[l.scrollSpyContainers.indexOf(t)].spyCallbacks||[]).forEach(function(e){return e(l.currentPositionY(t))})},addStateHandler:function(t){l.spySetState.push(t)},addSpyHandler:function(t,e){var n=l.scrollSpyContainers[l.scrollSpyContainers.indexOf(e)];n.spyCallbacks||(n.spyCallbacks=[]),n.spyCallbacks.push(t),t(l.currentPositionY(e))},updateStates:function(){l.spySetState.forEach(function(t){return t()})},unmount:function(t,e){l.scrollSpyContainers.forEach(function(t){return t.spyCallbacks&&t.spyCallbacks.length&&t.spyCallbacks.splice(t.spyCallbacks.indexOf(e),1)}),l.spySetState&&l.spySetState.length&&l.spySetState.splice(l.spySetState.indexOf(t),1),document.removeEventListener("scroll",l.scrollHandler)},update:function(){return l.scrollSpyContainers.forEach(function(t){return l.scrollHandler(t)})}};e.default=l},function(t,e,n){"use strict";function a(t){return t&&t.__esModule?t:{default:t}}function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}Object.defineProperty(e,"__esModule",{value:!0});var s=n(0),i=a(s),l=n(3),o=a(l);n(71);var c=function(t){return i.default.createElement("div",{className:(0,o.default)(r({bone:!0},"bone-"+t.type,!0))})};e.default=c},function(t,e,n){"use strict";function a(t,e,a){var r=a.configurable,l=a.enumerable,o=a.initializer,c=a.value;return{configurable:r,enumerable:l,get:function(){if(this!==t){var n=o?o.call(this):c;return i(this,e,{configurable:r,enumerable:l,writable:!0,value:n}),n}},set:n.i(s.e)(e)}}function r(){for(var t=arguments.length,e=Array(t),r=0;r<t;r++)e[r]=arguments[r];return n.i(s.d)(a,e)}e.a=r;var s=n(1),i=Object.defineProperty},function(t,e,n){(function(t){function n(t,e){for(var n=0,a=t.length-1;a>=0;a--){var r=t[a];"."===r?t.splice(a,1):".."===r?(t.splice(a,1),n++):n&&(t.splice(a,1),n--)}if(e)for(;n--;n)t.unshift("..");return t}function a(t,e){if(t.filter)return t.filter(e);for(var n=[],a=0;a<t.length;a++)e(t[a],a,t)&&n.push(t[a]);return n}var r=/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/,s=function(t){return r.exec(t).slice(1)};e.resolve=function(){for(var e="",r=!1,s=arguments.length-1;s>=-1&&!r;s--){var i=s>=0?arguments[s]:t.cwd();if("string"!=typeof i)throw new TypeError("Arguments to path.resolve must be strings");i&&(e=i+"/"+e,r="/"===i.charAt(0))}return e=n(a(e.split("/"),function(t){return!!t}),!r).join("/"),(r?"/":"")+e||"."},e.normalize=function(t){var r=e.isAbsolute(t),s="/"===i(t,-1);return t=n(a(t.split("/"),function(t){return!!t}),!r).join("/"),t||r||(t="."),t&&s&&(t+="/"),(r?"/":"")+t},e.isAbsolute=function(t){return"/"===t.charAt(0)},e.join=function(){var t=Array.prototype.slice.call(arguments,0);return e.normalize(a(t,function(t,e){if("string"!=typeof t)throw new TypeError("Arguments to path.join must be strings");return t}).join("/"))},e.relative=function(t,n){function a(t){for(var e=0;e<t.length&&""===t[e];e++);for(var n=t.length-1;n>=0&&""===t[n];n--);return e>n?[]:t.slice(e,n-e+1)}t=e.resolve(t).substr(1),n=e.resolve(n).substr(1);for(var r=a(t.split("/")),s=a(n.split("/")),i=Math.min(r.length,s.length),l=i,o=0;o<i;o++)if(r[o]!==s[o]){l=o;break}for(var c=[],o=l;o<r.length;o++)c.push("..");return c=c.concat(s.slice(l)),c.join("/")},e.sep="/",e.delimiter=":",e.dirname=function(t){var e=s(t),n=e[0],a=e[1];return n||a?(a&&(a=a.substr(0,a.length-1)),n+a):"."},e.basename=function(t,e){var n=s(t)[2];return e&&n.substr(-1*e.length)===e&&(n=n.substr(0,n.length-e.length)),n},e.extname=function(t){return s(t)[3]};var i="b"==="ab".substr(-1)?function(t,e,n){return t.substr(e,n)}:function(t,e,n){return e<0&&(e=t.length+e),t.substr(e,n)}}).call(e,n(87))},function(t,e,n){"use strict";function a(t){return t&&t.__esModule?t:{default:t}}Object.defineProperty(e,"__esModule",{value:!0}),e.Helpers=e.ScrollElement=e.ScrollLink=e.animateScroll=e.scrollSpy=e.Events=e.scroller=e.Element=e.Button=e.Link=void 0;var r=n(95),s=a(r),i=n(93),l=a(i),o=n(94),c=a(o),d=n(14),p=a(d),u=n(18),h=a(u),f=n(20),g=a(f),y=n(25),m=a(y),v=n(19),b=a(v),x=n(26),S=a(x),w=n(96),k=a(w);e.Link=s.default,e.Button=l.default,e.Element=c.default,e.scroller=p.default,e.Events=h.default,e.scrollSpy=g.default,e.animateScroll=m.default,e.ScrollLink=b.default,e.ScrollElement=S.default,e.Helpers=k.default,e.default={Link:s.default,Button:l.default,Element:c.default,scroller:p.default,Events:h.default,scrollSpy:g.default,animateScroll:m.default,ScrollLink:b.default,ScrollElement:S.default,Helpers:k.default}},function(t,e,n){"use strict";function a(t){return t&&t.__esModule?t:{default:t}}Object.defineProperty(e,"__esModule",{value:!0});var r=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(t[a]=n[a])}return t},s=n(13),i=(a(s),n(98)),l=a(i),o=n(97),c=a(o),d=n(18),p=a(d),u=function(t){return l.default[t.smooth]||l.default.defaultEasing},h=function(t){return"function"==typeof t?t:function(){return t}},f=function(){if("undefined"!=typeof window)return window.requestAnimationFrame||window.webkitRequestAnimationFrame},g=function(){return f()||function(t,e,n){window.setTimeout(t,n||1e3/60,(new Date).getTime())}}(),y=function(){return{currentPositionY:0,startPositionY:0,targetPositionY:0,progress:0,duration:0,cancel:!1,target:null,containerElement:null,to:null,start:null,deltaTop:null,percent:null,delayTimeout:null}},m=function(t){var e=t.data.containerElement;if(e&&e!==document&&e!==document.body)return e.scrollTop;var n=void 0!==window.pageXOffset,a="CSS1Compat"===(document.compatMode||"");return n?window.pageYOffset:a?document.documentElement.scrollTop:document.body.scrollTop},v=function(t){var e=t.data.containerElement;if(e&&e!==document&&e!==document.body)return Math.max(e.scrollHeight,e.offsetHeight,e.clientHeight);var n=document.body,a=document.documentElement;return Math.max(n.scrollHeight,n.offsetHeight,a.clientHeight,a.scrollHeight,a.offsetHeight)},b=function t(e,n,a){var r=n.data;if(!n.ignoreCancelEvents&&r.cancel)return void(p.default.registered.end&&p.default.registered.end(r.to,r.target,r.currentPositionY));if(r.deltaTop=Math.round(r.targetPositionY-r.startPositionY),null===r.start&&(r.start=a),r.progress=a-r.start,r.percent=r.progress>=r.duration?1:e(r.progress/r.duration),r.currentPositionY=r.startPositionY+Math.ceil(r.deltaTop*r.percent),r.containerElement&&r.containerElement!==document&&r.containerElement!==document.body?r.containerElement.scrollTop=r.currentPositionY:window.scrollTo(0,r.currentPositionY),r.percent<1){var s=t.bind(null,e,n);return void g.call(window,s)}p.default.registered.end&&p.default.registered.end(r.to,r.target,r.currentPositionY)},x=function(t){t.data.containerElement=t?t.containerId?document.getElementById(t.containerId):t.container&&t.container.nodeType?t.container:document:null},S=function(t,e,n,a){if(e.data=e.data||y(),window.clearTimeout(e.data.delayTimeout),c.default.subscribe(function(){e.data.cancel=!0}),x(e),e.data.start=null,e.data.cancel=!1,e.data.startPositionY=m(e),e.data.targetPositionY=e.absolute?t:t+e.data.startPositionY,e.data.startPositionY===e.data.targetPositionY)return void(p.default.registered.end&&p.default.registered.end(e.data.to,e.data.target,e.data.currentPositionY));e.data.deltaTop=Math.round(e.data.targetPositionY-e.data.startPositionY),e.data.duration=h(e.duration)(e.data.deltaTop),e.data.duration=isNaN(parseFloat(e.data.duration))?1e3:parseFloat(e.data.duration),e.data.to=n,e.data.target=a;var r=u(e),s=b.bind(null,r,e);if(e&&e.delay>0)return void(e.data.delayTimeout=window.setTimeout(function(){g.call(window,s)},e.delay));g.call(window,s)},w=function(t){return t=r({},t),t.data=t.data||y(),t.absolute=!0,t},k=function(t){S(0,w(t))},N=function(t,e){S(t,w(e))},j=function(t){t=w(t),x(t),S(v(t),t)},E=function(t,e){e=w(e),x(e),S(m(e)+t,e)};e.default={animateTopScroll:S,getAnimationType:u,scrollToTop:k,scrollToBottom:j,scrollTo:N,scrollMore:E}},function(t,e,n){"use strict";function a(t){return t&&t.__esModule?t:{default:t}}function r(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function s(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function i(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}Object.defineProperty(e,"__esModule",{value:!0});var l=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(t[a]=n[a])}return t},o=function(){function t(t,e){for(var n=0;n<e.length;n++){var a=e[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(t,a.key,a)}}return function(e,n,a){return n&&t(e.prototype,n),a&&t(e,a),e}}(),c=n(0),d=a(c),p=n(8),u=(a(p),n(14)),h=a(u),f=n(12),g=a(f);e.default=function(t){var e=function(e){function n(t){r(this,n);var e=s(this,(n.__proto__||Object.getPrototypeOf(n)).call(this,t));return e.childBindings={domNode:null},e}return i(n,e),o(n,[{key:"componentDidMount",value:function(){if("undefined"==typeof window)return!1;this.registerElems(this.props.name)}},{key:"componentWillReceiveProps",value:function(t){this.props.name!==t.name&&this.registerElems(t.name)}},{key:"componentWillUnmount",value:function(){if("undefined"==typeof window)return!1;h.default.unregister(this.props.name)}},{key:"registerElems",value:function(t){h.default.register(t,this.childBindings.domNode)}},{key:"render",value:function(){return d.default.createElement(t,l({},this.props,{parentBindings:this.childBindings}))}}]),n}(d.default.Component);return e.propTypes={name:g.default.string,id:g.default.string},e}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var a=(n(17),n(13)),r=function(t){return t&&t.__esModule?t:{default:t}}(a),s={mountFlag:!1,initialized:!1,scroller:null,containers:{},mount:function(t){this.scroller=t,this.handleHashChange=this.handleHashChange.bind(this),window.addEventListener("hashchange",this.handleHashChange),this.initStateFromHash(),this.mountFlag=!0},mapContainer:function(t,e){this.containers[t]=e},isMounted:function(){return this.mountFlag},isInitialized:function(){return this.initialized},initStateFromHash:function(){var t=this,e=this.getHash();e?window.setTimeout(function(){t.scrollTo(e,!0),t.initialized=!0},10):this.initialized=!0},scrollTo:function(t,e){var n=this.scroller;if(n.get(t)&&(e||t!==n.getActiveLink())){var a=this.containers[t]||document;n.scrollTo(t,{container:a})}},getHash:function(){return r.default.getHash()},changeHash:function(t){this.isInitialized()&&r.default.pushHash(t)},handleHashChange:function(){this.scrollTo(this.getHash())},unmount:function(){this.scroller=null,this.containers=null,window.removeEventListener("hashchange",this.handleHashChange)}};e.default=s},function(t,e,n){"use strict";function a(t){return t&&t.__esModule?t:{default:t}}function r(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function s(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function i(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}Object.defineProperty(e,"__esModule",{value:!0});var l=function(){function t(t,e){for(var n=0;n<e.length;n++){var a=e[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(t,a.key,a)}}return function(e,n,a){return n&&t(e.prototype,n),a&&t(e,a),e}}(),o=n(0),c=a(o),d=n(2),p=n(6),u=a(p),h=n(7),f=a(h),g=n(11),y=a(g),m=n(10),v=a(m),b=n(15),x=a(b),S=n(41),w=a(S),k=n(46),N=a(k),j=n(9),E=a(j),C=n(36),P=a(C),O=n(5),D=a(O);n(79);var I=function(t){function e(){return r(this,e),s(this,(e.__proto__||Object.getPrototypeOf(e)).apply(this,arguments))}return i(e,t),l(e,[{key:"render",value:function(){var t=window.location.hash.split("?"),e=f.default.parse(t[1]||""),n=e.lang||u.default.get("docsite_language")||D.default.defaultLanguage;if("zh-cn"!==n&&"en-us"!==n&&(n=D.default.defaultLanguage),n!==u.default.get("docsite_language")&&u.default.set("docsite_language",n,{expires:365,path:""}),!e.lang)return c.default.createElement(d.Redirect,{to:this.props.match.url+"?lang="+n});var a=P.default[n],r=a.list;return c.default.createElement("div",{className:"blog-list-page"},c.default.createElement(v.default,{type:"normal",logo:"./img/nacos_colorful.png",language:n,onLanguageChange:this.onLanguageChange}),c.default.createElement(x.default,{img:"./img/blog.png",text:a.barText}),c.default.createElement("section",{className:"blog-container"},c.default.createElement("div",{className:"col col-18 left-part"},c.default.createElement(w.default,{pageSize:5},r.map(function(t,e){return c.default.createElement(N.default,{key:e,dataSource:t})}))),c.default.createElement("div",{className:"col col-6 right-part"},c.default.createElement("h4",null,a.postsTitle),c.default.createElement("ul",null,r.map(function(t,e){return c.default.createElement("li",{key:e},c.default.createElement(d.Link,{to:t.link},c.default.createElement("span",null,t.dateStr,"  "),c.default.createElement("span",null,t.title)))})))),c.default.createElement(E.default,{logo:"./img/nacos_gray.png"}))}}]),e}(y.default);e.default=I},function(t,e,n){"use strict";function a(t){return t&&t.__esModule?t:{default:t}}function r(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function s(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function i(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}Object.defineProperty(e,"__esModule",{value:!0});var l=function(){function t(t,e){for(var n=0;n<e.length;n++){var a=e[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(t,a.key,a)}}return function(e,n,a){return n&&t(e.prototype,n),a&&t(e,a),e}}(),o=n(0),c=a(o),d=n(6),p=a(d),u=n(24),h=n(23),f=a(h),g=n(7),y=a(g),m=n(2),v=n(11),b=a(v),x=n(10),S=a(x),w=n(9),k=a(w),N=n(5),j=a(N),E=n(34),C=a(E);n(80);var P=/^#[^\/]/,O=/^((\.{1,2}\/)|([\w-]+[\/.]))/,D=function(t){function e(){return r(this,e),s(this,(e.__proto__||Object.getPrototypeOf(e)).apply(this,arguments))}return i(e,t),l(e,[{key:"componentDidMount",value:function(){if(this.markdownContainer){window.scrollTo&&window.scrollTo(0,0);var t=this.props.match.url.split("?")[0].split("/").slice(2).join("/"),e=t.split("/").slice(0,-1).join("/"),n=window.location.hash.split("?"),a=y.default.parse(n[1]||""),r=a.lang||p.default.get("docsite_language")||j.default.defaultLanguage,s=Array.from(this.markdownContainer.querySelectorAll("img")),i=Array.from(this.markdownContainer.querySelectorAll("a"));s.forEach(function(t){var n=t.getAttribute("src");O.test(n)&&(t.src=window.location.protocol+"//"+window.location.host+f.default.join(window.location.pathname,"./docs",r,e,n))}),i.forEach(function(t){var n=t.getAttribute("href");O.test(n)&&(t.href=window.location.protocol+"//"+window.location.host+window.location.pathname+window.location.search+"#/"+f.default.join("./blog",e,n))}),this.markdownContainer.addEventListener("click",function(t){if("a"===t.target.nodeName.toLowerCase()&&t.target.getAttribute("href")&&P.test(t.target.getAttribute("href"))){t.preventDefault();var e=t.target.getAttribute("href").slice(1);u.scroller.scrollTo(e,{duration:1e3,smooth:"easeInOutQuint"})}})}}},{key:"componentDidUpdate",value:function(){this.componentDidMount()}},{key:"render",value:function(){var t=this,e=window.location.hash.split("?"),n=y.default.parse(e[1]||""),a=n.lang||p.default.get("docsite_language")||j.default.defaultLanguage;if("zh-cn"!==a&&"en-us"!==a&&(a=j.default.defaultLanguage),a!==p.default.get("docsite_language")&&p.default.set("docsite_language",a,{expires:365,path:""}),!n.lang)return c.default.createElement(m.Redirect,{to:this.props.match.url+"?lang="+a});var r=this.props.match.url.split("/").slice(2).join("/"),s=C.default[a].find(function(t){return t.filename===r}),i=s&&s.__html?s.__html:"";return c.default.createElement("div",{className:"blog-detail-page"},c.default.createElement(S.default,{type:"normal",logo:"./img/nacos_colorful.png",language:a,onLanguageChange:this.onLanguageChange}),c.default.createElement("section",{className:"blog-content markdown-body",ref:function(e){t.markdownContainer=e},dangerouslySetInnerHTML:{__html:i}}),c.default.createElement(k.default,{logo:"./img/nacos_gray.png"}))}}]),e}(b.default);e.default=D},function(t,e,n){"use strict";function a(t){return t&&t.__esModule?t:{default:t}}function r(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function s(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function i(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}Object.defineProperty(e,"__esModule",{value:!0});var l=function(){function t(t,e){for(var n=0;n<e.length;n++){var a=e[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(t,a.key,a)}}return function(e,n,a){return n&&t(e.prototype,n),a&&t(e,a),e}}(),o=n(0),c=a(o),d=n(6),p=a(d),u=n(7),h=a(u),f=n(2),g=n(11),y=a(g),m=n(10),v=a(m),b=n(15),x=a(b),S=n(44),w=a(S),k=n(50),N=a(k),j=n(47),E=a(j),C=n(48),P=a(C),O=n(49),D=a(O),I=n(9),_=a(I),T=n(5),A=a(T),q=n(37),M=a(q);n(81);var R=function(t){function e(){return r(this,e),s(this,(e.__proto__||Object.getPrototypeOf(e)).apply(this,arguments))}return i(e,t),l(e,[{key:"render",value:function(){var t=window.location.hash.split("?"),e=h.default.parse(t[1]||""),n=e.lang||p.default.get("docsite_language")||A.default.defaultLanguage;if("zh-cn"!==n&&"en-us"!==n&&(n=A.default.defaultLanguage),n!==p.default.get("docsite_language")&&p.default.set("docsite_language",n,{expires:365,path:""}),!e.lang)return c.default.createElement(f.Redirect,{to:this.props.match.url+"?lang="+n});var a=M.default[n];return c.default.createElement("div",{className:"community-page"},c.default.createElement(v.default,{type:"normal",logo:"./img/nacos_colorful.png",language:n,onLanguageChange:this.onLanguageChange}),c.default.createElement(x.default,{img:"./img/community.png",text:a.barText}),c.default.createElement("section",{className:"events-section"},c.default.createElement("div",{className:"events-body"},c.default.createElement("h3",null,a.events.title),c.default.createElement(w.default,null,a.events.list.map(function(t,e){return c.default.createElement(N.default,{event:t,key:e})})))),c.default.createElement("section",{className:"eco-section"},c.default.createElement("h3",null,a.ecos.title),c.default.createElement("div",{className:"eco-lists"},a.ecos.list.map(function(t,e){return c.default.createElement(D.default,{eco:t,key:e})}))),c.default.createElement("section",{className:"contact-section"},c.default.createElement("div",{className:"contact-body"},c.default.createElement("h3",null,a.contacts.title),c.default.createElement("p",null,a.contacts.desc),c.default.createElement("div",{className:"contact-list"},a.contacts.list.map(function(t,e){return c.default.createElement(E.default,{contact:t,key:e})})))),c.default.createElement("section",{className:"contributor-section"},c.default.createElement("div",{className:"contributor-body"},c.default.createElement("h3",null,a.contributorGuide.title),c.default.createElement("p",null,a.contributorGuide.desc),c.default.createElement("div",{className:"contributor-list"},a.contributorGuide.list.map(function(t,e){return c.default.createElement(P.default,{contributor:t,key:e})})))),c.default.createElement(_.default,{logo:"./img/nacos_gray.png"}))}}]),e}(y.default);e.default=R},function(t,e,n){"use strict";function a(t){return t&&t.__esModule?t:{default:t}}function r(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function s(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function i(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}Object.defineProperty(e,"__esModule",{value:!0});var l=function(){function t(t,e){for(var n=0;n<e.length;n++){var a=e[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(t,a.key,a)}}return function(e,n,a){return n&&t(e.prototype,n),a&&t(e,a),e}}(),o=n(0),c=a(o),d=n(6),p=a(d),u=n(24),h=n(23),f=a(h),g=n(7),y=a(g),m=n(2),v=n(11),b=a(v),x=n(10),S=a(x),w=n(15),k=a(w),N=n(42),j=a(N),E=n(9),C=a(E),P=n(5),O=a(P),D=n(38),I=a(D),_=n(35),T=a(_);n(82);var A=/^#[^\/]/,q=/^((\.{1,2}\/)|([\w-]+[\/.]))/,M=function(t){function e(){return r(this,e),s(this,(e.__proto__||Object.getPrototypeOf(e)).apply(this,arguments))}return i(e,t),l(e,[{key:"componentDidMount",value:function(){if(this.markdownContainer){window.scrollTo&&window.scrollTo(0,0);var t=this.props.match.url.split("?")[0].split("/").slice(2).join("/"),e=t.split("/").slice(0,-1).join("/"),n=window.location.hash.split("?"),a=y.default.parse(n[1]||""),r=a.lang||p.default.get("docsite_language")||O.default.defaultLanguage,s=Array.from(this.markdownContainer.querySelectorAll("img")),i=Array.from(this.markdownContainer.querySelectorAll("a"));s.forEach(function(t){var n=t.getAttribute("src");q.test(n)&&(t.src=window.location.protocol+"//"+window.location.host+f.default.join(window.location.pathname,"./docs",r,e,n))}),i.forEach(function(t){var n=t.getAttribute("href");q.test(n)&&(t.href=window.location.protocol+"//"+window.location.host+window.location.pathname+window.location.search+"#/"+f.default.join("./docs",e,n))}),this.markdownContainer.addEventListener("click",function(t){if("a"===t.target.nodeName.toLowerCase()&&t.target.getAttribute("href")&&A.test(t.target.getAttribute("href"))){t.preventDefault();var e=t.target.getAttribute("href").slice(1);u.scroller.scrollTo(e,{duration:1e3,smooth:"easeInOutQuint"})}})}}},{key:"componentDidUpdate",value:function(){this.componentDidMount()}},{key:"render",value:function(){var t=this,e=window.location.hash.split("?"),n=y.default.parse(e[1]||""),a=n.lang||p.default.get("docsite_language")||O.default.defaultLanguage;if("zh-cn"!==a&&"en-us"!==a&&(a=O.default.defaultLanguage),a!==p.default.get("docsite_language")&&p.default.set("docsite_language",a,{expires:365,path:""}),!n.lang)return c.default.createElement(m.Redirect,{to:this.props.match.url+"?lang="+a});var r=I.default[a],s=this.props.match.url.split("/").slice(2).join("/"),i=T.default[a].find(function(t){return t.filename===s}),l=i&&i.__html?i.__html:"";return c.default.createElement("div",{className:"documentation-page"},c.default.createElement(S.default,{type:"normal",logo:"./img/nacos_colorful.png",language:a,onLanguageChange:this.onLanguageChange}),c.default.createElement(k.default,{img:"./img/docs.png",text:r.barText}),c.default.createElement("section",{className:"content-section"},c.default.createElement("div",{className:"content-body"},c.default.createElement(j.default,{dataSource:r.sidemenu}),c.default.createElement("div",{className:"doc-content markdown-body",ref:function(e){t.markdownContainer=e},dangerouslySetInnerHTML:{__html:l}}))),c.default.createElement(C.default,{logo:"./img/nacos_gray.png"}))}}]),e}(b.default);e.default=M},function(t,e,n){"use strict";function a(t){return t&&t.__esModule?t:{default:t}}function r(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function s(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function i(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}Object.defineProperty(e,"__esModule",{value:!0});var l=function(){function t(t,e){for(var n=0;n<e.length;n++){var a=e[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(t,a.key,a)}}return function(e,n,a){return n&&t(e.prototype,n),a&&t(e,a),e}}(),o=n(0),c=a(o),d=n(2),p=n(6),u=a(p),h=n(7),f=a(h),g=n(16),y=n(11),m=a(y),v=n(10),b=a(v),x=n(40),S=a(x),w=n(9),k=a(w),N=n(21),j=a(N),E=n(52),C=a(E),P=n(51),O=a(P),D=n(5),I=a(D),_=n(39),T=a(_);n(83);var A=function(t){function e(t){r(this,e);var n=s(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,t));return n.state={headerType:"primary"},n}return i(e,t),l(e,[{key:"componentDidMount",value:function(){var t=this;window.addEventListener("scroll",function(){(0,g.getScrollTop)()>66?t.setState({headerType:"normal"}):t.setState({headerType:"primary"})})}},{key:"render",value:function(){var t=window.location.hash.split("?"),e=f.default.parse(t[1]||""),n=e.lang||u.default.get("docsite_language")||I.default.defaultLanguage;if("zh-cn"!==n&&"en-us"!==n&&(n=I.default.defaultLanguage),n!==u.default.get("docsite_language")&&u.default.set("docsite_language",n,{expires:365,path:""}),!e.lang)return c.default.createElement(d.Redirect,{to:this.props.match.url+"?lang="+n});var a=T.default[n],r=this.state.headerType,s="primary"===r?"./img/nacos_white.png":"./img/nacos_colorful.png";return c.default.createElement("div",{className:"home-page"},c.default.createElement("section",{className:"top-section"},c.default.createElement(b.default,{type:r,logo:s,language:n,onLanguageChange:this.onLanguageChange}),c.default.createElement("div",{className:"vertical-middle"},c.default.createElement("img",{className:"product-logo",src:"./img/nacos.png"}),c.default.createElement("p",{className:"product-desc"},a.brand.briefIntroduction),c.default.createElement("div",{className:"button-area"},a.brand.buttons.map(function(t){return c.default.createElement(S.default,{type:t.type,link:t.link},t.text)})),c.default.createElement("div",{className:"version-note"},c.default.createElement("a",{target:"__blank",href:a.brand.version.link},a.brand.version.text),c.default.createElement("a",{target:"__blank",href:a.brand.note.link},a.brand.note.text)),c.default.createElement("div",{className:"release-date"},a.brand.releaseDate)),c.default.createElement("div",{className:"animation animation1"}),c.default.createElement("div",{className:"animation animation2"}),c.default.createElement("div",{className:"animation animation3"}),c.default.createElement("div",{className:"animation animation4"}),c.default.createElement("div",{className:"animation animation5"})),c.default.createElement("section",{className:"function-section"},c.default.createElement("h3",null,a.functions.title),c.default.createElement(j.default,{type:"dark"}),c.default.createElement("div",null,a.functions.list.map(function(t,e){return c.default.createElement(C.default,{func:t,key:e,imgFirst:e%2==0})}))),c.default.createElement("section",{className:"feature-section"},c.default.createElement("div",{className:"feature-section-body"},c.default.createElement("h3",null,a.features.title),c.default.createElement(j.default,{type:"light"}),c.default.createElement("ul",{className:"feature-list"},a.features.list.map(function(t,e){return c.default.createElement(O.default,{feature:t,key:e})})))),c.default.createElement(k.default,{logo:"./img/nacos_gray.png"}))}}]),e}(m.default);e.default=A},function(t,e){},function(t,e,n){"use strict";t.exports={"zh-cn":[{filename:"DNS-SD.md",__html:'<h1>微服务架构中基于DNS的服务注册与发现</h1>\n<p>当前，微服务架构已经成为企业尤其是互联网企业技术选型的一个重要参考。微服务架构中涉及到很多模块，本文将重点介绍微服务架构的服务注册与发现以及如何基于DNS做服务发现。最后，简单介绍下阿里巴巴内部是如何基于DNS做服务发现的。</p>\n<h2>服务注册与发现</h2>\n<p>微服务体系中，服务注册与服务发现是两个最核心的模块。服务A调用服务B时，需要通过服务发现模块找到服务B的IP和端口列表，而服务B的实例在启动时需要把提供服务的IP和端口注册到服务注册中心。一个典型的结构如下图：</p>\n<p><img src="https://cdn.yuque.com/lark/0/2018/png/7601/1525185623334-8fbf69bb-00df-4202-a951-c1ee9caace88.png" alt="image.png | left | 733x470"></p>\n<h3>服务注册</h3>\n<p>目前，流行的注册中心比较多，常见的有zookeeper、ectd、consul、eureka等。服务注册通常有三种：自注册、第三方注册、注册中心主动同步。</p>\n<ul>\n<li>自注册\n自注册，顾名思义，就是服务提供方在启动服务时自己把提供服务的IP和端口发送到注册中心，并通过心跳方式维持健康状态；服务下线时，自己把相应的数据删除。典型的像使用eureka客户端发布微服务。</li>\n<li>第三方注册\n第三方注册是指，存在一个第三方的系统负责在服务启动或停止时向注册中心增加或删除服务数据。典型的用法是devops系统或容器调度系统主动调注册中心接口注册服务；</li>\n<li>注册中心主动同步\n与第三方注册方式类似，主动注册方式是指注册中心和调度或发布系统打通，主动同步最新的服务IP列表；一个例子是kubernetes体系中，coredns订阅api server数据。</li>\n</ul>\n<h3>服务发现</h3>\n<p>在真正发起服务调用前，调用方需要从注册中心拿到相应服务可用的IP和端口列表，即服务发现。服务发现从对应用的侵入性上可以分为两大类：</p>\n<ul>\n<li>SDK-Based\n这类的服务发现方式，需要调用方依赖相应的SDK，显式调用SDK代码才可以实现服务调用，即对业务有侵入性，典型例子如eureka、zookeeper等。</li>\n<li>DNS-Based\nDNS本身是一种域名解析系统，可以满足简单的服务发现场景，如双方约定好端口、序列化协议等等。但是，这远远不能满足真正的微服务场景需求。近几年，基于dns的服务发现渐渐被业界提了出来。后面将重点介绍基于DNS的服务发现及阿里巴巴的实践。</li>\n</ul>\n<h2>基于DNS的服务发现</h2>\n<p>DNS协议是目前最为通用的协议之一，几乎所有操作系统都会有DNS客户端实现。所以，其天然具有跨语言特性。这也是快速接入微服务体系最快的一个方式。要基于DNS做服务发现，首先注册中心的数据应该可以以DNS的数据格式暴露出来。让任何系统的DNS 客户端都可以通过DNS协议获取服务列表。</p>\n<p>基于DNS的服务发现方式，大致可以归结两类：</p>\n<h3>独立DNS服务器</h3>\n<p>独立DNS Server模式的基本架构如下图：</p>\n<p><img src="https://cdn.yuque.com/lark/0/2018/png/7601/1525185653048-094f815d-47af-409e-ac21-6662e20e76f4.png" alt="image.png | left | 747x469"></p>\n<p>如上图所示，这种架构中，需要独立的DNS服务器。DNS服务器从注册中心获取所有已注册的服务及对应的IP端口列表。调用方Service A 通过DNS查询某个服务下的IP列表，然后发起调用。</p>\n<p>这种类型的服务发现方式优缺点分别如下：</p>\n<ul>\n<li>优点\n<ul>\n<li>集中的DNS服务器，便于升级维护</li>\n</ul>\n</li>\n<li>缺点\n<ul>\n<li>对DNS服务器性能要求高</li>\n<li>这种情况下一般需要LVS设备为DNS服务器集群做请求转发，存在单点问题</li>\n</ul>\n</li>\n</ul>\n<h3>DNS Filter</h3>\n<p>DNS Filter模式我们定义为把DNS服务器集成到服务调用方机器或容器里，如下图所示：</p>\n<p><img src="https://cdn.yuque.com/lark/0/2018/png/7601/1525185676597-acaebac3-2b65-48a3-bdbf-7d27af7f1038.png" alt="image.png | left | 747x469"></p>\n<p>这种模式中，首先要保证ServiceA的DNS查询都被拦截到本机的DNS服务器上（127.0.0.1:53），在获取到服务的IP列表后发起调用。由于这种方式把DNS服务器前置到实际调用的机器上，所以它解决了独立DNS服务器模式的单点问题，完全P2P的模式。但由于需要在应用机器上安装DNS服务器，其维护和升级成本较前者高一些。</p>\n<h3>阿里基于DNS的服务发现实践</h3>\n<p>阿里巴巴早在2014年就开始了基于DNS做服务发现的尝试了，现在已经形成了较为成熟的模式。阿里内部以VIPServer作为注册中心，并开发了DNS Filter，部署在应用容器内。目前已经有超过20w个机器或容器上安装了DNS Filter，支持了几乎所有REST服务发现。</p>\n<h4>注册中心 VIPServer</h4>\n<p>VIPServer是阿里中间件软负载团队自研的服务注册中心，按照第一章的分类，VIPServer同时支持三种模式的服务注册，并且均有相当规模的应用。除此之外，VIPServer具备如下特性：</p>\n<ul>\n<li>主动与被动健康检查\nVIPServer同时支持主动与被动健康检查。主动健康检查是指VIPserver服务端主动定期发送健康检查探测包，探测服务提供方是否可以正常提供服务。用户可以配置多种健康检查方式，自定义探测端口和探测URL（HTTP）。主动探测的好处在于服务提供方不用做任何改动即可快融入微服务架构。被动健康检查则是指服务提供方主动注册自己的IP、端口和服务名等信息，并通过心跳方式保持活性。</li>\n<li>多种负载均衡策略\n同时，VIPServer支持多种负载均衡策略，包括权重、同机房、同地域、同环境等等，是阿里异地多活项目的核心系统之一。后面会有专门的文章介绍如何基于VIPServer实现异地多活，这里不再赘述。</li>\n<li>多重容灾保护策略\nVIPServer提供了多种容灾保护策略，可以有效减少人为或者底层系统（网络等）异常带来的影响。这些容灾保护包括：\n<ul>\n<li>客户端缓存，即使VIPServer服务端挂掉也不影响应用的正常调用；</li>\n<li>服务端保护阈值，有效防止应用因压力过大而发生雪崩；</li>\n<li>客户端容灾目录，提供人工干预服务IP列表的能力；</li>\n<li>客户端空列表保护，有效防止人为误删IP列表操作或VIPServer服务端异常</li>\n</ul>\n</li>\n</ul>\n<h4>DNS-F客户端</h4>\n<p>出于性能的考虑，我们采用了第二种DNS Filter的服务发现模式。为此，我们单独开发了DNS-F客户端，DNS-F客户端跟应用部署在同一个主机或容器内。其工作原理如下图所示：</p>\n<p><img src="https://cdn.yuque.com/lark/0/2018/png/7601/1525185700084-16f2c073-0c2b-49c0-b85b-ce2ca1163326.png" alt="image.png | left | 716x392"></p>\n<ul>\n<li>首先，应用ServiceA通过DNS查询获取到ServiceB的可用IP列表</li>\n<li>DNS-F会拦截到ServiceA的查询请求，判断自己是否该查询的答案，如果有（服务已在VIPServer中注册）则直接返回IP列表；</li>\n<li>如果查询的服务在VIPServer中没有注册，DNS-F把DNS查询转发给系统的nameserver，由真正的DNS系统解析；</li>\n</ul>\n<h2>总结</h2>\n<p>本文介绍了微服务架构中如何基于DNS做服务发现。首先，介绍了服务法注册与发现的概念、服务注册与发现的几种方式及其优缺点；然后，介绍基于DNS的服务发现的两种方式及其优缺点；最后，介绍了阿里巴巴基于DNS做服务发现的实践，主要是基于自研的软负载系统VIPServer。基于DNS的服务发现要解决的问题远不止本文描述的这些，敬请期待后续系列文章（：。</p>\n'},{filename:"Eureka2.md",__html:'<p>近日，Netflix 公司在 github 上公告 Eureka 2.0 开源工作停止，继续使用风险自负。这一消息在spring cloud 开发者中引起了一些担心和忧虑。</p>\n<p>同时在阿里巴巴正式宣布其开源计划， 将通过 Nacos 项目将阿里巴巴在建设共享服务体系中使用的服务发现、配置及服务管理平台贡献给开源社区，通过打造 Dubbo + Nacos 的经典组合进一步释放 Dubbo 在云原生及 Service Mesh 时代中，在大规模微服务治理、流量治理、服务集成与服务共享等服务平台能力建设上的威力，同时 Nacos 会非常关注对主流开源社区，如 Spring Cloud 和 Kubernetes 云原生体系的无缝对接与支持。</p>\n<p>ANS (alibaba naming service) 是 nacos 组件中的服务发现部分。开源流程正在紧张地进行中。同时 ANS 与 spring cloud 结合的 spring cloud starter ans 也将同时开源到 spring cloud <a href="https://github.com/spring-cloud-incubator/spring-cloud-alibabacloud">官方孵化器</a>。</p>\n<p>ANS 同样也支持 spring cloud 应用的服务注册与发现，同时默认集成了负载均衡组件 Ribbon，Eureka 用户可以简单地通过替换 maven 项目中 pom.xml 文件中的依赖来实现无缝迁移。</p>\n<p>想抢先体验？来试试商业版的 EDAS Ans starter 吧！</p>\n<h2>快速开始</h2>\n<h3>服务提供者</h3>\n<ol>\n<li>\n<p>创建一个 Spring Cloud 工程，命名为 service-provider。这里我们以 spring boot 1.5.8 和 spring cloud Dalston.SR4 为例。在 pom.xml 中引入需要的依赖内容。<br>\n其他版本如 spring boot 2 + spring cloud Finchley 也同样支持，请您自行修改版本号和替换相应的组件依赖。</p>\n<pre><code> &lt;parent&gt;\n \t&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n \t&lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;\n \t&lt;version&gt;1.5.8.RELEASE&lt;/version&gt;\n \t&lt;relativePath/&gt;\n &lt;/parent&gt;\n\n\n &lt;dependencies&gt;\n \t&lt;dependency&gt;\n \t\t&lt;groupId&gt;com.alibaba.cloud&lt;/groupId&gt;\n \t\t&lt;artifactId&gt;spring-cloud-starter-ans&lt;/artifactId&gt;\n \t\t&lt;version&gt;1.1.3&lt;/version&gt;\n \t&lt;/dependency&gt;\n \t&lt;dependency&gt;\n \t\t&lt;groupId&gt;com.alibaba.cloud&lt;/groupId&gt;\n \t\t&lt;artifactId&gt;spring-cloud-alibaba-edas-starter&lt;/artifactId&gt;\n \t\t&lt;version&gt;1.1.3&lt;/version&gt;\n \t&lt;/dependency&gt;\n &lt;/dependencies&gt;\n\n &lt;dependencyManagement&gt;\n \t&lt;dependencies&gt;\n \t\t&lt;dependency&gt;\n \t\t\t&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;\n \t\t\t&lt;artifactId&gt;spring-cloud-dependencies&lt;/artifactId&gt;\n \t\t\t&lt;version&gt;Dalston.SR4&lt;/version&gt;\n \t\t\t&lt;type&gt;pom&lt;/type&gt;\n \t\t\t&lt;scope&gt;import&lt;/scope&gt;\n \t\t&lt;/dependency&gt;\n \t&lt;/dependencies&gt;\n &lt;/dependencyManagement&gt;\n</code></pre>\n</li>\n<li>\n<p>编码服务提供端的启动类，其中 @EnableDiscoveryClient 注解表明此应用需开启服务注册与发现功能。</p>\n<pre><code> @SpringBootApplication\n @EnableDiscoveryClient\n public class ServerApplication {\n \n     public static void main(String[] args) {\n         SpringApplication.run(ServerApplication.class, args);\n     }\n }\n</code></pre>\n</li>\n<li>\n<p>既然是服务提供者，所以我们还需要提供一个简单的服务。这里 EchoController 的逻辑很简单，将收到的参数回显给调用者。</p>\n<pre><code> @RestController\n public class EchoController {\n     @RequestMapping(value = &quot;/echo/{string}&quot;, method = RequestMethod.GET)\n     public String echo(@PathVariable String string) {\n         return string;\n     }\n }\n</code></pre>\n</li>\n<li>\n<p>权限配置，配置阿里云账号的 AccessKey、SecretKey，以及 EDAS 的命名空间信息。</p>\n<ol>\n<li>\n<p>配置阿里云 AccessKey 和 SecretKey</p>\n<p>登陆 <a href="https://usercenter.console.aliyun.com/#/accesskey">阿里云AK管理控制台</a>。找到 <code>用户信息管理</code> 下的 <code>安全信息管理</code>。</p>\n<p>复制 <code>AccessKey ID</code> 和 <code>Access Key Secret</code>，分别对应配置项中的 alibaba.cloud.access-key 和 alibaba.cloud.secret-key。</p>\n<p>安全凭证信息格式如下：</p>\n<pre><code> alibaba.cloud.access-key=xxxxxxxxxx\n alibaba.cloud.secret-key=xxxxxxxxxx\n</code></pre>\n<p><img src="https://cdn.yuque.com/lark/0/2018/png/54319/1531104058520-831f4dba-6279-4bd3-9632-899d29830868.png" alt="2.png"></p>\n</li>\n<li>\n<p>配置 EDAS 的命名空间</p>\n<p>登录 <a href="https://edas.console.aliyun.com/#/home">EDAS 控制台</a>。未开通EDAS的用户需要先开通EDAS，<strong>EDAS 标准版促销进行中，每月仅需1元。</strong></p>\n<p>在左侧导航栏中单击<strong>命名空间</strong>。在命名空间列表页面选择<strong>地域</strong>，并找到您想发布到的命名空间，复制其<strong>命名空间ID</strong>，对应配置项中的 <strong>alibaba.edas.namespace</strong>。</p>\n<pre><code> alibaba.edas.namespace=xxxxxxxxxx\n</code></pre>\n<p><img src="https://cdn.yuque.com/lark/0/2018/png/54319/1531104049757-c3d2aefd-5d57-4434-a04f-2cd939cf58b0.png" alt="1.png"></p>\n</li>\n</ol>\n</li>\n<li>\n<p>综上，我们的配置文件 application.properties 内容最后是这样的。</p>\n<pre><code> spring.application.name=service-provider\n server.port=18081\n alibaba.cloud.access-key=xxxxxxxxxx\n alibaba.cloud.secret-key=xxxxxxxxxx\n alibaba.edas.namespace=cn-hangzhou\n</code></pre>\n</li>\n<li>\n<p>启动 service-provider 服务，在 EDAS 页面查看服务注册的信息。</p>\n<p>可以看到服务列表中已经存在的实例 service-provider，从详情页可以看到IP地址是本机的地址192.168.0.107,端口是 18081。</p>\n<p><img src="https://cdn.yuque.com/lark/0/2018/jpeg/54319/1531104455581-1d9521aa-927e-4292-9d83-b1057ab67c02.jpeg" alt="3.JPG"></p>\n<p><img src="https://cdn.yuque.com/lark/0/2018/png/54319/1531104077485-48d3d67b-584d-4729-aef2-2fbb64c0b846.png" alt="4.png"></p>\n</li>\n</ol>\n<h3>服务消费者</h3>\n<p>这个例子中，我们将不仅仅是演示服务发现的功能，同时还将演示 ANS 服务发现 与 RestTemplate、AsyncRestTemplate 和 FeignClient 这三个客户端是如何结合的。因为实际使用中，我们更多使用的是用这三个客户端进行服务调用。</p>\n<ol>\n<li>\n<p>创建一个 Spring Cloud 工程，命名为 service-consumer。首先在 pom.xml 中引入需要的依赖内容：</p>\n<pre><code> &lt;parent&gt;\n \t&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n \t&lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;\n \t&lt;version&gt;1.5.8.RELEASE&lt;/version&gt;\n \t&lt;relativePath/&gt;\n &lt;/parent&gt;\n\n &lt;dependencies&gt;\n \t&lt;dependency&gt;\n \t\t&lt;groupId&gt;com.alibaba.cloud&lt;/groupId&gt;\n \t\t&lt;artifactId&gt;spring-cloud-starter-ans&lt;/artifactId&gt;\n \t\t&lt;version&gt;1.1.3&lt;/version&gt;\n \t&lt;/dependency&gt;\n \t&lt;dependency&gt;\n \t\t&lt;groupId&gt;com.alibaba.cloud&lt;/groupId&gt;\n \t\t&lt;artifactId&gt;spring-cloud-alibaba-edas-starter&lt;/artifactId&gt;\n \t\t&lt;version&gt;1.1.3&lt;/version&gt;\n \t&lt;/dependency&gt;\n &lt;/dependencies&gt;\n\n &lt;dependencyManagement&gt;\n \t&lt;dependencies&gt;\n \t\t&lt;dependency&gt;\n \t\t\t&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;\n \t\t\t&lt;artifactId&gt;spring-cloud-dependencies&lt;/artifactId&gt;\n \t\t\t&lt;version&gt;Dalston.SR4&lt;/version&gt;\n \t\t\t&lt;type&gt;pom&lt;/type&gt;\n \t\t\t&lt;scope&gt;import&lt;/scope&gt;\n \t\t&lt;/dependency&gt;\n \t&lt;/dependencies&gt;\n &lt;/dependencyManagement&gt;\n</code></pre>\n<p>因为在这里我们要演示 FeignClient 的使用，所以与 service-provider 相比，pom.xml 文件中的依赖增加了一个 spring-cloud-starter-feign。</p>\n</li>\n<li>\n<p>完成以下四个步骤，配置好 RestTemplate 、 AsyncRestTemplate 和 FeignClient。</p>\n<ol>\n<li>\n<p>在使用 FeignClient 之前，我们还需要对它的配置，配置服务名以及方法对应的 HTTP 请求，示例代码如下</p>\n<pre><code> @FeignClient(name = &quot;service-provider&quot;)\n public interface EchoService {\n \t@RequestMapping(value = &quot;/echo/{str}&quot;, method = RequestMethod.GET)\n \tString echo(@PathVariable(&quot;str&quot;) String str);\n }\n</code></pre>\n</li>\n<li>\n<p>在启动类中，使用 @EnableDiscoveryClient 注解启用服务注册与发现</p>\n</li>\n<li>\n<p>在启动类中，使用 @EnableFeignClients 注解激活 FeignClient</p>\n</li>\n<li>\n<p>在启动类中，添加 @LoadBalanced 注解将 RestTemplate 与 AsyncRestTemplate 与服务发现结合。</p>\n</li>\n</ol>\n<p>最终启动类的代码如下</p>\n<pre><code> @SpringBootApplication\n @EnableDiscoveryClient\n @EnableFeignClients\n public class ConsumerApplication {\n \t@LoadBalanced\n \t@Bean\n \tpublic RestTemplate restTemplate() {\n \t\treturn new RestTemplate();\n \t}\n \n \t@LoadBalanced\n \t@Bean\n \tpublic AsyncRestTemplate asyncRestTemplate(){\n \t\treturn new AsyncRestTemplate();\n \t}\n \t\n \tpublic static void main(String[] args) {\n \t\tSpringApplication.run(ConsumerApplication.class, args);\n \t}\n \n }\n</code></pre>\n</li>\n<li>\n<p>创建一个Controller，供我们演示和验证服务发现功能使用。</p>\n<pre><code> @RestController\n public class TestController {\n \n     @Autowired\n     private RestTemplate restTemplate;\n     @Autowired\n     private AsyncRestTemplate asyncRestTemplate;\n     @Autowired\n     private  EchoService echoService;\n \n     @RequestMapping(value = &quot;/echo-rest/{str}&quot;, method = RequestMethod.GET)\n     public String rest(@PathVariable String str) {\n         return restTemplate.getForObject(&quot;http://service-provider/echo/&quot; + str, String.class);\n     }\n     @RequestMapping(value = &quot;/echo-async-rest/{str}&quot;, method = RequestMethod.GET)\n     public String asyncRest(@PathVariable String str) throws Exception{\n         ListenableFuture&lt;ResponseEntity&lt;String&gt;&gt; future = asyncRestTemplate.\n                 getForEntity(&quot;http://service-provider/echo/&quot;+str, String.class);\n         return future.get().getBody();\n     }\n     @RequestMapping(value = &quot;/echo-feign/{str}&quot;, method = RequestMethod.GET)\n     public String feign(@PathVariable String str) {\n         return echoService.echo(str);\n     }\n \n }\n</code></pre>\n</li>\n<li>\n<p>最后，添加应用基本配置和阿里云 AK、SK 以及 EDAS 的 namespace。</p>\n<pre><code> spring.application.name=service-consumer\n server.port=18082\n alibaba.cloud.access-key=xxxxxxxxxx\n alibaba.cloud.secret-key=xxxxxxxxxx\n alibaba.edas.namespace=cn-hangzhou\n</code></pre>\n</li>\n<li>\n<p>启动服务，首先查看EDAS控制台，查询服务，可以看到，服务注册成功了。</p>\n<p>再对我们的演示 API 分别进行调用，可以看到调用都成功了。\n<img src="https://cdn.yuque.com/lark/0/2018/png/54319/1531104088354-7cc0fae7-95cf-4c62-a9ea-1b9a53908949.png" alt="5.png"></p>\n<p><img src="https://cdn.yuque.com/lark/0/2018/png/54319/1531104133698-f9621e80-7cb1-4789-a88a-929f720b5c2b.png" alt="6.png"></p>\n</li>\n</ol>\n<h2>Demo 下载</h2>\n<p><a href="http://edas-public.oss-cn-hangzhou.aliyuncs.com/install_package/demo/ans-service-provider.zip">service-provider</a></p>\n<p><a href="http://edas-public.oss-cn-hangzhou.aliyuncs.com/install_package/demo/ans-service-consumer.zip">service-consumer</a></p>\n<h2>更多配置项</h2>\n<table>\n<thead>\n<tr>\n<th>配置项</th>\n<th>key</th>\n<th>默认值</th>\n<th>说明</th>\n<th>补充说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>服务名</td>\n<td>spring.cloud.ans.doms</td>\n<td><a href="http://spring.application.name">spring.application.name</a></td>\n<td>当此项未配置时，默认从spring.application.name中获取</br>需要发布多个服务时，中间用英文的 <code>,</code> 号隔开</td>\n<td>production</td>\n</tr>\n<tr>\n<td>是否注册</td>\n<td>spring.cloud.ans.register-enabled</td>\n<td>true</td>\n<td>当只需要发现，不需要注册时，可以通过将值设置成false来关闭注册</td>\n<td>production</td>\n</tr>\n<tr>\n<td>想要注册的IP</td>\n<td>spring.cloud.ans.ip</td>\n<td>无</td>\n<td>当需要指定本机注册的IP时，通过此值来配置，优先级最高</td>\n<td>production</td>\n</tr>\n<tr>\n<td>想要注册的IP所属的网卡</td>\n<td>spring.cloud.ans.interface-name</td>\n<td>无</td>\n<td>当确定需要发布哪块网卡对应的IP地址时，通过此参数配置，值为网卡名</td>\n<td>production</td>\n</tr>\n<tr>\n<td>想要注册的端口</td>\n<td>spring.cloud.ans.port</td>\n<td>无</td>\n<td>想要注册的端口</td>\n<td>production</td>\n</tr>\n<tr>\n<td>注册的权重</td>\n<td>spring.cloud.ans.weight</td>\n<td>1</td>\n<td>数值越大权重越高，取值范围为</td>\n<td>test</td>\n</tr>\n<tr>\n<td>集群</td>\n<td>spring.cloud.ans.cluster</td>\n<td>DEFAULT</td>\n<td>可以通过集群来分别标记服务</td>\n<td>test</td>\n</tr>\n<tr>\n<td>租户环境</td>\n<td>spring.cloud.ans.env</td>\n<td>DEFAULT</td>\n<td>相同租户的相同环境下的服务才能互相发现</td>\n<td>test</td>\n</tr>\n</tbody>\n</table>\n<h2>工作原理</h2>\n<p>下面我们将从 服务注册中心寻址、服务注册与下线、客户端结合、高可用、安全等多个方面来分析原理。</p>\n<h3>服务注册中心寻址</h3>\n<p>配置阿里云的 AccessKey 和 SecretKey 之后，再指定 EDAS 的命名空间，那么程序会在启动的过程中去调用 EDAS 的接口，获取到此命名空间对应的账号权限信息和地址服务器的地址。</p>\n<p>ANS 客户端通过地址服务器就能拿到 ANS Server端的地址。</p>\n<h3>服务注册与下线</h3>\n<p>服务注册的通信协议是 HTTP 协议，在 Spring 启动过程中，收到 EmbeddedServletContainerInitializedEvent 或 ServletWebServerInitializedEvent\n事件时，会将服务注册到 ANS Server 端。</p>\n<p>服务注册成功后，ANS client 端将会主动向 server 端发送心跳，当超过一定时间内 server 端没有收到 client 端的心跳时，会将服务标记成不可用，这样其他 client 在查询时就能发现此服务当前处于不可用的状态。<br>\n如果短时间内，大量 client 与 server 心跳失败，则会出发降级保护机制，服务会暂时不被标记成不可用的状态。</p>\n<p>当应用程序停止时，收到 ContextClosedEvent 事件后，ANS client 会调用 server 端的反注册接口，将此服务下线。</p>\n<h3>客户端结合</h3>\n<p>与客户端结合的方式， ans starter已经实现自动与 Ribbon 组件的结合。</p>\n<p>Ribbon的关键接口有下面三个:</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>提供的功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>ServerList</td>\n<td>提供 getInitialListOfServers 和 getUpdatedListOfServers 方法，获取和刷新 serverList。</td>\n</tr>\n<tr>\n<td>IRule</td>\n<td>选择出一个服务节点</td>\n</tr>\n<tr>\n<td>IPing</td>\n<td>提供 isAlive 方法，负责探测serverList中节点是否可用</td>\n</tr>\n</tbody>\n</table>\n<p>目前 ans-starter 在 spring context 中默认实例化了一个 AnsServerList。AnsServerList 实现了 Ribbon 的 ServerList<Server> 接口。</p>\n<pre><code>@Bean\n@ConditionalOnMissingBean\npublic ServerList&lt;Server&gt; ribbonServerList(IClientConfig config) {\n    AnsServerList serverList = new AnsServerList(config.getClientName());\n    return serverList;\n}\n</code></pre>\n<p>如果您有其他需求，可以自行实现 Ribbon 的接口，或者直接在 github 上通过 issue 向我们提需求，我们评估通过后会加上此功能。</p>\n<h3>高可用实现</h3>\n<h4>服务端高可用</h4>\n<p>ANS作为分布式系统，服务端高可用包含以下几个方面：</p>\n<ul>\n<li>集群内机器数据对等，每台机器存储全量数据；</li>\n<li>支持机房容灾功能，即一个集群中的某个机房内的机器全部挂掉不影响服务；</li>\n<li>服务端异常自动探测，一旦某个机器挂了，该机器相关的任务（如健康检查）自动漂移到其他机器；</li>\n</ul>\n<h4>客户端高可用</h4>\n<p>ANS 为了保证高可用，在客户端高可用方面同样做了很多工作，以应对不同场景的异常情况。</p>\n<ul>\n<li>\n<p>推空保护，当客户端收到服务端推送的空数据时，忽略掉该数据，使用上次的数据；</p>\n</li>\n<li>\n<p>本地内存缓存，当运行时与服务注册中心的连接丢失或服务注册中心完全宕机，仍能正常地调用服务。</p>\n</li>\n<li>\n<p>本地缓存文件，当应用与服务注册中心发生网络分区或服务注册中心完全宕机后，应用进行了重启操作，内存里没有数据，此时应用可以通过读取本地已落盘持久化的数据来获取到最后一次订阅到的内容。</p>\n</li>\n<li>\n<p>本地容灾文件夹。正常的情况下，容灾文件夹内是没有内容的。当服务端完全宕机且长时间不能恢复，同时服务提供者又发生了很大的变更时，可以通过在容灾文件夹内添加文件的方式来开启本地容灾。此时客户端会忽略原有的本地缓存文件，只从本地容灾文件中读取配置。极端情况下，服务端完全不可用时，可以通过修改缓存文件的方式达到支持服务发布变更的目的。</p>\n</li>\n</ul>\n<h3>安全的实现</h3>\n<p>EDAS 服务注册发现组件，结合 EDAS 已有的安全功能，在每次注册、心跳和查询请求中都添加了验签鉴权的操作，保护了服务的安全性。</p>\n<p>所以如果您发现您配置的权限信息都无误，但是运行文档中的 Demo 却注册失败了。则可能是由于您本机的时间不准确，从而导致验签鉴权失败。此时您需要校正本机的时间，建议打开时间自动同步功能。</p>\n<h2>FAQ</h2>\n<h4>问：为什么我的服务注册总是失败？</h4>\n<h4>答：如果您在确认账号信息都准确无误的情况下，但是运行此文档中的 Demo 却注册失败了。有可能是由于您本机的时间不准确，从而导致验签鉴权失败。此时您需要校正本机的时间，建议打开时间自动同步功能。</h4>\n'},{filename:"Nacos-is-Coming.md",__html:'<h1>支持Dubbo生态发展，阿里巴巴启动新的开源项目 Nacos</h1>\n<h2>贡献Dubbo生态，阿里Nacos开源计划</h2>\n<p>在上周六的Aliware技术行上海站Dubbo开发者沙龙上，阿里巴巴高级技术专家郭平(坤宇)宣布了阿里巴巴的一个新开源计划，阿里巴巴计划在7月份开启一个名叫Nacos的新开源项目, 在活动演讲中，坤宇介绍了这个开源项目的初衷，他表示 “将通过Nacos项目将阿里巴巴在建设共享服务体系中使用的服务发现、配置及服务管理平台贡献给开源社区，通过打造Dubbo + Nacos的经典组合进一步释放Dubbo在云原生及Service Mesh时代中，在大规模微服务治理、流量治理、服务集成与服务共享等服务平台能力建设上的威力，同时Nacos会非常关注对主流开源社区，如Spring Cloud和Kubernetes云原生体系的无缝对接与支持”。该项目预计在7月中旬之前开放首个测试预览版本，并计划在未来6~8个月release的0.8版本开始达到生产可用的状态。</p>\n<p>活动的 <a href="http://www.itdks.com/dakashuo/playback/2307">视频回放</a></p>\n<h2>什么是 Nacos /nɑ:kəʊs/?</h2>\n<p>Nacos 是阿里巴巴的新开源项目，其核心定位是 “一个更易于帮助构建云原生应用的动态服务发现、配置和服务管理平台”。</p>\n<p><img src="https://cdn.yuque.com/lark/0/2018/png/15914/1530083408486-b4698533-8e69-4e0a-9f3a-fdb1cdfbd290.png" alt="Screen Shot 2018-06-27 at 15.09.35.png"></p>\n<p>Nacos 有三大主要功能:</p>\n<ul>\n<li>服务发现与服务管理</li>\n</ul>\n<p>在采用以“服务(Service)”为中心的诸如微服务及云原生方式的现代应用架构时，动态服务发现至关重要。 Nacos同时支持基于DNS和基于RPC（如Dubbo/gRPC）的服务发现，并为您提供服务的实时的健康检查以防止将请求发送给不健康的主机，基于Nacos您也可以更方便的实现服务断路器。Nacos提供的强大的服务的元数据管理，路由及流量管理策略也能够帮助您更好的构建更强壮的微服务平台。</p>\n<ul>\n<li>动态配置管理</li>\n</ul>\n<p>动态配置服务允许您在所有环境中以集中和动态的方式管理所有应用程序或服务的配置。动态配置消除了配置更新时重新部署应用程序和服务的需要。可以更方便的帮助您实现无状态服务，更轻松地实现按需弹性扩展服务实例。</p>\n<ul>\n<li>动态DNS服务</li>\n</ul>\n<p>支持权重路由的动态DNS服务使您可以更轻松地在数据中心内的生产环境中实施中间层负载平衡，灵活的路由策略，流量控制和简单的DNS解析服务，帮助您更容易的实现DNS-based服务发现。</p>\n<h2>为什么开源 Nacos</h2>\n<p>阿里巴巴为什么选择这么一个时间点开源Nacos，其背后的思考是什么，坤宇也给出了详细的解读，在演讲中，坤宇表示主意基于以下几点:</p>\n<ul>\n<li><strong>围绕着Service为中心的分布式基础设施正在变的越来越重要</strong></li>\n</ul>\n<p><img src="https://cdn.yuque.com/lark/0/2018/png/15914/1530077340492-513a25c0-51d0-494f-b39d-6f615d7e3915.png" alt="Screen Shot 2018-06-27 at 13.28.09.png"></p>\n<p>世界正在变的更快，创新和市场竞争的节奏正在变得愈发剧烈，如何超快速实现业务增长成为商业竞争的主旋律，几乎一夜之间共享单车就火遍全国，不到几年滴滴就改变了我们的打车方式，腾讯三班倒实现全民“吃鸡”，现在企业估值在从0到100亿所需的时间越来越短，而企业的平均寿命从标普的数据来看却从上世纪60年代的60年下降到了今天的15年，一切都表示创新和竞争的速度和烈度在加强。</p>\n<p>另一方面技术基础设施的敏捷和有效性在商业成功的要素上占据的比重越来越大，云计算在资源和服务交付模式上的变革，带来了效率的革命性提升，带来了更敏捷的基础设施（创业不用再买机器并找机房托管，从以前的半年准备周期到现在在云上的小时级创建全套服务），而在应用架构层面，微服务架构模式带来的灵活性、韧劲，快速组合和聚合原子服务从而创新，给业务快速创新和试错提供了条件，已经被越来越多的应用平台证明其有效性，技术基础设施的更敏捷，给商业的敏捷和商业的竞争优势提供了基础。</p>\n<p>在今天，无论是云计算，微服务还是围绕Kubernetes为中心的云原生，都在强调以“服务”为内核的应用架构模式，如果说15年前我们在讨论“一切皆是对象”构建单体系统，那么今天我们就是在谈论“一切皆是服务”，10年前淘宝服务化改造顺应了这种趋势，8年前微服务架构思想也顺应了这个趋势，今天面向“服务”的各种分布式基础设施正在变得越来越重要，站在阿里巴巴10年的服务化发展经验上看，在大规模服务发现和服务治理和服务共享领域现有的开源解决方案是不是都已经非常完美了呢？根据阿里巴巴服务化走过的这些年的生产经验来看，我们觉得并没有。</p>\n<ul>\n<li><strong>阿里巴巴在 &quot;共享服务体系&quot; 建设上的经验可以在各个行业大规模复用</strong></li>\n</ul>\n<p><img src="https://cdn.yuque.com/lark/0/2018/png/15914/1530077414293-3d22cd01-6e3c-49d1-82ea-ad2f8d443cf9.png" alt="Screen Shot 2018-06-27 at 13.29.52.png"></p>\n<p>阿里巴巴中台理念和体系，与云原生在精神的“道”上完全契合，即“厚技术平台，薄应用” 支持业务的快速创新与试错，从而赢得市场，中台体系倡导双引擎架构，略过“大数据”不谈，但看业务中台，就是一个大的以“服务”为中心的共享服务平台，在线服务沉淀业务数据，同步到大数据平台计算和挖掘，大数据平台则通过数据回馈，指导业务及服务的创新，支成可沉淀和可共享“服务”体系的服务注册与服务治理平台是这个体系的关键要素之一。</p>\n<ul>\n<li><strong>“服务治理，服务沉淀、服务共享和服务的可持续发展”是“共享服务体系”的核心价值主张</strong></li>\n</ul>\n<p>支持创新从小苗长成参天大树，服务平台不断演进，这一切需要一个强大的服务平台和服务基础设施的支撑。</p>\n<p><img src="https://cdn.yuque.com/lark/0/2018/png/15914/1530077444757-d36f344d-d3ae-4df0-808f-8500b4320e8d.png" alt="Screen Shot 2018-06-27 at 13.30.25.png"></p>\n<ul>\n<li><strong>阿里巴巴将通过Dubbo + Nacos以及一系列开源项目打造服务发现、服务及流量管理、服务共享平台</strong></li>\n</ul>\n<p><img src="https://cdn.yuque.com/lark/0/2018/png/15914/1530077476468-4ce30dd9-0da7-414a-875d-acc151739c1d.png" alt="Screen Shot 2018-06-27 at 13.30.58.png"></p>\n<h2>Nacos 与 主流开源生态的关系</h2>\n<p>Nacos 不会是个封闭的体系，除了对于阿里开源生态体系如Dubbo等自身的支持，也非常强调融入其它的开源生态，这里就包括Java的微服务生态体系Spring Cloud，Kubernetes/CNCF云原生生态体系，正如Nacos的未来全景图展示的那样</p>\n<p><img src="https://cdn.yuque.com/lark/0/2018/png/15914/1530077509217-d4fec359-8a41-4c51-a986-c44e06d16950.png" alt="Screen Shot 2018-06-27 at 13.31.30.png"></p>\n<ul>\n<li>Dubbo + Nacos， 专为Dubbo而生的注册中心与配置中心</li>\n</ul>\n<p>在阿里巴巴生产环境上，Dubbo和Nacos天然就是长在一起的，因为Nacos的缺失，传统的注册中心解决方案让Dubbo在服务治理、流量治理、服务运营和管理等方面的威力被限制和削弱了，Nacos的开源和开放会在采用Dubbo的用户环境中释放这些威力</p>\n<p><img src="https://cdn.yuque.com/lark/0/2018/png/15914/1530077613925-04d767fd-ec95-4fe2-8249-ce8650fbe372.png" alt="Screen Shot 2018-06-27 at 13.31.57.png"></p>\n<ul>\n<li>Nacos 会完全兼容Spring Cloud</li>\n</ul>\n<p>Nacos会无缝支持Spring Cloud，为Spring Cloud用户其提供更简便的配置中心和注册中心的解决方案，使用Nacos不用再仅仅为服务和配置就需要在生产上hold住 Eureka，Spring Cloud Config Server，Git，RabbitMQ/Kafka 起码四个开源产品。</p>\n<p><img src="https://cdn.yuque.com/lark/0/2018/png/15914/1530077646935-7ca8a74d-59e5-4e01-865e-06fd5631e623.png" alt="Screen Shot 2018-06-27 at 13.33.40.png"></p>\n<ul>\n<li>Nacos 支持Kubernetes DNS-based Service Discovery</li>\n</ul>\n<p>在演讲中坤宇也表示，阿里巴巴这么多年在VIPServer DNS-based Service Discovery上的实践证明，在云原生时代，应用会更关注与基础设施的解耦合、多语言乃至多云的诉求，服务发现的未来一定是基于标准的DNS协议做，而不是像Eureka或者像ZooKeeper这样的私有API或者协议做, 同时在云上，在服务发现场景中，注册中心更关注的是可用性而不是数据一致性，所以Nacos会首推DNS-based Servcie Discovery，并优先关注可用性，而这也正是Nacos可以无缝融合进Kubernetes服务发现体系的原因所在</p>\n<p><img src="https://cdn.yuque.com/lark/0/2018/png/15914/1530077691493-4dae9605-6886-4307-bc9d-16ba1cceb7ac.png" alt="Screen Shot 2018-06-27 at 13.34.18.png"></p>\n<ul>\n<li>Nacos 会填补Spring Cloud 体系与 Kubernetes 体系的鸿沟</li>\n</ul>\n<p>未来会有越来越多java生态的用户会选择 Kubernetes+Spring Cloud 组合，但不幸的是，在服务发现和配置管理的解决方案上，这2个体系都采用了完全不同的方案，这给同时采用2个体系的用户在注册中心和配置中心的需求上带来了非常大的不必要的复杂性。Nacos会尝试填补2者的鸿沟，以便在2套体系下可以采用同一套服务发现和配置管理的解决方案，这将大大的简化使用和维护的成本。</p>\n<p><img src="https://cdn.yuque.com/lark/0/2018/png/15914/1530077731231-85a58c0e-ff5c-45a1-9bc8-b989e2b09d55.png" alt="Screen Shot 2018-06-27 at 13.35.05.png"></p>\n<ul>\n<li>Nacos 与 Service Mesh</li>\n</ul>\n<p><img src="https://cdn.yuque.com/lark/0/2018/png/15914/1530077754298-39bbbdd0-c7af-434a-b189-8fd7ac958b43.png" alt="Screen Shot 2018-06-27 at 13.35.38.png"></p>\n<h2>Nacos 部分特性预览</h2>\n<p>同时在会上，坤宇对Nacos 1.0版本的部分特性给大家做了预览</p>\n<p><img src="https://cdn.yuque.com/lark/0/2018/png/15914/1530077784470-27f0e268-8d1f-443a-b1a5-3d59e15ab8f4.png" alt="Screen Shot 2018-06-27 at 13.36.06.png"></p>\n<p>每个产品都有自己的风格和标签，坤宇在演讲中表示，团队会通过持续的贡献和努力，希望未来给Nacos贴上四个方面的标签</p>\n<p><img src="https://cdn.yuque.com/lark/0/2018/png/15914/1530077851626-25444089-c027-4b89-a606-2e693b4e052d.png" alt="Screen Shot 2018-06-27 at 13.37.10.png"></p>\n<p>在部署形态上，Nacos会支持多种部署形态，包括注册中心与配置中心的分离部署，同时在阿里云上提供Nacos的SaaS化部署服务，感兴趣的可以直接在阿里云上开通账户免费体验Nacos服务，在开源与商业化版本差别上，商业化的ACM以及EDAS ANS更强调与阿里云其它云服务以及其它Aliware PaaS的商业产品的集成体验以及提供商业服务。</p>\n<p><img src="https://cdn.yuque.com/lark/0/2018/png/15914/1530077875162-26cfa0e2-3da0-473e-98b9-190aa6d6d97a.png" alt="Screen Shot 2018-06-27 at 13.36.37.png"></p>\n<h2>Nacos 的主要产品里程碑及计划</h2>\n<blockquote>\n<p>罗马不是一天建成的，吾将上下而求索</p>\n</blockquote>\n<p>因为Nacos是脱胎于阿里巴巴的生产代码，整体体系非常庞杂，在代码梳理、重构和剥离与内部的耦合上是一个渐进的过程，所以@坤宇特别提醒社区在Nacos 0.8达到生产可用状态前，不建议用于生产，不过可以在开发和测试环境尝试使用，在0.8版本开始，大家可以放心的用于生产环境，Nacos整体研发计划是在未来6-8个月将达到生产可用的状态，未来会很快启动将Nacos贡献给开源基金会进一步社区化发展。</p>\n<p><img src="https://cdn.yuque.com/lark/0/2018/png/15914/1530077912860-52c7fea4-5285-45a0-a3b8-73ba010c53da.png" alt="Screen Shot 2018-06-27 at 13.38.13.png"></p>\n<h2>Nacos 与相关开源产品的对比</h2>\n<blockquote>\n<p>君子和而不同</p>\n</blockquote>\n<p>如上面对整体业务及技术形式的判断，我们可以看到 Nacos 与同类竞品的主要不同主要在于理念，@坤宇介绍说，严格来说这些市面上的产品并不与Nacos完全对标，只是与Nacos里面的服务发现部分对标，Nacos的未来更看重在这些产品的基础上构建服务平台的能力，而不仅仅是在基础的服务发现能力上。</p>\n<p><img src="https://cdn.yuque.com/lark/0/2018/png/15914/1530077938157-00e6b34f-9a16-498c-9b89-cc48f6d6bb73.png" alt="Screen Shot 2018-06-27 at 13.38.41.png"></p>\n<h2>社区化发展，欢迎加入并贡献社区</h2>\n<blockquote>\n<p>DISS is cheap, show me your hand\n比吐槽更重要的是搭把手，参与社区一起发展Nacos</p>\n</blockquote>\n<p>与阿里巴巴早期的开源不同，阿里巴巴新一轮的开源包括RocketMQ，Pouch Container，Dubbo, Nacos等开源产品更强调社区化的发展与社区的多样性，鼓励更多的公司和更多的开发者参与到开源项目中来，依托于社区将产品做得更好，同时一开始就会关注国际化，与国外同类产品的直面竞争。</p>\n<p>Nacos初步计划，在第一年就吸收至少超过5名来自其它公司的PMC,至少10名的外部Committer, 而且Nacos处在项目开源的初期，有大把的空间让有想法、有热情、有能力的开发者参与进来，Nacos本身在很多方面都急需要社区的帮助，这里面就急需包括前端及UI建设，Spring Cloud、Kubernetes、Service Mesh体系融合与集成，多语言客户端等各方面的技术领导者的参与，如果您对Nacos这个开源项目感兴趣，欢迎加入Nacos社区。你可以通过扫“超哥”的微信二维码，让“超哥” 帮你加入 “Nacos社区交流群”</p>\n<p><img src="https://cdn.yuque.com/lark/0/2018/png/15914/1530077965587-8f4e3100-bdd4-469a-9ea0-7af7061bc9ef.png" alt="Screen Shot 2018-06-27 at 13.39.09.png"></p>\n<h2>感谢所有未来给我们帮助的朋友</h2>\n<p><img src="https://cdn.yuque.com/lark/0/2018/png/15914/1530078016801-65ce72c1-c135-42b6-8076-a046f7829ba7.png" alt="Screen Shot 2018-06-27 at 13.39.40.png"></p>\n<h2>References</h2>\n<ul>\n<li><a href="https://yq.aliyun.com/articles/601745">阿里巴巴为什么不用 ZooKeeper 做服务发现？</a></li>\n<li><a href="https://yq.aliyun.com/articles/226238?spm=5176.163362.847322.3.5a8925397in790">现代应用架构中的配置管理面临的挑战和应对之道</a></li>\n<li><a href="http://jm.taobao.org/2016/06/02/zhangwensong-and-load-balance/">章文嵩博士和他背后的负载均衡帝国</a></li>\n<li><a href="https://blog.csdn.net/heyc861221/article/details/80126013">VIPServer：阿里智能地址映射及环境管理系统详解</a></li>\n</ul>\n'},{filename:"alibaba-configserver.md",__html:'<h1>《阿里巴巴服务注册中心产品ConfigServer 10年技术发展回顾》</h1>\n<p>作者：阿里巴巴高级技术专家，许真恩(慕义)</p>\n<p>文章概要：本文简单描述了Eureka1.0存在的架构问题，Eureka2.0设想的架构。详细回顾了阿里巴巴的服务注册中心ConfigServer产品从2008年建设元年至今经历的关键架构演进。通过这个文章你会对基于AP模式的注册中心在技术发展过程中将会碰到的问题有所感知。</p>\n<h1>Eureka1.0架构存在的问题</h1>\n<p>Eureka作为Netflix公司力推和SpringCloud微服务标配的注册中心开源解决方案，其<span data-type="color" style="color:rgb(36, 41, 46)">Eureka 2.0 (Discontinued)的消息在社区引起了不小的骚动；其实早在2015年社区就已经放出了2.0架构的升级设想，但是3年的时间过去，等到的确是Discontinued的消息，虽然2.0的代码在github的主页上也已经放出，但是告诫用户要自行承担当中的使用风险。我想不会有人真的把2.0直接投入到生产中使用。</span></p>\n<p>对于为什么要做Eureka2.0，其官方的wiki中的Why Eureka 2.0和Eureka 2.0 Improvements做了如下的说明</p>\n<ul>\n<li>Only support homogenous client views: Eureka servers only expects the client to always get the entire registry and does not allow to get specific applications/VIP addresses. This imposes a memory limitation on all clients registering with Eureka, even if they need a very small subset of the Eureka’s registry.</li>\n<li>Only supports scheduled updates: Eureka client follows a poll model to fetch updates from the server routinely. This imposes an overhead on the client of doing a scheduled call to the server, even if there are no changes and also delays the updates by the poll interval.</li>\n<li>Replication algorithm limits scalability: Eureka follows a broadcast replication model i.e. all the servers replicate data and heartbeats to all the peers. This is simple and effective for the data set that eureka contains however replication is implemented by relaying all the HTTP calls that a server receives as is to all the peers. This limits scalability as every node has to withstand the entire write load on eureka.</li>\n</ul>\n<p>Although Eureka 2.0 provides a more richer feature set, the above limitations are the major driving factors for the changes proposed in this version.\nBased on the above motivations, Eureka 2.0 achieves the following improvements:</p>\n<ul>\n<li>Interest based subscription model for registry data: A client of Eureka is able to select a part of the instance registry in which it is interested in and the eureka server only sends information about that part of the registry. Eg: A client can say I am only interested in application “WebFarm” and then the server will only send information about WebFarm instances. Eureka server provides various selection criterions and a way to update this interest set dynamically.</li>\n<li>Push model from the server for any changes to the interest set: Instead of the current pull model from the client, Eureka servers pushes updates for changes to the interest set, to the client.</li>\n<li>Optimized replication: As Eureka 1.0, Eureka 2.0 also follows a broadcast replication model i.e. every node replicates data to all other nodes. However, the replication algorithm is much more optimized eliminating the need of sending heartbeats for every instance in the registry. This drastically reduce the replication traffic and achieves much higher scalability.</li>\n<li>Auto-scaled Eureka servers: Eureka 2.0 divides the read (discovery of data) and write (registration) concerns into separate clusters. Since, the write load is predictable (proportional to the number of instances in a region), the write cluster is pre-scaled. On the other hand, read load is unpredictable (proportional to subscriptions from clients) and hence the read farm is auto-scaled.</li>\n<li>Audit log: Eureka 2.0 provides an elaborate audit log for any change done to the registry. This helps Eureka owners as well as users to get insight into debugging the state of individual application instances as exists in Eureka. The audit log by default is persisted to a log file, but different persistent storages can be plugged-in.</li>\n<li>Dashboard: Eureka 2.0 provides a rich dashboard (as opposed to very rudimentary dashboard of Eureka 1.0) with insights into Eureka internals with respect to registry views, server health, subscription state, audit log, etc.</li>\n</ul>\n<p>简单翻译总结，也就是Eureka1.0的架构主要存在如下的不足：</p>\n<ul>\n<li>订阅端拿到的是服务的全量的地址：这个对于客户端的内存是一个比较大的消耗，特别在多数据中心部署的情况下，某个数据中心的订阅端往往只需要同数据中心的服务提供端即可。</li>\n<li>pull模式：客户端采用周期性向服务端主动pull服务数据的模式（也就是客户端轮训的方式），这个方式存在实时性不足以及无谓的拉取性能消耗的问题。</li>\n<li>一致性协议：Eureka集群的多副本的一致性协议采用类似“异步多写”的AP协议，每一个server都会把本地接收到的写请求（register/heartbeat/unregister/update）发送给组成集群的其他所有的机器（Eureka称之为peer），特别是hearbeat报文是周期性持续不断的在client-&gt;server-&gt;all peers之间传送；这样的一致性算法，导致了如下问题\n<ul>\n<li>每一台Server都需要存储全量的服务数据，Server的内存明显会成为瓶颈。</li>\n<li>当订阅者却来越多的时候，需要扩容Eureka集群来提高读的能力，但是扩容的同时会导致每台server需要承担更多的写请求，扩容的效果不明显。</li>\n<li>组成Eureka集群的所有server都需要采用相同的物理配置，并且只能通过不断的提高配置来容纳更多的服务数据</li>\n</ul>\n</li>\n</ul>\n<p>Eureka2.0主要就是为了解决上述问题而提出的，主要包含了如下的改进和增强</p>\n<ul>\n<li>数据推送从pull走向push模式，并且实现更小粒度的服务地址按需订阅的功能。</li>\n<li>读写分离：写集群相对稳定，无需经常扩容；读集群可以按需扩容以提高数据推送能力。</li>\n<li>新增审计日志的功能和功能更丰富的Dashboard。</li>\n</ul>\n<p>Eureka1.0版本存在的问题以及Eureka2.0架构设想和阿里巴巴内部的同类产品ConfigServer所经历的阶段非常相似（甚至Eureka2.0如果真的落地后存在的问题，阿里巴巴早已经发现并且已经解决），下面我带着你来回顾一下我们所经历过的。</p>\n<h1>阿里巴巴服务注册中心ConfigServer技术发现路线</h1>\n<p>阿里巴巴早在2008就开始了服务化的进程，在那个时候就就已经自研出服务发现解决方案（内部产品名叫ConfigServer）。</p>\n<p>当2012年9月1号Eureka放出第一个1.1.2版本的时候，我们把ConfigServer和Eureka进行了深度的对比，希望能够从Eureka找到一些借鉴来解决当时的ConfigServer发展过程中碰到的问题（后面会提到）；然而事与愿违，我们已经发现Eureka1.x架构存在比较严重的扩展性和实时性的问题（正如上面所描述的），这些问题ConfigServer当时的版本也大同小异的存在，我们在2012年底对ConfigServer的架构进行了升级来解决这些问题。</p>\n<p>当2015年Eureka社区放出2.0架构升级的声音的时候，我们同样第一时间查看了2.0的目标架构设计，我们惊奇的发现Eureka的这个新的架构同2012年底ConfigServer的架构非常相似，当时一方面感慨“英雄所见略同”，另一方也有些失望，因为ConfigServer2012年的架构早就无法满足阿里巴巴内部的发展诉求了。</p>\n<p>下面我从头回顾一下，阿里巴巴的ConfigServer的技术发展过程中的几个里程碑事件。</p>\n<h2>2008年，无ConfigServer的时代</h2>\n<p>借助用硬件负载设备F5提供的vip功能，服务提供方只提供vip和域名信息，调用方通过域名方式调用，所有请求和流量都走F5设备。</p>\n<p>遇到的问题：</p>\n<ul>\n<li>负载不均衡：对于长连接场景，F5不能提供较好的负载均衡能力。如服务提供方发布的场景，最后一批发布的机器，基本上不能被分配到流量。需要在发布完成后，PE手工去断开所有连接，重新触发连接级别的负载均衡。</li>\n<li>流量瓶颈：所有的请求都走F5设备，共享资源，流量很容易会打满网卡，会造成应用之间的相互影响。</li>\n<li>单点故障：F5设备故障之后，所有远程调用会被终止，导致大面积瘫痪。</li>\n</ul>\n<h2>2008年，ConfigServer单机版V1.0</h2>\n<p>单机版定义和实现了服务发现的关键的模型设计（包括服务发布，服务订阅，健康检查，数据变更主动推送，这个模型至今仍然适用），应用通过内嵌SDK的方式接入实现服务的发布和订阅；这个版本很重要的一个设计决策就是服务数据变更到底是pull还是push的模式，我们从最初就确定必须采用push的模式来保证数据变更时的推送实时性（Eureka1.x的架构采用的是pull的模式）</p>\n<p>当时，HSF和Notify就是采用单机版的ConfigServer来完成服务的发现和topic的发现。单机版的ConfigServer和HSF、Notify配合，采用服务发现的技术，让请求通过端到端的方式流动，避免产生流量瓶颈和单点故障。ConfigServer可以动态的将服务地址推送到客户端，服务调用者可以知道所有提供此服务的机器，每个请求都可以通过随机或者轮询的方式选择服务端，做到请求级别的负载均衡。这个版本已经能很好的解决F5设备不能解决的三个问题。</p>\n<p>但是单机版本的问题也非常明显，不具备良好的容灾性；</p>\n<h2>2009年初，ConfigServer单机版V1.5</h2>\n<p>单机版的ConfigServer所面临的问题就是当ConfigServer在发布/升级的时候，如果应用刚好也在发布，这个时候会导致订阅客户端拿不到服务地址的数据，影响服务的调用；所以当时我们在SDK中加入了本地的磁盘缓存的功能，应用在拿到服务端推送的数据的时候，会先写入本地磁盘，然后再更新内存数据；当应用重启的时候，优先从本地磁盘获取服务数据；通过这样的方式解耦了ConfigServer和应用发布的互相依赖；这个方式沿用至今。（我很惊讶，Eureka1.x的版本至今仍然没有实现客户端磁盘缓存的功能，难道Eureka集群可以保持100%的SLA吗？）</p>\n<h2>2009年7月，ConfigServer集群版本V2.0</h2>\n<p>ConfigServer的集群版本跟普通的应用有一些区别：普通的应用通过服务拆分后，已经属于无状态型，本身已经具备良好的可扩展性，单机变集群只是代码多部署几台；ConfigServer是有状态的，内存中的服务信息就是数据状态，如果要支持集群部署，这些数据要不做分片，要不做全量同步；由于分片的方案并没有真正解决数据高可用的问题（分片方案还需要考虑对应的failover方案），同时复杂度较高；所以当时我们选择了单机存储全量服务数据全量的方案。为了简化数据同步的逻辑，服务端使用客户端模式同步：服务端收到客户端请求后，通过客户端的方式将此请求转发给集群中的其他的ConfigServer，做到同步的效果，每一台ConfigServer都有全量的服务数据。</p>\n<p>这个架构同Eureka1.x的架构惊人的相似，所以很明显的Eureka1.x存在的问题我们也存在；当时的缓解的办法是我们的ConfigServer集群全部采用高配物理来部署。</p>\n<h2>2010年底，ConfigServer集群版V2.5</h2>\n<p>基于客户端模式在集群间同步服务数据的方案渐渐无以为继了，特别是每次应用在发布的时候产生了大量的服务发布和数据推送，服务器的网卡经常被打满，同时cmsgc也非常频繁；我们对数据同步的方案进行了升级，去除了基于客户端的同步模式，采用了批量的基于长连接级别的数据同步+周期性的renew的方案来保证数据的一致性（这个同步方案当时还申请了国家专利）；这个版本还对cpu和内存做了重点优化，包括同步任务的合并，推送任务的合并，推送数据的压缩，优化数据结构等；</p>\n<p>这个版本是ConfigServer历史上一个比较稳定的里程碑版本。</p>\n<p><span data-type="color" style="color:rgb(36, 41, 46)">但是随着2009年天猫独创的双十一大促活动横空出世，服务数量剧增，应用发</span>布时候ConfigServer集群又开始了大面积的抖动，还是体现在内存和网卡的吃紧，甚至渐渐到了fullgc的边缘；为了提高数据推送能力，需要对集群进行扩容，但是扩容的同时又会导致每台服务器的写能力下降，我们的架构到了“按下葫芦浮起瓢”的瓶颈。</p>\n<h2>2012年底，ConfigServer集群版V3.0</h2>\n<p>在2011年双十一之前我们完成了V3架构的落地，类似Eureka2.0所设计的读写分离的方案，我们把ConfigServer集群拆分成session和data两个集群，客户端分片的把服务数据注册到session集群中，session集群会把数据异步的写到data集群，data集群完成服务数据的聚合后，把压缩好的服务数据推送到session层缓存下来，客户端可以直接从session层订阅到所需要的服务数据；这个分层架构中，session是分片存储部分的服务数据的（我们设计了failover方案），data存储的是全量服务数据（天生具备failover能力）；</p>\n<p>data集群相对比较稳定，不需要经常扩容；session集群可以根据数据推送的需求很方便的扩容（这个思路和Eureka2.0所描述的思路是一致的）；session的扩容不会给data集群带来压力的增加。session集群我们采用低配的虚拟机即可满足需求，data由于存储是全量的数据我们仍然采用了相对高配的物理机（但是同V2.5相比，对物理机的性能要求已经答复下降）</p>\n<p>这个版本也是ConfigServer历史上一个划时代的稳定的大版本。</p>\n<h2>2014年，ConfigServer集群版V3.5</h2>\n<p>2013年，阿里巴巴开始落地了异地多活方案，从一个IDC渐渐往多个IDC跨越，随之而来的对流量的精细化管控要求越来越高（比如服务的同机房调用，服务流量的调拨以支持灰度能力等），基于这个背景ConfigServer引入了服务元数据的概念，支持对服务和IP进行元数据的打标来满足各种各样的服务分组诉求。</p>\n<h2>2017年，ConfigServer集群版V4.0</h2>\n<p>V3版本可见的一个架构的问题就是data集群是存储全量的服务数据的，这个随着服务数的与日俱增一定会走到升级物理机配置也无法解决问题的情况（我们当时已经在生产使用了G1的垃圾回收算法），所以我们继续对架构进行升级，基于V3的架构进行升级其实并不复杂；session层的设计保持不变，我们把data进行分片，每一个分片同样按照集群的方式部署以支持failover的能力；</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>ConfigServer</th>\n<th>Eureka</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>2008年</td>\n<td>V1.0：单机版，定义了服务发现的领域模型</td>\n<td></td>\n</tr>\n<tr>\n<td>2009年初</td>\n<td>V1.5：应用和ConfigServer集群发布解耦</td>\n<td></td>\n</tr>\n<tr>\n<td>2009年7月</td>\n<td>V2.0：基于客户端模式同步数据，支持集群部署</td>\n<td></td>\n</tr>\n<tr>\n<td>2010年底</td>\n<td>V2.5：优化集群间数据同步模式，申请国家专利。</td>\n<td></td>\n</tr>\n<tr>\n<td>2012年9月1号</td>\n<td></td>\n<td>Eureka1.0正式开源</td>\n</tr>\n<tr>\n<td>2012年底</td>\n<td>V3.0：支持session和data分层部署</td>\n<td></td>\n</tr>\n<tr>\n<td>2014年</td>\n<td>V3.5：支持异地多活等细分场景</td>\n<td></td>\n</tr>\n<tr>\n<td>2015年</td>\n<td></td>\n<td>Eureka2.0架构升级方案公布</td>\n</tr>\n<tr>\n<td>2017年</td>\n<td>V4.0：支持data分片能力</td>\n<td></td>\n</tr>\n<tr>\n<td>2018年7月</td>\n<td></td>\n<td>Eureka2.0架构升级宣布停止</td>\n</tr>\n</tbody>\n</table>\n<h1>Nacos</h1>\n<p><span data-type="color" style="color:rgb(25, 31, 37)"><span data-type="background" style="background-color:rgb(255, 255, 255)">作为同属于AP类型的注册中心，Eureka和ConfigServer发展过程中所面临的诸多问题有很大的相似性，但是阿里巴巴这些年业务的跨越式发展，每年翻番的服务规模，不断的给ConfigServer的技术架构演进带来更高的要求和挑战，我们有更多的机会在生产环境发现和解决一个个问题的过程中，做架构的一代代升级。我们正在计划通过开源的手段把我们这些年在生产环境上的实践经验通过Nacos(</span></span><a href="http://nacos.io">链接</a>)<span data-type="color" style="color:rgb(25, 31, 37)"><span data-type="background" style="background-color:rgb(255, 255, 255)">产品贡献给社区，一方面能够助力和满足同行们在微服务落地过程当中对工业级注册中心的诉求，另一方面也希望通过开源社区及开源生态的协同发展给ConfigServer带来更多的可能性。</span></span></p>\n<p><span data-type="color" style="color:rgb(25, 31, 37)"><span data-type="background" style="background-color:rgb(255, 255, 255)">炎炎夏日，在Eureka 2.0 (Discontinued) 即将结束的时候，在同样的云原生时代，Nacos却正在迎来新生，技术演进和变迁的趣味莫过于此。</span></span></p>\n<p><span data-type="color" style="color:rgb(25, 31, 37)"><span data-type="background" style="background-color:rgb(255, 255, 255)">Nacos将努力继承Eureka未竟的遗志，扛着AP系注册中心的旗帜继续前行，不同的是Nacos更关注DNS-based Service Discovery以及与Kubernetes体系的融会贯通。</span></span></p>\n<p><span data-type="color" style="color:rgb(25, 31, 37)"><span data-type="background" style="background-color:rgb(255, 255, 255)">我们看不透未来，却仍将与同行们一起上下求索，砥砺前行。</span></span></p>\n<p>最后附上Nacos的架构图。</p>\n<p><img src="https://cdn.yuque.com/lark/0/2018/png/12425/1530856061648-7180b97f-b61d-4127-924e-a0743b9e9d5a.png" alt="屏幕快照 2018-06-28 下午4.58.59.png | center | 748x544"></p>\n'},{filename:"nacos.md",__html:'<h1>Nacos 0.1.0 �汾Review ����</h1>\n<h2>I. ������б�</h2>\n<ul>\n<li>�Ķ������İ����ҹ���bug, ���С�Ӣ�Ĺ����Ὠ���Խ���</li>\n<li>�Ķ���Ӣ�ĵ������ĵ�bug, ���С�Ӣ�ĵ������Ὠ�飨�����ǹ�עӢ�ķ��벻�õĵط�����ΪӢ�Ķ������ǳ���Ա�Լ�ߣ�ģ�</li>\n<li>�����´��� -&gt;������ -&gt; ��Nacos server -&gt; ֹͣNacos server���̣�����Ľ����</li>\n<li>���������Լ����ڵ� Nacos ��Ⱥģʽ������Ľ����</li>\n<li>����ʹ��Nacos Java SDK, ��Java SDK��Ľ�����</li>\n<li>����ʹ��Nacos Open API����OpenAPI��Ľ�����</li>\n<li>���Ը��ݡ���ι���Naocs�ĵ� TODO����һ�� �������̣��������������Ὠ��</li>\n<li>��Nacos�����󡢷�չ�ƻ����뷨��Ҫ���</li>\n</ul>\n<h2>II. ����뷽ʽ</h2>\n<ul>\n<li>\n<p>ɨ�� �����硱 ΢��2΢�룬�ó���������� ��Nacos��������Ⱥ��</p>\n<p><img src="https://cdn.yuque.com/lark/0/2018/png/11189/1532004866850-5e03b901-6d76-4380-b7bf-66e227808bdc.png" alt="΢�Ŷ�ά��"></p>\n</li>\n<li>\n<p>ѡ��I �е�һ�����߶����������</p>\n</li>\n<li>\n<p>�����������BUG֮�󣬰���III�еġ�����Report��ʽ������һ����Ӧ�� github issue, ��ָ�ɸ� @ github�˺�<a href="https://github.com/xuechaos">xuechaos</a></p>\n</li>\n</ul>\n<h2>III. ����Report��ʽ</h2>\n<ul>\n<li>����˵�� TODO</li>\n</ul>\n<h2>IV. ������ʽ</h2>\n<ul>\n<li>��������Ϊ���벢����ͻ�����׵�С��鶨��һЩС��Ʒ���ῼ�ǿ�ݸ���������ͻ�����׵�С���</li>\n<li>�������ᣬ��ϣ���ܱ������ǵİ����ĸм�֮�����һ</li>\n</ul>\n<h2>V. ����˵��</h2>\n<ul>\n<li>���ǲ�ȷ��ÿ��������󶼻ᱻ���ã��������Ǿ����������ͨ���ǻ��ں��ֿ��ǣ����Ľ����������û�в���</li>\n<li>����ͨ���ʼ��б����report issue�ķ�ʽ����������΢��Ⱥ��report���⣬�Ա㽫���ǵĹ�ͨ�����ĵ����͸����׳���</li>\n</ul>\n'}],"en-us":[{filename:"DNS-SD.md",__html:'<h1>微服务架构中基于DNS的服务注册与发现</h1>\n<p>当前，微服务架构已经成为企业尤其是互联网企业技术选型的一个重要参考。微服务架构中涉及到很多模块，本文将重点介绍微服务架构的服务注册与发现以及如何基于DNS做服务发现。最后，简单介绍下阿里巴巴内部是如何基于DNS做服务发现的。</p>\n<h2>服务注册与发现</h2>\n<p>微服务体系中，服务注册与服务发现是两个最核心的模块。服务A调用服务B时，需要通过服务发现模块找到服务B的IP和端口列表，而服务B的实例在启动时需要把提供服务的IP和端口注册到服务注册中心。一个典型的结构如下图：</p>\n<p><img src="https://cdn.yuque.com/lark/0/2018/png/7601/1525185623334-8fbf69bb-00df-4202-a951-c1ee9caace88.png" alt="image.png | left | 733x470"></p>\n<h3>服务注册</h3>\n<p>目前，流行的注册中心比较多，常见的有zookeeper、ectd、consul、eureka等。服务注册通常有三种：自注册、第三方注册、注册中心主动同步。</p>\n<ul>\n<li>自注册\n自注册，顾名思义，就是服务提供方在启动服务时自己把提供服务的IP和端口发送到注册中心，并通过心跳方式维持健康状态；服务下线时，自己把相应的数据删除。典型的像使用eureka客户端发布微服务。</li>\n<li>第三方注册\n第三方注册是指，存在一个第三方的系统负责在服务启动或停止时向注册中心增加或删除服务数据。典型的用法是devops系统或容器调度系统主动调注册中心接口注册服务；</li>\n<li>注册中心主动同步\n与第三方注册方式类似，主动注册方式是指注册中心和调度或发布系统打通，主动同步最新的服务IP列表；一个例子是kubernetes体系中，coredns订阅api server数据。</li>\n</ul>\n<h3>服务发现</h3>\n<p>在真正发起服务调用前，调用方需要从注册中心拿到相应服务可用的IP和端口列表，即服务发现。服务发现从对应用的侵入性上可以分为两大类：</p>\n<ul>\n<li>SDK-Based\n这类的服务发现方式，需要调用方依赖相应的SDK，显式调用SDK代码才可以实现服务调用，即对业务有侵入性，典型例子如eureka、zookeeper等。</li>\n<li>DNS-Based\nDNS本身是一种域名解析系统，可以满足简单的服务发现场景，如双方约定好端口、序列化协议等等。但是，这远远不能满足真正的微服务场景需求。近几年，基于dns的服务发现渐渐被业界提了出来。后面将重点介绍基于DNS的服务发现及阿里巴巴的实践。</li>\n</ul>\n<h2>基于DNS的服务发现</h2>\n<p>DNS协议是目前最为通用的协议之一，几乎所有操作系统都会有DNS客户端实现。所以，其天然具有跨语言特性。这也是快速接入微服务体系最快的一个方式。要基于DNS做服务发现，首先注册中心的数据应该可以以DNS的数据格式暴露出来。让任何系统的DNS 客户端都可以通过DNS协议获取服务列表。</p>\n<p>基于DNS的服务发现方式，大致可以归结两类：</p>\n<h3>独立DNS服务器</h3>\n<p>独立DNS Server模式的基本架构如下图：</p>\n<p><img src="https://cdn.yuque.com/lark/0/2018/png/7601/1525185653048-094f815d-47af-409e-ac21-6662e20e76f4.png" alt="image.png | left | 747x469"></p>\n<p>如上图所示，这种架构中，需要独立的DNS服务器。DNS服务器从注册中心获取所有已注册的服务及对应的IP端口列表。调用方Service A 通过DNS查询某个服务下的IP列表，然后发起调用。</p>\n<p>这种类型的服务发现方式优缺点分别如下：</p>\n<ul>\n<li>优点\n<ul>\n<li>集中的DNS服务器，便于升级维护</li>\n</ul>\n</li>\n<li>缺点\n<ul>\n<li>对DNS服务器性能要求高</li>\n<li>这种情况下一般需要LVS设备为DNS服务器集群做请求转发，存在单点问题</li>\n</ul>\n</li>\n</ul>\n<h3>DNS Filter</h3>\n<p>DNS Filter模式我们定义为把DNS服务器集成到服务调用方机器或容器里，如下图所示：</p>\n<p><img src="https://cdn.yuque.com/lark/0/2018/png/7601/1525185676597-acaebac3-2b65-48a3-bdbf-7d27af7f1038.png" alt="image.png | left | 747x469"></p>\n<p>这种模式中，首先要保证ServiceA的DNS查询都被拦截到本机的DNS服务器上（127.0.0.1:53），在获取到服务的IP列表后发起调用。由于这种方式把DNS服务器前置到实际调用的机器上，所以它解决了独立DNS服务器模式的单点问题，完全P2P的模式。但由于需要在应用机器上安装DNS服务器，其维护和升级成本较前者高一些。</p>\n<h3>阿里基于DNS的服务发现实践</h3>\n<p>阿里巴巴早在2014年就开始了基于DNS做服务发现的尝试了，现在已经形成了较为成熟的模式。阿里内部以VIPServer作为注册中心，并开发了DNS Filter，部署在应用容器内。目前已经有超过20w个机器或容器上安装了DNS Filter，支持了几乎所有REST服务发现。</p>\n<h4>注册中心 VIPServer</h4>\n<p>VIPServer是阿里中间件软负载团队自研的服务注册中心，按照第一章的分类，VIPServer同时支持三种模式的服务注册，并且均有相当规模的应用。除此之外，VIPServer具备如下特性：</p>\n<ul>\n<li>主动与被动健康检查\nVIPServer同时支持主动与被动健康检查。主动健康检查是指VIPserver服务端主动定期发送健康检查探测包，探测服务提供方是否可以正常提供服务。用户可以配置多种健康检查方式，自定义探测端口和探测URL（HTTP）。主动探测的好处在于服务提供方不用做任何改动即可快融入微服务架构。被动健康检查则是指服务提供方主动注册自己的IP、端口和服务名等信息，并通过心跳方式保持活性。</li>\n<li>多种负载均衡策略\n同时，VIPServer支持多种负载均衡策略，包括权重、同机房、同地域、同环境等等，是阿里异地多活项目的核心系统之一。后面会有专门的文章介绍如何基于VIPServer实现异地多活，这里不再赘述。</li>\n<li>多重容灾保护策略\nVIPServer提供了多种容灾保护策略，可以有效减少人为或者底层系统（网络等）异常带来的影响。这些容灾保护包括：\n<ul>\n<li>客户端缓存，即使VIPServer服务端挂掉也不影响应用的正常调用；</li>\n<li>服务端保护阈值，有效防止应用因压力过大而发生雪崩；</li>\n<li>客户端容灾目录，提供人工干预服务IP列表的能力；</li>\n<li>客户端空列表保护，有效防止人为误删IP列表操作或VIPServer服务端异常</li>\n</ul>\n</li>\n</ul>\n<h4>DNS-F客户端</h4>\n<p>出于性能的考虑，我们采用了第二种DNS Filter的服务发现模式。为此，我们单独开发了DNS-F客户端，DNS-F客户端跟应用部署在同一个主机或容器内。其工作原理如下图所示：</p>\n<p><img src="https://cdn.yuque.com/lark/0/2018/png/7601/1525185700084-16f2c073-0c2b-49c0-b85b-ce2ca1163326.png" alt="image.png | left | 716x392"></p>\n<ul>\n<li>首先，应用ServiceA通过DNS查询获取到ServiceB的可用IP列表</li>\n<li>DNS-F会拦截到ServiceA的查询请求，判断自己是否该查询的答案，如果有（服务已在VIPServer中注册）则直接返回IP列表；</li>\n<li>如果查询的服务在VIPServer中没有注册，DNS-F把DNS查询转发给系统的nameserver，由真正的DNS系统解析；</li>\n</ul>\n<h2>总结</h2>\n<p>本文介绍了微服务架构中如何基于DNS做服务发现。首先，介绍了服务法注册与发现的概念、服务注册与发现的几种方式及其优缺点；然后，介绍基于DNS的服务发现的两种方式及其优缺点；最后，介绍了阿里巴巴基于DNS做服务发现的实践，主要是基于自研的软负载系统VIPServer。基于DNS的服务发现要解决的问题远不止本文描述的这些，敬请期待后续系列文章（：。</p>\n'},{filename:"Nacos-is-Coming.md",__html:'<h1>支持Dubbo生态发展，阿里巴巴启动新的开源项目 Nacos</h1>\n<h2>贡献Dubbo生态，阿里Nacos开源计划</h2>\n<p>在上周六的Aliware技术行上海站Dubbo开发者沙龙上，阿里巴巴高级技术专家郭平(坤宇)宣布了阿里巴巴的一个新开源计划，阿里巴巴计划在7月份开启一个名叫Nacos的新开源项目, 在活动演讲中，坤宇介绍了这个开源项目的初衷，他表示 “将通过Nacos项目将阿里巴巴在建设共享服务体系中使用的服务发现、配置及服务管理平台贡献给开源社区，通过打造Dubbo + Nacos的经典组合进一步释放Dubbo在云原生及Service Mesh时代中，在大规模微服务治理、流量治理、服务集成与服务共享等服务平台能力建设上的威力，同时Nacos会非常关注对主流开源社区，如Spring Cloud和Kubernetes云原生体系的无缝对接与支持”。该项目预计在7月中旬之前开放首个测试预览版本，并计划在未来6~8个月release的0.8版本开始达到生产可用的状态。</p>\n<p>活动的 <a href="http://www.itdks.com/dakashuo/playback/2307">视频回放</a></p>\n<h2>什么是 Nacos /nɑ:kəʊs/?</h2>\n<p>Nacos 是阿里巴巴的新开源项目，其核心定位是 “一个更易于帮助构建云原生应用的动态服务发现、配置和服务管理平台”。</p>\n<p><img src="https://cdn.yuque.com/lark/0/2018/png/15914/1530083408486-b4698533-8e69-4e0a-9f3a-fdb1cdfbd290.png" alt="Screen Shot 2018-06-27 at 15.09.35.png"></p>\n<p>Nacos 有三大主要功能:</p>\n<ul>\n<li>服务发现与服务管理</li>\n</ul>\n<p>在采用以“服务(Service)”为中心的诸如微服务及云原生方式的现代应用架构时，动态服务发现至关重要。 Nacos同时支持基于DNS和基于RPC（如Dubbo/gRPC）的服务发现，并为您提供服务的实时的健康检查以防止将请求发送给不健康的主机，基于Nacos您也可以更方便的实现服务断路器。Nacos提供的强大的服务的元数据管理，路由及流量管理策略也能够帮助您更好的构建更强壮的微服务平台。</p>\n<ul>\n<li>动态配置管理</li>\n</ul>\n<p>动态配置服务允许您在所有环境中以集中和动态的方式管理所有应用程序或服务的配置。动态配置消除了配置更新时重新部署应用程序和服务的需要。可以更方便的帮助您实现无状态服务，更轻松地实现按需弹性扩展服务实例。</p>\n<ul>\n<li>动态DNS服务</li>\n</ul>\n<p>支持权重路由的动态DNS服务使您可以更轻松地在数据中心内的生产环境中实施中间层负载平衡，灵活的路由策略，流量控制和简单的DNS解析服务，帮助您更容易的实现DNS-based服务发现。</p>\n<h2>为什么开源 Nacos</h2>\n<p>阿里巴巴为什么选择这么一个时间点开源Nacos，其背后的思考是什么，坤宇也给出了详细的解读，在演讲中，坤宇表示主意基于以下几点:</p>\n<ul>\n<li><strong>围绕着Service为中心的分布式基础设施正在变的越来越重要</strong></li>\n</ul>\n<p><img src="https://cdn.yuque.com/lark/0/2018/png/15914/1530077340492-513a25c0-51d0-494f-b39d-6f615d7e3915.png" alt="Screen Shot 2018-06-27 at 13.28.09.png"></p>\n<p>世界正在变的更快，创新和市场竞争的节奏正在变得愈发剧烈，如何超快速实现业务增长成为商业竞争的主旋律，几乎一夜之间共享单车就火遍全国，不到几年滴滴就改变了我们的打车方式，腾讯三班倒实现全民“吃鸡”，现在企业估值在从0到100亿所需的时间越来越短，而企业的平均寿命从标普的数据来看却从上世纪60年代的60年下降到了今天的15年，一切都表示创新和竞争的速度和烈度在加强。</p>\n<p>另一方面技术基础设施的敏捷和有效性在商业成功的要素上占据的比重越来越大，云计算在资源和服务交付模式上的变革，带来了效率的革命性提升，带来了更敏捷的基础设施（创业不用再买机器并找机房托管，从以前的半年准备周期到现在在云上的小时级创建全套服务），而在应用架构层面，微服务架构模式带来的灵活性、韧劲，快速组合和聚合原子服务从而创新，给业务快速创新和试错提供了条件，已经被越来越多的应用平台证明其有效性，技术基础设施的更敏捷，给商业的敏捷和商业的竞争优势提供了基础。</p>\n<p>在今天，无论是云计算，微服务还是围绕Kubernetes为中心的云原生，都在强调以“服务”为内核的应用架构模式，如果说15年前我们在讨论“一切皆是对象”构建单体系统，那么今天我们就是在谈论“一切皆是服务”，10年前淘宝服务化改造顺应了这种趋势，8年前微服务架构思想也顺应了这个趋势，今天面向“服务”的各种分布式基础设施正在变得越来越重要，站在阿里巴巴10年的服务化发展经验上看，在大规模服务发现和服务治理和服务共享领域现有的开源解决方案是不是都已经非常完美了呢？根据阿里巴巴服务化走过的这些年的生产经验来看，我们觉得并没有。</p>\n<ul>\n<li><strong>阿里巴巴在 &quot;共享服务体系&quot; 建设上的经验可以在各个行业大规模复用</strong></li>\n</ul>\n<p><img src="https://cdn.yuque.com/lark/0/2018/png/15914/1530077414293-3d22cd01-6e3c-49d1-82ea-ad2f8d443cf9.png" alt="Screen Shot 2018-06-27 at 13.29.52.png"></p>\n<p>阿里巴巴中台理念和体系，与云原生在精神的“道”上完全契合，即“厚技术平台，薄应用” 支持业务的快速创新与试错，从而赢得市场，中台体系倡导双引擎架构，略过“大数据”不谈，但看业务中台，就是一个大的以“服务”为中心的共享服务平台，在线服务沉淀业务数据，同步到大数据平台计算和挖掘，大数据平台则通过数据回馈，指导业务及服务的创新，支成可沉淀和可共享“服务”体系的服务注册与服务治理平台是这个体系的关键要素之一。</p>\n<ul>\n<li><strong>“服务治理，服务沉淀、服务共享和服务的可持续发展”是“共享服务体系”的核心价值主张</strong></li>\n</ul>\n<p>支持创新从小苗长成参天大树，服务平台不断演进，这一切需要一个强大的服务平台和服务基础设施的支撑。</p>\n<p><img src="https://cdn.yuque.com/lark/0/2018/png/15914/1530077444757-d36f344d-d3ae-4df0-808f-8500b4320e8d.png" alt="Screen Shot 2018-06-27 at 13.30.25.png"></p>\n<ul>\n<li><strong>阿里巴巴将通过Dubbo + Nacos以及一系列开源项目打造服务发现、服务及流量管理、服务共享平台</strong></li>\n</ul>\n<p><img src="https://cdn.yuque.com/lark/0/2018/png/15914/1530077476468-4ce30dd9-0da7-414a-875d-acc151739c1d.png" alt="Screen Shot 2018-06-27 at 13.30.58.png"></p>\n<h2>Nacos 与 主流开源生态的关系</h2>\n<p>Nacos 不会是个封闭的体系，除了对于阿里开源生态体系如Dubbo等自身的支持，也非常强调融入其它的开源生态，这里就包括Java的微服务生态体系Spring Cloud，Kubernetes/CNCF云原生生态体系，正如Nacos的未来全景图展示的那样</p>\n<p><img src="https://cdn.yuque.com/lark/0/2018/png/15914/1530077509217-d4fec359-8a41-4c51-a986-c44e06d16950.png" alt="Screen Shot 2018-06-27 at 13.31.30.png"></p>\n<ul>\n<li>Dubbo + Nacos， 专为Dubbo而生的注册中心与配置中心</li>\n</ul>\n<p>在阿里巴巴生产环境上，Dubbo和Nacos天然就是长在一起的，因为Nacos的缺失，传统的注册中心解决方案让Dubbo在服务治理、流量治理、服务运营和管理等方面的威力被限制和削弱了，Nacos的开源和开放会在采用Dubbo的用户环境中释放这些威力</p>\n<p><img src="https://cdn.yuque.com/lark/0/2018/png/15914/1530077613925-04d767fd-ec95-4fe2-8249-ce8650fbe372.png" alt="Screen Shot 2018-06-27 at 13.31.57.png"></p>\n<ul>\n<li>Nacos 会完全兼容Spring Cloud</li>\n</ul>\n<p>Nacos会无缝支持Spring Cloud，为Spring Cloud用户其提供更简便的配置中心和注册中心的解决方案，使用Nacos不用再仅仅为服务和配置就需要在生产上hold住 Eureka，Spring Cloud Config Server，Git，RabbitMQ/Kafka 起码四个开源产品。</p>\n<p><img src="https://cdn.yuque.com/lark/0/2018/png/15914/1530077646935-7ca8a74d-59e5-4e01-865e-06fd5631e623.png" alt="Screen Shot 2018-06-27 at 13.33.40.png"></p>\n<ul>\n<li>Nacos 支持Kubernetes DNS-based Service Discovery</li>\n</ul>\n<p>在演讲中坤宇也表示，阿里巴巴这么多年在VIPServer DNS-based Service Discovery上的实践证明，在云原生时代，应用会更关注与基础设施的解耦合、多语言乃至多云的诉求，服务发现的未来一定是基于标准的DNS协议做，而不是像Eureka或者像ZooKeeper这样的私有API或者协议做, 同时在云上，在服务发现场景中，注册中心更关注的是可用性而不是数据一致性，所以Nacos会首推DNS-based Servcie Discovery，并优先关注可用性，而这也正是Nacos可以无缝融合进Kubernetes服务发现体系的原因所在</p>\n<p><img src="https://cdn.yuque.com/lark/0/2018/png/15914/1530077691493-4dae9605-6886-4307-bc9d-16ba1cceb7ac.png" alt="Screen Shot 2018-06-27 at 13.34.18.png"></p>\n<ul>\n<li>Nacos 会填补Spring Cloud 体系与 Kubernetes 体系的鸿沟</li>\n</ul>\n<p>未来会有越来越多java生态的用户会选择 Kubernetes+Spring Cloud 组合，但不幸的是，在服务发现和配置管理的解决方案上，这2个体系都采用了完全不同的方案，这给同时采用2个体系的用户在注册中心和配置中心的需求上带来了非常大的不必要的复杂性。Nacos会尝试填补2者的鸿沟，以便在2套体系下可以采用同一套服务发现和配置管理的解决方案，这将大大的简化使用和维护的成本。</p>\n<p><img src="https://cdn.yuque.com/lark/0/2018/png/15914/1530077731231-85a58c0e-ff5c-45a1-9bc8-b989e2b09d55.png" alt="Screen Shot 2018-06-27 at 13.35.05.png"></p>\n<ul>\n<li>Nacos 与 Service Mesh</li>\n</ul>\n<p><img src="https://cdn.yuque.com/lark/0/2018/png/15914/1530077754298-39bbbdd0-c7af-434a-b189-8fd7ac958b43.png" alt="Screen Shot 2018-06-27 at 13.35.38.png"></p>\n<h2>Nacos 部分特性预览</h2>\n<p>同时在会上，坤宇对Nacos 1.0版本的部分特性给大家做了预览</p>\n<p><img src="https://cdn.yuque.com/lark/0/2018/png/15914/1530077784470-27f0e268-8d1f-443a-b1a5-3d59e15ab8f4.png" alt="Screen Shot 2018-06-27 at 13.36.06.png"></p>\n<p>每个产品都有自己的风格和标签，坤宇在演讲中表示，团队会通过持续的贡献和努力，希望未来给Nacos贴上四个方面的标签</p>\n<p><img src="https://cdn.yuque.com/lark/0/2018/png/15914/1530077851626-25444089-c027-4b89-a606-2e693b4e052d.png" alt="Screen Shot 2018-06-27 at 13.37.10.png"></p>\n<p>在部署形态上，Nacos会支持多种部署形态，包括注册中心与配置中心的分离部署，同时在阿里云上提供Nacos的SaaS化部署服务，感兴趣的可以直接在阿里云上开通账户免费体验Nacos服务，在开源与商业化版本差别上，商业化的ACM以及EDAS ANS更强调与阿里云其它云服务以及其它Aliware PaaS的商业产品的集成体验以及提供商业服务。</p>\n<p><img src="https://cdn.yuque.com/lark/0/2018/png/15914/1530077875162-26cfa0e2-3da0-473e-98b9-190aa6d6d97a.png" alt="Screen Shot 2018-06-27 at 13.36.37.png"></p>\n<h2>Nacos 的主要产品里程碑及计划</h2>\n<blockquote>\n<p>罗马不是一天建成的，吾将上下而求索</p>\n</blockquote>\n<p>因为Nacos是脱胎于阿里巴巴的生产代码，整体体系非常庞杂，在代码梳理、重构和剥离与内部的耦合上是一个渐进的过程，所以@坤宇特别提醒社区在Nacos 0.8达到生产可用状态前，不建议用于生产，不过可以在开发和测试环境尝试使用，在0.8版本开始，大家可以放心的用于生产环境，Nacos整体研发计划是在未来6-8个月将达到生产可用的状态，未来会很快启动将Nacos贡献给开源基金会进一步社区化发展。</p>\n<p><img src="https://cdn.yuque.com/lark/0/2018/png/15914/1530077912860-52c7fea4-5285-45a0-a3b8-73ba010c53da.png" alt="Screen Shot 2018-06-27 at 13.38.13.png"></p>\n<h2>Nacos 与相关开源产品的对比</h2>\n<blockquote>\n<p>君子和而不同</p>\n</blockquote>\n<p>如上面对整体业务及技术形式的判断，我们可以看到 Nacos 与同类竞品的主要不同主要在于理念，@坤宇介绍说，严格来说这些市面上的产品并不与Nacos完全对标，只是与Nacos里面的服务发现部分对标，Nacos的未来更看重在这些产品的基础上构建服务平台的能力，而不仅仅是在基础的服务发现能力上。</p>\n<p><img src="https://cdn.yuque.com/lark/0/2018/png/15914/1530077938157-00e6b34f-9a16-498c-9b89-cc48f6d6bb73.png" alt="Screen Shot 2018-06-27 at 13.38.41.png"></p>\n<h2>社区化发展，欢迎加入并贡献社区</h2>\n<blockquote>\n<p>DISS is cheap, show me your hand\n比吐槽更重要的是搭把手，参与社区一起发展Nacos</p>\n</blockquote>\n<p>与阿里巴巴早期的开源不同，阿里巴巴新一轮的开源包括RocketMQ，Pouch Container，Dubbo, Nacos等开源产品更强调社区化的发展与社区的多样性，鼓励更多的公司和更多的开发者参与到开源项目中来，依托于社区将产品做得更好，同时一开始就会关注国际化，与国外同类产品的直面竞争。</p>\n<p>Nacos初步计划，在第一年就吸收至少超过5名来自其它公司的PMC,至少10名的外部Committer, 而且Nacos处在项目开源的初期，有大把的空间让有想法、有热情、有能力的开发者参与进来，Nacos本身在很多方面都急需要社区的帮助，这里面就急需包括前端及UI建设，Spring Cloud、Kubernetes、Service Mesh体系融合与集成，多语言客户端等各方面的技术领导者的参与，如果您对Nacos这个开源项目感兴趣，欢迎加入Nacos社区。你可以通过扫“超哥”的微信二维码，让“超哥” 帮你加入 “Nacos社区交流群”</p>\n<p><img src="https://cdn.yuque.com/lark/0/2018/png/15914/1530077965587-8f4e3100-bdd4-469a-9ea0-7af7061bc9ef.png" alt="Screen Shot 2018-06-27 at 13.39.09.png"></p>\n<h2>感谢所有未来给我们帮助的朋友</h2>\n<p><img src="https://cdn.yuque.com/lark/0/2018/png/15914/1530078016801-65ce72c1-c135-42b6-8076-a046f7829ba7.png" alt="Screen Shot 2018-06-27 at 13.39.40.png"></p>\n<h2>References</h2>\n<ul>\n<li><a href="https://yq.aliyun.com/articles/601745">阿里巴巴为什么不用 ZooKeeper 做服务发现？</a></li>\n<li><a href="https://yq.aliyun.com/articles/226238?spm=5176.163362.847322.3.5a8925397in790">现代应用架构中的配置管理面临的挑战和应对之道</a></li>\n<li><a href="http://jm.taobao.org/2016/06/02/zhangwensong-and-load-balance/">章文嵩博士和他背后的负载均衡帝国</a></li>\n<li><a href="https://blog.csdn.net/heyc861221/article/details/80126013">VIPServer：阿里智能地址映射及环境管理系统详解</a></li>\n</ul>\n'},{filename:"alibaba-configserver.md",__html:'<h1>《阿里巴巴服务注册中心产品ConfigServer 10年技术发展回顾》</h1>\n<p>作者：阿里巴巴高级技术专家，许真恩(慕义)</p>\n<p>文章概要：本文简单描述了Eureka1.0存在的架构问题，Eureka2.0设想的架构。详细回顾了阿里巴巴的服务注册中心ConfigServer产品从2008年建设元年至今经历的关键架构演进。通过这个文章你会对基于AP模式的注册中心在技术发展过程中将会碰到的问题有所感知。</p>\n<h1>Eureka1.0架构存在的问题</h1>\n<p>Eureka作为Netflix公司力推和SpringCloud微服务标配的注册中心开源解决方案，其<span data-type="color" style="color:rgb(36, 41, 46)">Eureka 2.0 (Discontinued)的消息在社区引起了不小的骚动；其实早在2015年社区就已经放出了2.0架构的升级设想，但是3年的时间过去，等到的确是Discontinued的消息，虽然2.0的代码在github的主页上也已经放出，但是告诫用户要自行承担当中的使用风险。我想不会有人真的把2.0直接投入到生产中使用。</span></p>\n<p>对于为什么要做Eureka2.0，其官方的wiki中的Why Eureka 2.0和Eureka 2.0 Improvements做了如下的说明</p>\n<ul>\n<li>Only support homogenous client views: Eureka servers only expects the client to always get the entire registry and does not allow to get specific applications/VIP addresses. This imposes a memory limitation on all clients registering with Eureka, even if they need a very small subset of the Eureka’s registry.</li>\n<li>Only supports scheduled updates: Eureka client follows a poll model to fetch updates from the server routinely. This imposes an overhead on the client of doing a scheduled call to the server, even if there are no changes and also delays the updates by the poll interval.</li>\n<li>Replication algorithm limits scalability: Eureka follows a broadcast replication model i.e. all the servers replicate data and heartbeats to all the peers. This is simple and effective for the data set that eureka contains however replication is implemented by relaying all the HTTP calls that a server receives as is to all the peers. This limits scalability as every node has to withstand the entire write load on eureka.</li>\n</ul>\n<p>Although Eureka 2.0 provides a more richer feature set, the above limitations are the major driving factors for the changes proposed in this version.\nBased on the above motivations, Eureka 2.0 achieves the following improvements:</p>\n<ul>\n<li>Interest based subscription model for registry data: A client of Eureka is able to select a part of the instance registry in which it is interested in and the eureka server only sends information about that part of the registry. Eg: A client can say I am only interested in application “WebFarm” and then the server will only send information about WebFarm instances. Eureka server provides various selection criterions and a way to update this interest set dynamically.</li>\n<li>Push model from the server for any changes to the interest set: Instead of the current pull model from the client, Eureka servers pushes updates for changes to the interest set, to the client.</li>\n<li>Optimized replication: As Eureka 1.0, Eureka 2.0 also follows a broadcast replication model i.e. every node replicates data to all other nodes. However, the replication algorithm is much more optimized eliminating the need of sending heartbeats for every instance in the registry. This drastically reduce the replication traffic and achieves much higher scalability.</li>\n<li>Auto-scaled Eureka servers: Eureka 2.0 divides the read (discovery of data) and write (registration) concerns into separate clusters. Since, the write load is predictable (proportional to the number of instances in a region), the write cluster is pre-scaled. On the other hand, read load is unpredictable (proportional to subscriptions from clients) and hence the read farm is auto-scaled.</li>\n<li>Audit log: Eureka 2.0 provides an elaborate audit log for any change done to the registry. This helps Eureka owners as well as users to get insight into debugging the state of individual application instances as exists in Eureka. The audit log by default is persisted to a log file, but different persistent storages can be plugged-in.</li>\n<li>Dashboard: Eureka 2.0 provides a rich dashboard (as opposed to very rudimentary dashboard of Eureka 1.0) with insights into Eureka internals with respect to registry views, server health, subscription state, audit log, etc.</li>\n</ul>\n<p>简单翻译总结，也就是Eureka1.0的架构主要存在如下的不足：</p>\n<ul>\n<li>订阅端拿到的是服务的全量的地址：这个对于客户端的内存是一个比较大的消耗，特别在多数据中心部署的情况下，某个数据中心的订阅端往往只需要同数据中心的服务提供端即可。</li>\n<li>pull模式：客户端采用周期性向服务端主动pull服务数据的模式（也就是客户端轮训的方式），这个方式存在实时性不足以及无谓的拉取性能消耗的问题。</li>\n<li>一致性协议：Eureka集群的多副本的一致性协议采用类似“异步多写”的AP协议，每一个server都会把本地接收到的写请求（register/heartbeat/unregister/update）发送给组成集群的其他所有的机器（Eureka称之为peer），特别是hearbeat报文是周期性持续不断的在client-&gt;server-&gt;all peers之间传送；这样的一致性算法，导致了如下问题\n<ul>\n<li>每一台Server都需要存储全量的服务数据，Server的内存明显会成为瓶颈。</li>\n<li>当订阅者却来越多的时候，需要扩容Eureka集群来提高读的能力，但是扩容的同时会导致每台server需要承担更多的写请求，扩容的效果不明显。</li>\n<li>组成Eureka集群的所有server都需要采用相同的物理配置，并且只能通过不断的提高配置来容纳更多的服务数据</li>\n</ul>\n</li>\n</ul>\n<p>Eureka2.0主要就是为了解决上述问题而提出的，主要包含了如下的改进和增强</p>\n<ul>\n<li>数据推送从pull走向push模式，并且实现更小粒度的服务地址按需订阅的功能。</li>\n<li>读写分离：写集群相对稳定，无需经常扩容；读集群可以按需扩容以提高数据推送能力。</li>\n<li>新增审计日志的功能和功能更丰富的Dashboard。</li>\n</ul>\n<p>Eureka1.0版本存在的问题以及Eureka2.0架构设想和阿里巴巴内部的同类产品ConfigServer所经历的阶段非常相似（甚至Eureka2.0如果真的落地后存在的问题，阿里巴巴早已经发现并且已经解决），下面我带着你来回顾一下我们所经历过的。</p>\n<h1>阿里巴巴服务注册中心ConfigServer技术发现路线</h1>\n<p>阿里巴巴早在2008就开始了服务化的进程，在那个时候就就已经自研出服务发现解决方案（内部产品名叫ConfigServer）。</p>\n<p>当2012年9月1号Eureka放出第一个1.1.2版本的时候，我们把ConfigServer和Eureka进行了深度的对比，希望能够从Eureka找到一些借鉴来解决当时的ConfigServer发展过程中碰到的问题（后面会提到）；然而事与愿违，我们已经发现Eureka1.x架构存在比较严重的扩展性和实时性的问题（正如上面所描述的），这些问题ConfigServer当时的版本也大同小异的存在，我们在2012年底对ConfigServer的架构进行了升级来解决这些问题。</p>\n<p>当2015年Eureka社区放出2.0架构升级的声音的时候，我们同样第一时间查看了2.0的目标架构设计，我们惊奇的发现Eureka的这个新的架构同2012年底ConfigServer的架构非常相似，当时一方面感慨“英雄所见略同”，另一方也有些失望，因为ConfigServer2012年的架构早就无法满足阿里巴巴内部的发展诉求了。</p>\n<p>下面我从头回顾一下，阿里巴巴的ConfigServer的技术发展过程中的几个里程碑事件。</p>\n<h2>2008年，无ConfigServer的时代</h2>\n<p>借助用硬件负载设备F5提供的vip功能，服务提供方只提供vip和域名信息，调用方通过域名方式调用，所有请求和流量都走F5设备。</p>\n<p>遇到的问题：</p>\n<ul>\n<li>负载不均衡：对于长连接场景，F5不能提供较好的负载均衡能力。如服务提供方发布的场景，最后一批发布的机器，基本上不能被分配到流量。需要在发布完成后，PE手工去断开所有连接，重新触发连接级别的负载均衡。</li>\n<li>流量瓶颈：所有的请求都走F5设备，共享资源，流量很容易会打满网卡，会造成应用之间的相互影响。</li>\n<li>单点故障：F5设备故障之后，所有远程调用会被终止，导致大面积瘫痪。</li>\n</ul>\n<h2>2008年，ConfigServer单机版V1.0</h2>\n<p>单机版定义和实现了服务发现的关键的模型设计（包括服务发布，服务订阅，健康检查，数据变更主动推送，这个模型至今仍然适用），应用通过内嵌SDK的方式接入实现服务的发布和订阅；这个版本很重要的一个设计决策就是服务数据变更到底是pull还是push的模式，我们从最初就确定必须采用push的模式来保证数据变更时的推送实时性（Eureka1.x的架构采用的是pull的模式）</p>\n<p>当时，HSF和Notify就是采用单机版的ConfigServer来完成服务的发现和topic的发现。单机版的ConfigServer和HSF、Notify配合，采用服务发现的技术，让请求通过端到端的方式流动，避免产生流量瓶颈和单点故障。ConfigServer可以动态的将服务地址推送到客户端，服务调用者可以知道所有提供此服务的机器，每个请求都可以通过随机或者轮询的方式选择服务端，做到请求级别的负载均衡。这个版本已经能很好的解决F5设备不能解决的三个问题。</p>\n<p>但是单机版本的问题也非常明显，不具备良好的容灾性；</p>\n<h2>2009年初，ConfigServer单机版V1.5</h2>\n<p>单机版的ConfigServer所面临的问题就是当ConfigServer在发布/升级的时候，如果应用刚好也在发布，这个时候会导致订阅客户端拿不到服务地址的数据，影响服务的调用；所以当时我们在SDK中加入了本地的磁盘缓存的功能，应用在拿到服务端推送的数据的时候，会先写入本地磁盘，然后再更新内存数据；当应用重启的时候，优先从本地磁盘获取服务数据；通过这样的方式解耦了ConfigServer和应用发布的互相依赖；这个方式沿用至今。（我很惊讶，Eureka1.x的版本至今仍然没有实现客户端磁盘缓存的功能，难道Eureka集群可以保持100%的SLA吗？）</p>\n<h2>2009年7月，ConfigServer集群版本V2.0</h2>\n<p>ConfigServer的集群版本跟普通的应用有一些区别：普通的应用通过服务拆分后，已经属于无状态型，本身已经具备良好的可扩展性，单机变集群只是代码多部署几台；ConfigServer是有状态的，内存中的服务信息就是数据状态，如果要支持集群部署，这些数据要不做分片，要不做全量同步；由于分片的方案并没有真正解决数据高可用的问题（分片方案还需要考虑对应的failover方案），同时复杂度较高；所以当时我们选择了单机存储全量服务数据全量的方案。为了简化数据同步的逻辑，服务端使用客户端模式同步：服务端收到客户端请求后，通过客户端的方式将此请求转发给集群中的其他的ConfigServer，做到同步的效果，每一台ConfigServer都有全量的服务数据。</p>\n<p>这个架构同Eureka1.x的架构惊人的相似，所以很明显的Eureka1.x存在的问题我们也存在；当时的缓解的办法是我们的ConfigServer集群全部采用高配物理来部署。</p>\n<h2>2010年底，ConfigServer集群版V2.5</h2>\n<p>基于客户端模式在集群间同步服务数据的方案渐渐无以为继了，特别是每次应用在发布的时候产生了大量的服务发布和数据推送，服务器的网卡经常被打满，同时cmsgc也非常频繁；我们对数据同步的方案进行了升级，去除了基于客户端的同步模式，采用了批量的基于长连接级别的数据同步+周期性的renew的方案来保证数据的一致性（这个同步方案当时还申请了国家专利）；这个版本还对cpu和内存做了重点优化，包括同步任务的合并，推送任务的合并，推送数据的压缩，优化数据结构等；</p>\n<p>这个版本是ConfigServer历史上一个比较稳定的里程碑版本。</p>\n<p><span data-type="color" style="color:rgb(36, 41, 46)">但是随着2009年天猫独创的双十一大促活动横空出世，服务数量剧增，应用发</span>布时候ConfigServer集群又开始了大面积的抖动，还是体现在内存和网卡的吃紧，甚至渐渐到了fullgc的边缘；为了提高数据推送能力，需要对集群进行扩容，但是扩容的同时又会导致每台服务器的写能力下降，我们的架构到了“按下葫芦浮起瓢”的瓶颈。</p>\n<h2>2012年底，ConfigServer集群版V3.0</h2>\n<p>在2011年双十一之前我们完成了V3架构的落地，类似Eureka2.0所设计的读写分离的方案，我们把ConfigServer集群拆分成session和data两个集群，客户端分片的把服务数据注册到session集群中，session集群会把数据异步的写到data集群，data集群完成服务数据的聚合后，把压缩好的服务数据推送到session层缓存下来，客户端可以直接从session层订阅到所需要的服务数据；这个分层架构中，session是分片存储部分的服务数据的（我们设计了failover方案），data存储的是全量服务数据（天生具备failover能力）；</p>\n<p>data集群相对比较稳定，不需要经常扩容；session集群可以根据数据推送的需求很方便的扩容（这个思路和Eureka2.0所描述的思路是一致的）；session的扩容不会给data集群带来压力的增加。session集群我们采用低配的虚拟机即可满足需求，data由于存储是全量的数据我们仍然采用了相对高配的物理机（但是同V2.5相比，对物理机的性能要求已经答复下降）</p>\n<p>这个版本也是ConfigServer历史上一个划时代的稳定的大版本。</p>\n<h2>2014年，ConfigServer集群版V3.5</h2>\n<p>2013年，阿里巴巴开始落地了异地多活方案，从一个IDC渐渐往多个IDC跨越，随之而来的对流量的精细化管控要求越来越高（比如服务的同机房调用，服务流量的调拨以支持灰度能力等），基于这个背景ConfigServer引入了服务元数据的概念，支持对服务和IP进行元数据的打标来满足各种各样的服务分组诉求。</p>\n<h2>2017年，ConfigServer集群版V4.0</h2>\n<p>V3版本可见的一个架构的问题就是data集群是存储全量的服务数据的，这个随着服务数的与日俱增一定会走到升级物理机配置也无法解决问题的情况（我们当时已经在生产使用了G1的垃圾回收算法），所以我们继续对架构进行升级，基于V3的架构进行升级其实并不复杂；session层的设计保持不变，我们把data进行分片，每一个分片同样按照集群的方式部署以支持failover的能力；</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>ConfigServer</th>\n<th>Eureka</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>2008年</td>\n<td>V1.0：单机版，定义了服务发现的领域模型</td>\n<td></td>\n</tr>\n<tr>\n<td>2009年初</td>\n<td>V1.5：应用和ConfigServer集群发布解耦</td>\n<td></td>\n</tr>\n<tr>\n<td>2009年7月</td>\n<td>V2.0：基于客户端模式同步数据，支持集群部署</td>\n<td></td>\n</tr>\n<tr>\n<td>2010年底</td>\n<td>V2.5：优化集群间数据同步模式，申请国家专利。</td>\n<td></td>\n</tr>\n<tr>\n<td>2012年9月1号</td>\n<td></td>\n<td>Eureka1.0正式开源</td>\n</tr>\n<tr>\n<td>2012年底</td>\n<td>V3.0：支持session和data分层部署</td>\n<td></td>\n</tr>\n<tr>\n<td>2014年</td>\n<td>V3.5：支持异地多活等细分场景</td>\n<td></td>\n</tr>\n<tr>\n<td>2015年</td>\n<td></td>\n<td>Eureka2.0架构升级方案公布</td>\n</tr>\n<tr>\n<td>2017年</td>\n<td>V4.0：支持data分片能力</td>\n<td></td>\n</tr>\n<tr>\n<td>2018年7月</td>\n<td></td>\n<td>Eureka2.0架构升级宣布停止</td>\n</tr>\n</tbody>\n</table>\n<h1>Nacos</h1>\n<p><span data-type="color" style="color:rgb(25, 31, 37)"><span data-type="background" style="background-color:rgb(255, 255, 255)">作为同属于AP类型的注册中心，Eureka和ConfigServer发展过程中所面临的诸多问题有很大的相似性，但是阿里巴巴这些年业务的跨越式发展，每年翻番的服务规模，不断的给ConfigServer的技术架构演进带来更高的要求和挑战，我们有更多的机会在生产环境发现和解决一个个问题的过程中，做架构的一代代升级。我们正在计划通过开源的手段把我们这些年在生产环境上的实践经验通过Nacos(</span></span><a href="http://nacos.io">链接</a>)<span data-type="color" style="color:rgb(25, 31, 37)"><span data-type="background" style="background-color:rgb(255, 255, 255)">产品贡献给社区，一方面能够助力和满足同行们在微服务落地过程当中对工业级注册中心的诉求，另一方面也希望通过开源社区及开源生态的协同发展给ConfigServer带来更多的可能性。</span></span></p>\n<p><span data-type="color" style="color:rgb(25, 31, 37)"><span data-type="background" style="background-color:rgb(255, 255, 255)">炎炎夏日，在Eureka 2.0 (Discontinued) 即将结束的时候，在同样的云原生时代，Nacos却正在迎来新生，技术演进和变迁的趣味莫过于此。</span></span></p>\n<p><span data-type="color" style="color:rgb(25, 31, 37)"><span data-type="background" style="background-color:rgb(255, 255, 255)">Nacos将努力继承Eureka未竟的遗志，扛着AP系注册中心的旗帜继续前行，不同的是Nacos更关注DNS-based Service Discovery以及与Kubernetes体系的融会贯通。</span></span></p>\n<p><span data-type="color" style="color:rgb(25, 31, 37)"><span data-type="background" style="background-color:rgb(255, 255, 255)">我们看不透未来，却仍将与同行们一起上下求索，砥砺前行。</span></span></p>\n<p>最后附上Nacos的架构图。</p>\n<p><img src="https://cdn.yuque.com/lark/0/2018/png/12425/1530856061648-7180b97f-b61d-4127-924e-a0743b9e9d5a.png" alt="屏幕快照 2018-06-28 下午4.58.59.png | center | 748x544"></p>\n'},{filename:"nacos.md",__html:'<h1>Nacos 0.1.0 �汾Review ����</h1>\n<h2>I. ������б�</h2>\n<ul>\n<li>�Ķ������İ����ҹ���bug, ���С�Ӣ�Ĺ����Ὠ���Խ���</li>\n<li>�Ķ���Ӣ�ĵ������ĵ�bug, ���С�Ӣ�ĵ������Ὠ�飨�����ǹ�עӢ�ķ��벻�õĵط�����ΪӢ�Ķ������ǳ���Ա�Լ�ߣ�ģ�</li>\n<li>�����´��� -&gt;������ -&gt; ��Nacos server -&gt; ֹͣNacos server���̣�����Ľ����</li>\n<li>���������Լ����ڵ� Nacos ��Ⱥģʽ������Ľ����</li>\n<li>����ʹ��Nacos Java SDK, ��Java SDK��Ľ�����</li>\n<li>����ʹ��Nacos Open API����OpenAPI��Ľ�����</li>\n<li>���Ը��ݡ���ι���Naocs�ĵ� TODO����һ�� �������̣��������������Ὠ��</li>\n<li>��Nacos�����󡢷�չ�ƻ����뷨��Ҫ���</li>\n</ul>\n<h2>II. ����뷽ʽ</h2>\n<ul>\n<li>\n<p>ɨ�� �����硱 ΢��2΢�룬�ó���������� ��Nacos��������Ⱥ��</p>\n<p><img src="https://cdn.yuque.com/lark/0/2018/png/11189/1532004866850-5e03b901-6d76-4380-b7bf-66e227808bdc.png" alt="΢�Ŷ�ά��"></p>\n</li>\n<li>\n<p>ѡ��I �е�һ�����߶����������</p>\n</li>\n<li>\n<p>�����������BUG֮�󣬰���III�еġ�����Report��ʽ������һ����Ӧ�� github issue, ��ָ�ɸ� @ github�˺�<a href="https://github.com/xuechaos">xuechaos</a></p>\n</li>\n</ul>\n<h2>III. ����Report��ʽ</h2>\n<ul>\n<li>����˵�� TODO</li>\n</ul>\n<h2>IV. ������ʽ</h2>\n<ul>\n<li>��������Ϊ���벢����ͻ�����׵�С��鶨��һЩС��Ʒ���ῼ�ǿ�ݸ���������ͻ�����׵�С���</li>\n<li>�������ᣬ��ϣ���ܱ������ǵİ����ĸм�֮�����һ</li>\n</ul>\n<h2>V. ����˵��</h2>\n<ul>\n<li>���ǲ�ȷ��ÿ��������󶼻ᱻ���ã��������Ǿ����������ͨ���ǻ��ں��ֿ��ǣ����Ľ����������û�в���</li>\n<li>����ͨ���ʼ��б����report issue�ķ�ʽ����������΢��Ⱥ��report���⣬�Ա㽫���ǵĹ�ͨ�����ĵ����͸����׳���</li>\n</ul>\n'}]}},function(t,e,n){"use strict";t.exports={"zh-cn":[{filename:"CLI-guide.md",__html:"<p><strong>IN PLAN</strong> with Nacos 0.7.0</p>\n"},{filename:"architecture.md",__html:'<h2>I. 基本架构及概念</h2>\n<p><img src="https://cdn.yuque.com/lark/0/2018/jpeg/15914/1530514514515-405eb206-4115-4773-9902-d549fe2c38c5.jpeg" alt="nacos_arch.jpg"></p>\n<ul>\n<li>\n<p><strong>服务 (Service)</strong></p>\n<p>服务是指一个或一组软件功能（例如特定信息的检索或一组操作的执行），其目的是不同的客户端可以为不同的目的重用（例如通过跨进程的网络调用）。Nacos 支持主流的服务生态，如 Kubernetes Service、gRPC|Dubbo RPC Service 或者 Spring Cloud RESTful Service.</p>\n</li>\n<li>\n<p><strong>服务注册中心 (Service Registry)</strong></p>\n<p>服务注册中心，它是服务，其实例及元数据的数据库。服务实例在启动时注册到服务注册表，并在关闭时注销。服务和路由器的客户端查询服务注册表以查找服务的可用实例。服务注册中心可能会调用服务实例的健康检查 API 来验证它是否能够处理请求。</p>\n</li>\n<li>\n<p><strong>服务元数据 (Service Metadata)</strong></p>\n<p>服务元数据是指包括服务端点(endpoints)、服务标签、服务版本号、服务实例权重、路由规则、安全策略等描述服务的数据</p>\n</li>\n<li>\n<p><strong>服务提供方 (Service Provider)</strong></p>\n<p>是指提供可复用和可调用服务的应用方</p>\n</li>\n<li>\n<p><strong>服务消费方 (Service Consumer)</strong></p>\n<p>是指会发起对某个服务调用的应用方</p>\n</li>\n<li>\n<p><strong>配置 (Configuration)</strong></p>\n<p>在系统开发过程中通常会将一些需要变更的参数、变量等从代码中分离出来独立管理，以独立的配置文件的形式存在。目的是让静态的系统工件或者交付物（如 WAR，JAR 包等）更好地和实际的物理运行环境进行适配。配置管理一般包含在系统部署的过程中，由系统管理员或者运维人员完成这个步骤。配置变更是调整系统运行时的行为的有效手段之一。</p>\n</li>\n<li>\n<p><strong>配置管理 (Configuration Management)</strong></p>\n<p>在数据中心中，系统中所有配置的编辑、存储、分发、变更管理、历史版本管理、变更审计等所有与配置相关的活动统称为配置管理。</p>\n</li>\n<li>\n<p><strong>名字服务 (Naming Service)</strong></p>\n<p>提供分布式系统中所有对象(Object)、实体(Entity)的“名字”到关联的元数据之间的映射管理服务，例如 ServiceName -&gt; Endpoints Info, Distributed Lock Name -&gt; Lock Owner/Status Info, DNS Domain Name -&gt; IP List, 服务发现和 DNS 就是名字服务的2大场景。</p>\n</li>\n<li>\n<p><strong>配置服务 (Configuration Service)</strong></p>\n<p>在服务或者应用运行过程中，提供动态配置或者元数据以及配置管理的服务提供者。</p>\n</li>\n<li>\n<p><strong><a href="">更多概念 TODO...</a></strong></p>\n</li>\n</ul>\n<h2>II. 构建物、部署及启动模式</h2>\n<p><img src="https://cdn.yuque.com/lark/0/2018/png/15914/1531730742844-e8325932-258b-49b2-9473-8d1199efe20d.png" alt="undefined"></p>\n<ul>\n<li>\n<p><strong>2种交付工件</strong></p>\n<p>Nacos 支持标准 Docker 镜像(TODO: 0.2版本开始支持）及 zip(tar.gz)压缩包的构建物。</p>\n</li>\n<li>\n<p><strong>启动模式</strong></p>\n<p>Nacos 支持将注册中心(Service Registry）与配置中心(Config Center) 在一个进程合并部署或者将2者分离部署的两种模式。</p>\n</li>\n<li>\n<p><strong>免费的公有云服务模式</strong></p>\n<p>除了您自己部署和启动 Nacos 服务之外，在云计算时代，Nacos 也支持公有云模式，在阿里云公有云的商业产品（如<a href="xx">ACM TODO</a>， <a href="xx">EDAS TODO</a>) 中会提供 Nacos 的免费的公有云服务。我们也欢迎和支持其他的公有云提供商提供 Nacos 的公有云服务。</p>\n</li>\n</ul>\n'},{filename:"community.md",__html:'<h2>Contact</h2>\n<h3>Nacos Gitter-<a href="https://gitter.im/alibaba/nacos">https://gitter.im/alibaba/nacos</a></h3>\n<h3>Nacos weibo-<a href="https://weibo.com/u/6574374908">https://weibo.com/u/6574374908</a></h3>\n<h3>Nacos segmentfault-<a href="https://segmentfault.com/t/nacos">https://segmentfault.com/t/nacos</a></h3>\n<h3>Mailing list</h3>\n<p>Mailing list is recommended for discussing almost anything related to Nacos. Please refer to this?<a href="https://github.com/apache/incubator-dubbo/wiki/Mailing-list-subscription-guide">guide</a>?for detailed documentation on how to subscribe to our mailing lists.</p>\n<ul>\n<li><a href="https://lark.alipay.com/nacos/nacosdocs/vl19q1">dev-nacos@googlegroups.com</a>: The develop mailing list. You can ask questions here if you encounter any problem when using or developing Nacos.</li>\n<li><a href="https://lark.alipay.com/nacos/nacosdocs/vl19q1">commits-nacos@googlegroups.com</a>: All commits will be sent to this mailing list. You can subscribe to it if you are interested in Nacos\' development.</li>\n<li><a href="https://lark.alipay.com/nacos/nacosdocs/vl19q1">users-nacos@googlegroups.com</a>: All Github?<a href="https://github.com/alibaba/nacos/issues">issue</a>?updates and?<a href="https://github.com/alibaba/nacos/pulls">pull request</a>?updates will be sent to this mailing list.</li>\n<li><a href="https://lark.alipay.com/nacos/nacosdocs/vl19q1">nacos_dev@linux.alibaba.com</a>.</li>\n</ul>\n'},{filename:"concepts.md",__html:'<h2>地域 （Region）</h2>\n<p><span data-type="color" style="color:rgb(51, 51, 51)"><span data-type="background" style="background-color:rgb(255, 255, 255)">物理的数据中心，资源创建成功后不能更换。</span></span></p>\n<h2>可用区（Available Zone）</h2>\n<p>同一<span data-type="color" style="color:rgb(51, 51, 51)"><span data-type="background" style="background-color:rgb(255, 255, 255)">地域内，电力和网络互相独立的物理区域。同一可用区内，实例的网络延迟较低。</span></span></p>\n<h2>接入点（Endpoint）</h2>\n<p>地域的某个服务的入口域名。</p>\n<h2>命名空间（Namespace）</h2>\n<p>用于进行租户粒度的配置隔离。不同的命名空间下，可以存在相同的 Group 或 Data ID 的配置。Namespace 的常用场景之一是不同环境的配置的区分隔离，例如开发测试环境和生产环境的资源（如配置、服务）隔离等。</p>\n<h2>配置 (Configuration)</h2>\n<p>在系统开发过程中，开发者通常会将一些需要变更的参数、变量等从代码中分离出来独立管理，以独立的配置文件的形式存在。目的是让静态的系统工件或者交付物（如 WAR，JAR 包等）更好地和实际的物理运行环境进行适配。配置管理一般包含在系统部署的过程中，由系统管理员或者运维人员完成。配置变更是调整系统运行时的行为的有效手段。</p>\n<h2>配置管理 (Configuration Management)</h2>\n<p>系统配置的编辑、存储、分发、变更管理、历史版本管理、变更审计等所有与配置相关的活动。</p>\n<h2>配置项 (Configuration Item)</h2>\n<p>一个具体的可配置的参数与其值域，通常以 param-key=param-value 的形式存在。例如我们常配置系统的日志输出级别（logLevel=INFO|WARN|ERROR） 就是一个配置项。</p>\n<h2>配置集 (Configuration Set)</h2>\n<p>一组相关或者不相关的配置项的集合称为配置集。在系统中，一个配置文件通常就是一个配置集，包含了系统各个方面的配置。例如，一个配置集可能包含了数据源、线程池、日志级别等配置项。</p>\n<h2>配置集 ID（Data ID）</h2>\n<p>Nacos 中的某个配置集的 ID。配置集 ID 是组织划分配置的维度之一。Data ID 通常用于组织划分系统的配置集。一个系统或者应用可以包含多个配置集，每个配置集都可以被一个有意义的名称标识。Data ID 通常采用类 Java 包（如 com.taobao.tc.refund.log.level）的命名规则保证全局唯一性。此命名规则非强制。</p>\n<h2>配置分组（Group）</h2>\n<p>Nacos 中的一组配置集，是组织配置的维度之一。通过一个有意义的字符串（如 Buy 或 Trade ）对配置集进行分组，从而区分 Data ID 相同的配置集。当您在 Nacos 上创建一个配置时，如果未填写配置分组的名称，则配置分组的名称默认采用 DEFAULT_GROUP 。配置分组的常见场景：不同的应用或组件使用了相同的配置类型，如 database_url 配置和 MQ_topic 配置。</p>\n<h2>配置快照 (Configuration Snapshot)</h2>\n<p>Nacos 的客户端 SDK 会在本地生成配置的快照。当客户端无法连接到 Nacos Server 时，可以使用配置快照显示系统的整体容灾能力。配置快照类似于 Git 中的本地 commit，也类似于缓存，会在适当的时机更新，但是并没有缓存过期（expiration）的概念。</p>\n<h2>服务（Service）</h2>\n<p>通过预定义接口网络访问的提供给客户端的软件功能。</p>\n<h2>服务名（Service Name）</h2>\n<p>服务提供的标识，通过该标识可以唯一确定其指代的服务。</p>\n<h2>服务注册中心（Service Registry）</h2>\n<p>存储服务实例和服务负载均衡策略的数据库。</p>\n<h2>服务发现（Service Discovery）</h2>\n<p>在计算机网络上，（通常使用服务名）对服务下的实例的地址和元数据进行探测，并以预先定义的接口提供给客户端进行查询。</p>\n<h2>元信息（Metadata）</h2>\n<p><span data-type="color" style="color:rgb(38, 38, 38)"><span data-type="background" style="background-color:rgb(255, 255, 255)">自定义配置信息，如容灾策略、负载均衡策略、鉴权配置、各种标记对，从作用范围来看，分为服务级别的元信息、虚拟集群的元信息及实例的元信息。</span></span></p>\n<h2>应用（Application）</h2>\n<p>用于标识服务提供方的服务的属性。</p>\n<h2>分组（Service Group）</h2>\n<p>不同的服务可以归类到同一分组。</p>\n<h2>虚拟集群（Virtual Cluster）</h2>\n<p>同一个服务下的服务实例可以被进一步分类，分类单位可以是虚拟集群。</p>\n<h2>实例（Instance）</h2>\n<p>提供一个或多个服务的具有可访问网络地址（IP:Port）的进程。</p>\n<h2>权重（Weight）</h2>\n<p>实例级别的配置。权重为浮点数。权重越大，分配给该实例的流量越大。</p>\n<h2>健康检查（Health Check）</h2>\n<p>以指定方式检查服务下挂载 IP 的健康度，从而确认该 IP 是否能提供服务。根据检查结果，IP 会被判断为健康或不健康。对服务发起解析请求时，不健康的 IP 不会返回给客户端。</p>\n<h2>健康保护阈值（Protect Threshold）</h2>\n<p>为了防止因部分 IP 不健康导致流量全部流向健康IP，继而造成流量压力把健康 IP 压垮并形成雪崩效应，应将健康保护阈值定义为一个 0 到 1 之间的浮点数。当域名健康 IP 占总 IP 的比例小于该值时，无论IP是否健康，都会将这个IP返回给客户端。这样做虽然损失了一部分流量，但是保证了剩余健康IP能正常工作。</p>\n'},{filename:"console-guide.md",__html:"<p><strong>IN PLAN</strong> with Nacos 0.7.0</p>\n"},{filename:"contributing.md",__html:'<h2>如何贡献</h2>\n<p>我们非常欢迎您的贡献和加入，无论是微不足道的清理或大的新功能。我们希望为每个编程语言提供高质量、有良好文档的代码。</p>\n<p>这也不是代码是唯一有贡献项目的方式。我们非常重视文档、与其他项目的集成，并欣然接受这些方面的改进。</p>\n<p>联系\ngitter <a href="https://gitter.im/alibaba/nacos">https://gitter.im/alibaba/nacos</a></p>\n<h4>邮件列表</h4>\n<p>邮件列表是讨论与Dubbo相关的几乎所有内容的推荐方式。有关如何订阅的详细文档，请参阅此<a href="https://github.com/apache/incubator-dubbo/wiki/Mailing-list-subscription-guide">指南</a>。</p>\n<ul>\n<li>\n<p><a href="mailto%EF%BC%9Adev-nacos+subscribe@googlegroups.com">dev-nacos@googlegroups.com</a>：开发邮件列表，如果您在使用或开发Nacos时遇到任何问题，可以在此处提问。</p>\n</li>\n<li>\n<p><a href="mailto%EF%BC%9Acommits+nacos-subscribe@googlegroups.com">commits-nacos@googlegroups.com</a>：所有提交都将发送到此邮件列表。如果您对Nacos的开发感兴趣，可以订阅它。</p>\n</li>\n<li>\n<p><a href="mailto%EF%BC%9Ausers-nacos+subscribe@googlegroups.com">users-nacos@googlegroups.com</a>：所有Github <a href="https://github.com/alibaba/nacos/issues">issues</a>更新和[pull request]（<a href="https://github.com/alibaba/nacos/pulls">https://github.com/alibaba/nacos/pulls</a>)更新将发送到此邮件列表。</p>\n</li>\n<li>\n<p>有任何问题可以联系<a href="mailto%EF%BC%9Anacos_dev@linux.alibaba.com">nacos_dev@linux.alibaba.com</a>。</p>\n</li>\n</ul>\n<h4>贡献流程</h4>\n<p>这是贡献者的工作流程的大致轮廓：</p>\n<p>fork当前存储github库。\n创建一个分支，作为贡献的基础。 这通常是master分支。\n做出一些变更提交。\n确保提交消息的格式正确（见下文）。\n推送变更到你的fork仓库中。\n按照拉取请求模板中的清单进行操作\n在发送拉取请求之前，请将您的fork仓库与远程存储库同步。 这将使您的拉取请求变得简单明了。 见下面的指南：</p>\n<pre><code>git remote add upstream git@github.com:alibaba/nacos.git\ngit fetch upstream\ngit rebase upstream/master\ngit checkout -b your_awesome_patch\n... add some work\ngit push origin your_awesome_patch\n</code></pre>\n<p>提交pull request 到 alibaba/nacos，等待回复。如果回复的慢，请无情的催促。</p>\n<h2>贡献代码</h2>\n<p>请提交代码时候，检查以下内容：</p>\n<h4>如果变化不大，请编写一些覆盖新功能的单元测试。</h4>\n<h4>如果你正在引入一个全新的特性或API，那么首先启动wiki并在基本设计上达成共识，再开始投入。</h4>\n<h4>我们的工作是及时跟进补丁。如果我们没有及时跟进，请无情的催促我们。</h4>\n<h2>成为贡献者</h2>\n<p>We are always interested in adding new contributors. What we look for are series of contributions, good taste and ongoing interest in the project. If you are interested in becoming a committer, please let one of the existing committers know and they can help you walk through the process.</p>\n<p>Nowadays,we have several important contribution points:</p>\n<p>我们会积极纳入新的贡献者。我们更关注的是一系列的持续贡献，良好的品味和对项目维护的持续兴趣。如果你想成为一个提交者（Committer），请让一个现有的提交者(Committer)知道，他们会帮助你通过贡献加入我们。</p>\n<p>现在，我们有几个重要的贡献点：</p>\n<h4>Wiki &amp; JavaDoc</h4>\n<h4>Nacos Console</h4>\n<h4>Nacos SDK(<a href="http://C++.Net">C++.Net</a>\\Php\\Python\\Go\\Node.js)</h4>\n<h5>前提</h5>\n<p>如果你想贡献以上的项，请你必须遵守我们的一些先决条件：</p>\n<h6>可读性，一个API必须具有JavaDoc，一些非常重要的方法也必须有JavaDoc。</h6>\n<h6>可测性，关于测试过程的单元测试覆盖率（80%）</h6>\n<h6>可维护性，可满足我们的<a href="style/codeStyle.xml">PMD spec</a>，以及至少3个月的更新频率</h6>\n<h6>可部署性，我们可以鼓励您部署到<a href="http://search.maven.org/">maven repository</a></h6>\n'},{filename:"deployment.md",__html:'<h1>Nacos支持三种部署模式</h1>\n<ul>\n<li>单机模式 - 用于测试和单机试用。</li>\n<li>集群模式 - 用于生产环境，确保高可用。</li>\n<li>多集群模式 - 用于多数据中心场景。</li>\n</ul>\n<h2>单机模式下运行Nacos</h2>\n<h3>Linux/Unix/Mac</h3>\n<ul>\n<li>Standalone means it is non-cluster Mode. *\nsh <a href="http://startup.sh">startup.sh</a> -m standalone</li>\n</ul>\n<h3>Windows</h3>\n<p>cmd startup.cmd\n或者双击 startup.cmd 文件</p>\n<h2>集群模式下运行Nacos</h2>\n<h3>Linux/Unix/Mac</h3>\n<p>sh <a href="http://startup.sh">startup.sh</a></p>\n<h2>Deploy Nacos in Multi-Cluster Mode</h2>\n<p>Nacos支持NameServer路由请求模式，通过它您可以设计一个有用的映射规则来控制请求转发到相应的集群，在映射规则中您可以按命名空间或租户等分片请求...</p>\n<h3>TODO</h3>\n'},{filename:"managementAPI.md",__html:"<p><strong>IN PLAN</strong> with Nacos 0.7.0</p>\n"},{filename:"open-API.md",__html:'<h1>配置管理</h1>\n<h2>获取配置</h2>\n<h3>描述</h3>\n<p>获取Nacos上的配置。</p>\n<h3>请求类型</h3>\n<p>GET</p>\n<h3>请求URL</h3>\n<p>/nacos/v1/cs/configs</p>\n<h3>请求参数</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">名称</th>\n<th style="text-align:left">类型</th>\n<th style="text-align:left">是否必须</th>\n<th style="text-align:left">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">tenant</td>\n<td style="text-align:left">string</td>\n<td style="text-align:left">否</td>\n<td style="text-align:left">租户信息，对应 Nacos 的命名空间字段。</td>\n</tr>\n<tr>\n<td style="text-align:left">dataId</td>\n<td style="text-align:left">string</td>\n<td style="text-align:left">是</td>\n<td style="text-align:left">配置 ID。</td>\n</tr>\n<tr>\n<td style="text-align:left">group</td>\n<td style="text-align:left">string</td>\n<td style="text-align:left">是</td>\n<td style="text-align:left">配置分组。</td>\n</tr>\n</tbody>\n</table>\n<h3>返回参数</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">参数类型</th>\n<th style="text-align:left">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">string</td>\n<td style="text-align:left">配置值</td>\n</tr>\n</tbody>\n</table>\n<h3>错误编码</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">错误代码</th>\n<th style="text-align:left">描述</th>\n<th style="text-align:left">语义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">400</td>\n<td style="text-align:left">Bad Request</td>\n<td style="text-align:left">客户端请求中的语法错误</td>\n</tr>\n<tr>\n<td style="text-align:left">403</td>\n<td style="text-align:left">Forbidden</td>\n<td style="text-align:left">没有权限</td>\n</tr>\n<tr>\n<td style="text-align:left">404</td>\n<td style="text-align:left">Not Found</td>\n<td style="text-align:left">无法找到资源</td>\n</tr>\n<tr>\n<td style="text-align:left">500</td>\n<td style="text-align:left">Internal Server Error</td>\n<td style="text-align:left">服务器内部错误</td>\n</tr>\n<tr>\n<td style="text-align:left">200</td>\n<td style="text-align:left">OK</td>\n<td style="text-align:left">正常</td>\n</tr>\n</tbody>\n</table>\n<h3>示例</h3>\n<ul>\n<li>\n<p>请求示例</p>\n<pre><code class="language-plain">http:serverIp:8080/nacos/v1/cs/configs?dataId=dataIdparam&amp;group=groupParam&amp;tenant=tenantParam\n\n</code></pre>\n</li>\n<li>\n<p>返回示例</p>\n<pre><code>contentTest\n</code></pre>\n</li>\n</ul>\n<h2>监听配置</h2>\n<h3>描述</h3>\n<p>监听 Nacos 上的配置，以便实时感知配置变更。如果配置变更，则用<a href="~~64131~~">获取配置</a>接口获取配置的最新值，动态刷新本地缓存。</p>\n<p>注册监听采用的是异步 Servlet 技术。注册监听本质就是带着配置和配置值的 MD5 值和后台对比。如果 MD5 值不一致，就立即返回不一致的配置。如果值一致，就等待住 30 秒。返回值为空。</p>\n<h3>请求类型</h3>\n<p>POST</p>\n<h3>请求URL</h3>\n<p>/nacos/v1/cs/configs/listener</p>\n<h3>请求参数</h3>\n<div class="bi-table">\n  <table>\n    <colgroup>\n      <col width="auto" />\n      <col width="118px" />\n      <col width="115px" />\n      <col width="325px" />\n    </colgroup>\n    <tbody>\n      <tr>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">名称</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">类型</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">是否必须</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">描述</div>\n        </td>\n      </tr>\n      <tr>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">Listening-Configs</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">string</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">是</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">监听数据报文。格式为 dataId^2Group2contentMD5^2tenant^1或者dataId^2Group2contentMD5^1。</div>\n          <ul data-type="unordered-list">\n            <li data-type="list-item" data-list-type="unordered-list">\n              <div data-type="p">dataId：配置 ID</div>\n            </li>\n            <li data-type="list-item" data-list-type="unordered-list">\n              <div data-type="p">group：配置分组</div>\n            </li>\n            <li data-type="list-item" data-list-type="unordered-list">\n              <div data-type="p">contentMD5：配置内容 MD5 值</div>\n            </li>\n            <li data-type="list-item" data-list-type="unordered-list">\n              <div data-type="p">tenant：租户信息，对应 Nacos 的命名空间字段(非必填)</div>\n            </li>\n          </ul>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n<h3>Header 参数</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">名称</th>\n<th style="text-align:left">类型</th>\n<th style="text-align:left">是否必须</th>\n<th style="text-align:left">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">Long-Pulling-Timeout</td>\n<td style="text-align:left">string</td>\n<td style="text-align:left">是</td>\n<td style="text-align:left">长轮训等待 30s，此处填写 30000。</td>\n</tr>\n</tbody>\n</table>\n<h3>参数说明</h3>\n<ul>\n<li>配置多个字段间分隔符：^2  = Character.toString((char) 2</li>\n<li>配置间分隔符：^1 = Character.toString((char) 1)</li>\n<li>contentMD5:  MD5(content)，第一次本地缓存为空，所以这块为空串</li>\n</ul>\n<h3>返回参数</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">参数类型</th>\n<th style="text-align:left">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">string</td>\n<td style="text-align:left">配置值</td>\n</tr>\n</tbody>\n</table>\n<h3>错误编码</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">错误代码</th>\n<th style="text-align:left">描述</th>\n<th style="text-align:left">语义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">400</td>\n<td style="text-align:left">Bad Request</td>\n<td style="text-align:left">客户端请求中的语法错误</td>\n</tr>\n<tr>\n<td style="text-align:left">403</td>\n<td style="text-align:left">Forbidden</td>\n<td style="text-align:left">没有权限</td>\n</tr>\n<tr>\n<td style="text-align:left">404</td>\n<td style="text-align:left">Not Found</td>\n<td style="text-align:left">无法找到资源</td>\n</tr>\n<tr>\n<td style="text-align:left">500</td>\n<td style="text-align:left">Internal Server Error</td>\n<td style="text-align:left">服务器内部错误</td>\n</tr>\n<tr>\n<td style="text-align:left">200</td>\n<td style="text-align:left">OK</td>\n<td style="text-align:left">正常</td>\n</tr>\n</tbody>\n</table>\n<h3>示例</h3>\n<ul>\n<li>请求示例</li>\n</ul>\n<pre><code>http://serverIp:8080/nacos/v1/cs/configs/listener\n\nPOST 请求体数据内容：\n\nListening-Configs=dataId^2group^2contentMD5^2tenant^1\n</code></pre>\n<ul>\n<li>返回示例</li>\n</ul>\n<pre><code>如果配置变化\n\ndataId^2group^2tenant^1\n\n如果配置无变化：会返回空串\n</code></pre>\n<h2>发布配置</h2>\n<h3>描述</h3>\n<p>发布 Nacos 上的配置。</p>\n<h3>请求类型</h3>\n<p>POST</p>\n<h3>请求 URL</h3>\n<p>/nacos/v1/cs/configs</p>\n<h3>请求参数</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">名称</th>\n<th style="text-align:left">类型</th>\n<th style="text-align:left">是否必须</th>\n<th style="text-align:left">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">tenant</td>\n<td style="text-align:left">string</td>\n<td style="text-align:left">否</td>\n<td style="text-align:left">租户信息，对应 Nacos 的命名空间字段</td>\n</tr>\n<tr>\n<td style="text-align:left">dataId</td>\n<td style="text-align:left">string</td>\n<td style="text-align:left">是</td>\n<td style="text-align:left">配置 ID</td>\n</tr>\n<tr>\n<td style="text-align:left">group</td>\n<td style="text-align:left">string</td>\n<td style="text-align:left">是</td>\n<td style="text-align:left">配置分组</td>\n</tr>\n<tr>\n<td style="text-align:left">content</td>\n<td style="text-align:left">string</td>\n<td style="text-align:left">是</td>\n<td style="text-align:left">配置内容</td>\n</tr>\n</tbody>\n</table>\n<h3>返回参数</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">参数类型</th>\n<th style="text-align:left">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">boolean</td>\n<td style="text-align:left">是否发布成功</td>\n</tr>\n</tbody>\n</table>\n<h3>错误编码</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">错误代码</th>\n<th style="text-align:left">描述</th>\n<th style="text-align:left">语义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">400</td>\n<td style="text-align:left">Bad Request</td>\n<td style="text-align:left">客户端请求中的语法错误</td>\n</tr>\n<tr>\n<td style="text-align:left">403</td>\n<td style="text-align:left">Forbidden</td>\n<td style="text-align:left">没有权限</td>\n</tr>\n<tr>\n<td style="text-align:left">404</td>\n<td style="text-align:left">Not Found</td>\n<td style="text-align:left">无法找到资源</td>\n</tr>\n<tr>\n<td style="text-align:left">500</td>\n<td style="text-align:left">Internal Server Error</td>\n<td style="text-align:left">服务器内部错误</td>\n</tr>\n<tr>\n<td style="text-align:left">200</td>\n<td style="text-align:left">OK</td>\n<td style="text-align:left">正常</td>\n</tr>\n</tbody>\n</table>\n<h3>示例</h3>\n<ul>\n<li>请求示例</li>\n</ul>\n<pre><code>http:serverIp:8080/nacos/v1/cs/configs\n\nhttp body：\ndataId=dataIdparam&amp;group=groupParam&amp;tenant=tenantParam&amp;content=contentParam\n\n</code></pre>\n<ul>\n<li>返回示例</li>\n</ul>\n<pre><code>true\n</code></pre>\n<h2>删除配置</h2>\n<h3>描述</h3>\n<p>删除 Nacos 上的配置。</p>\n<h3>请求类型</h3>\n<p>DELETE</p>\n<h3>请求 URL</h3>\n<p>/nacos/v1/cs/configs</p>\n<h3>请求参数</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">名称</th>\n<th style="text-align:left">类型</th>\n<th style="text-align:left">是否必须</th>\n<th style="text-align:left">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">tenant</td>\n<td style="text-align:left">string</td>\n<td style="text-align:left">否</td>\n<td style="text-align:left">租户信息，对应 Naocs 的命名空间字段</td>\n</tr>\n<tr>\n<td style="text-align:left">dataId</td>\n<td style="text-align:left">string</td>\n<td style="text-align:left">是</td>\n<td style="text-align:left">配置 ID</td>\n</tr>\n<tr>\n<td style="text-align:left">group</td>\n<td style="text-align:left">string</td>\n<td style="text-align:left">是</td>\n<td style="text-align:left">配置分组</td>\n</tr>\n</tbody>\n</table>\n<h3>返回参数</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">参数类型</th>\n<th style="text-align:left">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">boolean</td>\n<td style="text-align:left">是否删除成功</td>\n</tr>\n</tbody>\n</table>\n<h3>错误编码</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">错误代码</th>\n<th style="text-align:left">描述</th>\n<th style="text-align:left">语义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">400</td>\n<td style="text-align:left">Bad Request</td>\n<td style="text-align:left">客户端请求中的语法错误</td>\n</tr>\n<tr>\n<td style="text-align:left">403</td>\n<td style="text-align:left">Forbidden</td>\n<td style="text-align:left">没有权限</td>\n</tr>\n<tr>\n<td style="text-align:left">404</td>\n<td style="text-align:left">Not Found</td>\n<td style="text-align:left">无法找到资源</td>\n</tr>\n<tr>\n<td style="text-align:left">500</td>\n<td style="text-align:left">Internal Server Error</td>\n<td style="text-align:left">服务器内部错误</td>\n</tr>\n<tr>\n<td style="text-align:left">200</td>\n<td style="text-align:left">OK</td>\n<td style="text-align:left">正常</td>\n</tr>\n</tbody>\n</table>\n<h3>示例</h3>\n<ul>\n<li>请求示例</li>\n</ul>\n<pre><code>http:serverIp:8080/nacos/v1/cs/configs?dataId=dataIdparam&amp;group=groupParam\n\n</code></pre>\n<ul>\n<li>返回示例</li>\n</ul>\n<pre><code>true\n</code></pre>\n<h1>服务发现API</h1>\n<h2>注册实例</h2>\n<h3>描述</h3>\n<p>注册一个实例到服务。</p>\n<h3>请求类型</h3>\n<p>PUT</p>\n<h3>请求路径</h3>\n<pre><code class="language-plain">/nacos/v1/ns/instance\n</code></pre>\n<h3>请求参数</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">名称</th>\n<th style="text-align:left">类型</th>\n<th style="text-align:left">是否必选</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">ip</td>\n<td style="text-align:left">字符串</td>\n<td style="text-align:left">是</td>\n<td>服务实例IP</td>\n</tr>\n<tr>\n<td style="text-align:left">port</td>\n<td style="text-align:left">int</td>\n<td style="text-align:left">是</td>\n<td>服务实例port</td>\n</tr>\n<tr>\n<td style="text-align:left">tenant</td>\n<td style="text-align:left">字符串</td>\n<td style="text-align:left">否</td>\n<td>租户ID</td>\n</tr>\n<tr>\n<td style="text-align:left">weight</td>\n<td style="text-align:left">double</td>\n<td style="text-align:left">否</td>\n<td>权重</td>\n</tr>\n<tr>\n<td style="text-align:left">healthy</td>\n<td style="text-align:left">boolean</td>\n<td style="text-align:left">否</td>\n<td>是否健康</td>\n</tr>\n<tr>\n<td style="text-align:left">metadata</td>\n<td style="text-align:left">字符串</td>\n<td style="text-align:left">否</td>\n<td>扩展信息</td>\n</tr>\n<tr>\n<td style="text-align:left">cluster</td>\n<td style="text-align:left">JSON格式字符串</td>\n<td style="text-align:left">否</td>\n<td>集群信息</td>\n</tr>\n<tr>\n<td style="text-align:left">service</td>\n<td style="text-align:left">JSON格式字符串</td>\n<td style="text-align:left">否，不存在则serviceName必须存在。</td>\n<td>服务信息</td>\n</tr>\n<tr>\n<td style="text-align:left">serviceName</td>\n<td style="text-align:left">字符串</td>\n<td style="text-align:left">如果service参数存在，则不必选，否则必选。</td>\n<td>服务名</td>\n</tr>\n</tbody>\n</table>\n<p>service参数格式：</p>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">名称</th>\n<th style="text-align:left">类型</th>\n<th style="text-align:left">是否必选</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">name</td>\n<td style="text-align:left">字符串</td>\n<td style="text-align:left">是</td>\n<td>服务名</td>\n</tr>\n<tr>\n<td style="text-align:left">app</td>\n<td style="text-align:left">int</td>\n<td style="text-align:left">否</td>\n<td>应用名</td>\n</tr>\n<tr>\n<td style="text-align:left">group</td>\n<td style="text-align:left">字符串</td>\n<td style="text-align:left">否</td>\n<td>服务分组</td>\n</tr>\n<tr>\n<td style="text-align:left">protectThreshold</td>\n<td style="text-align:left">double</td>\n<td style="text-align:left">否</td>\n<td>保护阈值</td>\n</tr>\n<tr>\n<td style="text-align:left">healthCheckMode</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">否</td>\n<td>健康检查模式：server，client或者none</td>\n</tr>\n<tr>\n<td style="text-align:left">metadata</td>\n<td style="text-align:left">JSON</td>\n<td style="text-align:left">否</td>\n<td>扩展信息</td>\n</tr>\n</tbody>\n</table>\n<p>cluster参数格式：</p>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">名称</th>\n<th style="text-align:left">类型</th>\n<th style="text-align:left">是否必选</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">name</td>\n<td style="text-align:left">字符串</td>\n<td style="text-align:left">是</td>\n<td>集群名</td>\n</tr>\n<tr>\n<td style="text-align:left">serviceName</td>\n<td style="text-align:left">字符串</td>\n<td style="text-align:left">是</td>\n<td>集群归属的服务名</td>\n</tr>\n<tr>\n<td style="text-align:left">healthChecker</td>\n<td style="text-align:left">JSON</td>\n<td style="text-align:left">否</td>\n<td>健康检查方式</td>\n</tr>\n<tr>\n<td style="text-align:left">defaultPort</td>\n<td style="text-align:left">int</td>\n<td style="text-align:left">否</td>\n<td>默认实例端口</td>\n</tr>\n<tr>\n<td style="text-align:left">defaultCheckPort</td>\n<td style="text-align:left">int</td>\n<td style="text-align:left">否</td>\n<td>默认健康检查端口</td>\n</tr>\n<tr>\n<td style="text-align:left">userIPPort4Check</td>\n<td style="text-align:left">boolean</td>\n<td style="text-align:left">否</td>\n<td>是否用实例端口做健康检查</td>\n</tr>\n<tr>\n<td style="text-align:left">metadata</td>\n<td style="text-align:left">JSON</td>\n<td style="text-align:left">否</td>\n<td>扩展信息</td>\n</tr>\n</tbody>\n</table>\n<p>healthChecker目前支持三种：TCP、HTTP和MYSQL。\n根据type的类型，需要传递的参数各有区别。\nTCP类型：</p>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">名称</th>\n<th style="text-align:left">类型</th>\n<th style="text-align:left">是否必选</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">type=TCP</td>\n<td style="text-align:left">字符串</td>\n<td style="text-align:left">是</td>\n<td>检查类型</td>\n</tr>\n</tbody>\n</table>\n<p>HTTP类型：</p>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">名称</th>\n<th style="text-align:left">类型</th>\n<th style="text-align:left">是否必选</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">type=HTTP</td>\n<td style="text-align:left">字符串</td>\n<td style="text-align:left">是</td>\n<td>检查类型</td>\n</tr>\n<tr>\n<td style="text-align:left">curlPath</td>\n<td style="text-align:left">字符串</td>\n<td style="text-align:left">是</td>\n<td>检查路径</td>\n</tr>\n<tr>\n<td style="text-align:left">curlHost</td>\n<td style="text-align:left">字符串</td>\n<td style="text-align:left">否</td>\n<td>检查host，存放HTTP Header</td>\n</tr>\n<tr>\n<td style="text-align:left">expectedResponseCode</td>\n<td style="text-align:left">int</td>\n<td style="text-align:left">否，默认200</td>\n<td>预期返回码</td>\n</tr>\n</tbody>\n</table>\n<p>MYSQL类型：</p>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">名称</th>\n<th style="text-align:left">类型</th>\n<th style="text-align:left">是否必选</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">type=MYSQL</td>\n<td style="text-align:left">字符串</td>\n<td style="text-align:left">是</td>\n<td>检查类型</td>\n</tr>\n<tr>\n<td style="text-align:left">user</td>\n<td style="text-align:left">字符串</td>\n<td style="text-align:left">是</td>\n<td>MySQL用户</td>\n</tr>\n<tr>\n<td style="text-align:left">pwd</td>\n<td style="text-align:left">字符串</td>\n<td style="text-align:left">是</td>\n<td>MySQL密码</td>\n</tr>\n<tr>\n<td style="text-align:left">cmd</td>\n<td style="text-align:left">字符串</td>\n<td style="text-align:left">是</td>\n<td>执行命令</td>\n</tr>\n</tbody>\n</table>\n<h3>示例请求</h3>\n<pre><code class="language-plain">curl -X PUT \'http://127.0.0.1:8080/nacos/v1/ns/instance?cluster=%7b%22metadata%22%3a%7b%7d%2c%22defaultCheckPort%22%3a80%2c%22defaultPort%22%3a80%2c%22healthChecker%22%3a%7b%22type%22%3a%22TCP%22%7d%2c%22name%22%3a%22%22%2c%22useIPPort4Check%22%3atrue%7d&amp;port=8080&amp;healthy=true&amp;ip=11.11.11.11&amp;weight=1.0&amp;serviceName=nacos.test.3&amp;encoding=GBK&amp;tenant=n1\'\'\n</code></pre>\n<h3>示例返回</h3>\n<p>ok</p>\n<h2>删除实例</h2>\n<h3>描述</h3>\n<p>删除服务下的一个实例。</p>\n<h3>请求类型</h3>\n<p>DELETE</p>\n<h3>请求路径</h3>\n<pre><code class="language-plain">/nacos/v1/ns/instance\n</code></pre>\n<h3>请求参数</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">名称</th>\n<th style="text-align:left">类型</th>\n<th style="text-align:left">是否必选</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">serviceName</td>\n<td style="text-align:left">字符串</td>\n<td style="text-align:left">是</td>\n<td>服务名</td>\n</tr>\n<tr>\n<td style="text-align:left">ip</td>\n<td style="text-align:left">字符串</td>\n<td style="text-align:left">是</td>\n<td>服务实例IP</td>\n</tr>\n<tr>\n<td style="text-align:left">port</td>\n<td style="text-align:left">int</td>\n<td style="text-align:left">是</td>\n<td>服务实例port</td>\n</tr>\n<tr>\n<td style="text-align:left">cluster</td>\n<td style="text-align:left">字符串</td>\n<td style="text-align:left">是</td>\n<td>集群名称</td>\n</tr>\n<tr>\n<td style="text-align:left">tenant</td>\n<td style="text-align:left">字符串</td>\n<td style="text-align:left">否</td>\n<td>租户ID</td>\n</tr>\n</tbody>\n</table>\n<h3>示例请求</h3>\n<pre><code class="language-plain">curl -X DELETE 127.0.0.1:8080/nacos/v1/ns/instance?serviceName=nacos.test.1&amp;ip=1.1.1.1&amp;port=8888&amp;cluster=TEST1\n</code></pre>\n<h3>示例返回</h3>\n<p>ok</p>\n<h2>修改实例</h2>\n<h3>描述</h3>\n<p>修改服务下的一个实例。</p>\n<h3>请求类型</h3>\n<p>POST</p>\n<h3>请求路径</h3>\n<pre><code class="language-plain">/nacos/v1/ns/instance\n</code></pre>\n<h3>请求参数</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">名称</th>\n<th style="text-align:left">类型</th>\n<th style="text-align:left">是否必选</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">serviceName</td>\n<td style="text-align:left">字符串</td>\n<td style="text-align:left">是</td>\n<td>服务名</td>\n</tr>\n<tr>\n<td style="text-align:left">ip</td>\n<td style="text-align:left">字符串</td>\n<td style="text-align:left">是</td>\n<td>服务实例IP</td>\n</tr>\n<tr>\n<td style="text-align:left">port</td>\n<td style="text-align:left">int</td>\n<td style="text-align:left">是</td>\n<td>服务实例port</td>\n</tr>\n<tr>\n<td style="text-align:left">cluster</td>\n<td style="text-align:left">字符串</td>\n<td style="text-align:left">是</td>\n<td>集群名称</td>\n</tr>\n<tr>\n<td style="text-align:left">tenant</td>\n<td style="text-align:left">字符串</td>\n<td style="text-align:left">否</td>\n<td>租户ID</td>\n</tr>\n<tr>\n<td style="text-align:left">weight</td>\n<td style="text-align:left">double</td>\n<td style="text-align:left">否</td>\n<td>权重</td>\n</tr>\n<tr>\n<td style="text-align:left">metadata</td>\n<td style="text-align:left">JSON</td>\n<td style="text-align:left">否</td>\n<td>扩展信息</td>\n</tr>\n</tbody>\n</table>\n<h3>示例请求</h3>\n<pre><code class="language-plain">curl -X POST 127.0.0.1:8080/nacos/v1/ns/instance?serviceName=nacos.test.1&amp;ip=1.1.1.1&amp;port=8888&amp;cluster=TEST1&amp;weight=8&amp;metadata={}\n</code></pre>\n<h3>示例返回</h3>\n<p>ok</p>\n<h2>查询实例列表</h2>\n<h3>描述</h3>\n<p>查询服务下的实例列表</p>\n<h3>请求类型</h3>\n<p>GET</p>\n<h3>请求路径</h3>\n<pre><code class="language-plain">/nacos/v1/ns/instances\n</code></pre>\n<h3>请求参数</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">名称</th>\n<th style="text-align:left">类型</th>\n<th style="text-align:left">是否必选</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">serviceName</td>\n<td style="text-align:left">字符串</td>\n<td style="text-align:left">是</td>\n<td>服务名</td>\n</tr>\n<tr>\n<td style="text-align:left">tenant</td>\n<td style="text-align:left">字符串</td>\n<td style="text-align:left">否</td>\n<td>租户ID</td>\n</tr>\n<tr>\n<td style="text-align:left">clusters</td>\n<td style="text-align:left">字符串，多个集群用逗号分隔</td>\n<td style="text-align:left">否</td>\n<td>集群名称</td>\n</tr>\n<tr>\n<td style="text-align:left">healthyOnly</td>\n<td style="text-align:left">boolean</td>\n<td style="text-align:left">否，默认为false</td>\n<td>是否只返回健康实例</td>\n</tr>\n</tbody>\n</table>\n<h3>示例请求</h3>\n<pre><code class="language-plain">curl -X GET 127.0.0.1:8080/nacos/v1/ns/instances?serviceName=nacos.test.1\n</code></pre>\n<h3>示例返回</h3>\n<pre><code class="language-json">{\n\t<span class="hljs-attr">"dom"</span>: <span class="hljs-string">"nacos.test.1"</span>,\n\t<span class="hljs-attr">"cacheMillis"</span>: <span class="hljs-number">1000</span>,\n\t<span class="hljs-attr">"useSpecifiedURL"</span>: <span class="hljs-literal">false</span>,\n\t<span class="hljs-attr">"hosts"</span>: [{\n\t\t<span class="hljs-attr">"valid"</span>: <span class="hljs-literal">true</span>,\n\t\t<span class="hljs-attr">"marked"</span>: <span class="hljs-literal">false</span>,\n\t\t<span class="hljs-attr">"instanceId"</span>: <span class="hljs-string">"10.10.10.10-8888-DEFAULT-nacos.test.1"</span>,\n\t\t<span class="hljs-attr">"port"</span>: <span class="hljs-number">8888</span>,\n\t\t<span class="hljs-attr">"ip"</span>: <span class="hljs-string">"10.10.10.10"</span>,\n\t\t<span class="hljs-attr">"weight"</span>: <span class="hljs-number">1.0</span>,\n\t\t<span class="hljs-attr">"metadata"</span>: {}\n\t}],\n\t<span class="hljs-attr">"checksum"</span>: <span class="hljs-string">"3bbcf6dd1175203a8afdade0e77a27cd1528787794594"</span>,\n\t<span class="hljs-attr">"lastRefTime"</span>: <span class="hljs-number">1528787794594</span>,\n\t<span class="hljs-attr">"env"</span>: <span class="hljs-string">""</span>,\n\t<span class="hljs-attr">"clusters"</span>: <span class="hljs-string">""</span>\n}\n</code></pre>\n<h2>查询实例详情</h2>\n<h3>描述</h3>\n<p>查询一个服务下个某个实例详情。</p>\n<h3>请求类型</h3>\n<p>GET</p>\n<h3>请求路径</h3>\n<pre><code class="language-plain">/nacos/v1/ns/instance\n</code></pre>\n<h3>请求参数</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">名称</th>\n<th style="text-align:left">类型</th>\n<th style="text-align:left">是否必选</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">serviceName</td>\n<td style="text-align:left">字符串</td>\n<td style="text-align:left">是</td>\n<td>服务名</td>\n</tr>\n<tr>\n<td style="text-align:left">ip</td>\n<td style="text-align:left">字符串</td>\n<td style="text-align:left">是</td>\n<td>实例IP</td>\n</tr>\n<tr>\n<td style="text-align:left">port</td>\n<td style="text-align:left">字符串</td>\n<td style="text-align:left">是</td>\n<td>实例端口</td>\n</tr>\n<tr>\n<td style="text-align:left">tenant</td>\n<td style="text-align:left">字符串</td>\n<td style="text-align:left">否</td>\n<td>租户ID</td>\n</tr>\n<tr>\n<td style="text-align:left">clusters</td>\n<td style="text-align:left">字符串，多个集群用逗号分隔</td>\n<td style="text-align:left">否</td>\n<td>集群名称</td>\n</tr>\n<tr>\n<td style="text-align:left">healthyOnly</td>\n<td style="text-align:left">boolean</td>\n<td style="text-align:left">否，默认为false</td>\n<td>是否只返回健康实例</td>\n</tr>\n</tbody>\n</table>\n<h3>示例请求</h3>\n<pre><code class="language-plain">curl -X GET \'127.0.0.1:8080/nacos/v1/ns/instance?serviceName=nacos.test.2&amp;ip=10.10.10.10&amp;port=8888&amp;cluster=DEFAULT\'\n</code></pre>\n<h3>示例返回</h3>\n<pre><code class="language-json">{\n\t<span class="hljs-attr">"metadata"</span>: {},\n\t<span class="hljs-attr">"instanceId"</span>: <span class="hljs-string">"10.10.10.10-8888-DEFAULT-nacos.test.2"</span>,\n\t<span class="hljs-attr">"port"</span>: <span class="hljs-number">8888</span>,\n\t<span class="hljs-attr">"service"</span>: <span class="hljs-string">"nacos.test.2"</span>,\n\t<span class="hljs-attr">"healthy"</span>: <span class="hljs-literal">false</span>,\n\t<span class="hljs-attr">"ip"</span>: <span class="hljs-string">"10.10.10.10"</span>,\n\t<span class="hljs-attr">"clusterName"</span>: <span class="hljs-string">"DEFAULT"</span>,\n\t<span class="hljs-attr">"weight"</span>: <span class="hljs-number">1.0</span>\n}\n</code></pre>\n'},{filename:"other-language.md",__html:'<p>Nacos社区当前仅提供了Java版本的客户端，我们将主要依靠社区的贡献来发展多语言客户端。在未来，我们将向Nacos社区用户推荐那些最被广泛使用的以及支持最好的客户端作为Nacos相应语言的官方版本。</p>\n<ul>\n<li><a href="TO_LINK">go - IN PLAN</a></li>\n<li><a href="TO_LINK">cpp - IN PLAN</a></li>\n<li><a href="TO_LINK">python - IN PLAN</a></li>\n<li><a href="TO_LINK">nodejs - IN PLAN</a></li>\n<li>more ...</li>\n</ul>\n'},{filename:"pull-request.md",__html:'<p>Please do not create a Pull Request without creating an issue first.</p>\n<h2>What is the purpose of the change</h2>\n<p>XXXXX</p>\n<h2>Brief changelog</h2>\n<p>XX</p>\n<h2>Verifying this change</h2>\n<p>XXXX</p>\n<p>Follow this checklist to help us incorporate your contribution quickly and easily:</p>\n<ul>\n<li>[ ] Make sure there is a Github issue filed for the change (usually before you start working on it). Trivial changes like typos do not require a Github issue. Your pull request should address just this issue, without pulling in other changes - one PR resolves one issue.</li>\n<li>[ ] Format the pull request title like <code>[ISSUE #123] Fix UnknownException when host config not exist</code>. Each commit in the pull request should have a meaningful subject line and body.</li>\n<li>[ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.</li>\n<li>[ ] Write necessary unit-test to verify your logic correction, more mock a little better when cross module dependency exist. If the new feature or significant change is committed, please remember to add integration-test in <a href="https://github.com/apache/rocketmq/tree/master/test">test module</a>.</li>\n<li>[ ] Run <code>mvn -B clean apache-rat:check findbugs:findbugs</code> to make sure basic checks pass. Run <code>mvn clean install -DskipITs</code> to make sure unit-test pass. Run <code>mvn clean test-compile failsafe:integration-test</code>  to make sure integration-test pass.</li>\n<li>[ ] If this contribution is large, please file an <a href="http://www.apache.org/licenses/#clas">Apache Individual Contributor License Agreement</a>.</li>\n</ul>\n'},{filename:"quick-start.md",__html:'<p>这个快速开始手册是帮忙您快速在你的电脑上，下载安装并使用Nacos。</p>\n<h2>1.预备环境准备</h2>\n<p>请确保是在环境中安装使用:</p>\n<ol>\n<li>64 bit OS，支持 Linux/Unix/Mac/Windows，推荐选用 Linux/Unix/Mac。</li>\n<li>64 bit JDK 1.8+；<a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html">下载</a>.<a href="https://docs.oracle.com/cd/E19182-01/820-7851/inst_cli_jdk_javahome_t/">配置</a>。</li>\n<li>Maven 3.2.x+；<a href="https://maven.apache.org/download.cgi">下载</a>.<a href="https://maven.apache.org/settings.html">配置</a>。</li>\n</ol>\n<h2>2.下载源码或者安装包</h2>\n<p>你可以通过两种方式来获取 Nacos。</p>\n<h3>从 Github 上下载源码方式</h3>\n<blockquote>\n<p>unzip nacos-all.zip\ncd nacos/\nmvn -Prelease-nacos clean install -U<br>\ncd distribution/target/nacos-all/nacos</p>\n</blockquote>\n<h3>下载运行包方式</h3>\n<p>下载地址\n<a href="http://nacos.oss-cn-hangzhou-zmf.aliyuncs.com/nacos-server-0.1.0.zip">zip包</a>\n<a href="http://nacos.oss-cn-hangzhou-zmf.aliyuncs.com/nacos-server-0.1.0.tar.gz">tar.gz包</a></p>\n<blockquote>\n<p>unzip nacos-all.zip\ncd nacos/bin</p>\n</blockquote>\n<h2>3.启动服务器</h2>\n<h3>Linux/Unix/Mac</h3>\n<p>启动命令(standalone代表着单机模式运行，非集群模式):\n<code>sh startup.sh -m standalone</code></p>\n<h3>Windows</h3>\n<p>启动命令：\n<code>cmd startup.cmd</code>\n或者双击startup.cmd运行文件。</p>\n<h2>4.服务注册&amp;发现和配置管理</h2>\n<h3>服务注册</h3>\n<p><code>curl -X PUT \'http://127.0.0.1:8080/nacos/v1/ns/instance?serviceName=nacos.naming.serviceName&amp;ip=20.18.7.10&amp;port=8080\'</code></p>\n<h3>服务发现</h3>\n<p><code>curl -X GET \'http://127.0.0.1:8080/nacos/v1/ns/instances?serviceName=nacos.naming.serviceName\'</code></p>\n<h3>发布配置</h3>\n<p><code>curl -X POST &quot;http://127.0.0.1:8080/nacos/v1/cs/configs?dataId=nacos.cfg.dataId&amp;group=test&amp;content=helloWorld&quot;</code></p>\n<h3>获取配置</h3>\n<p><code>curl -X GET &quot;http://127.0.0.1:8080/nacos/v1/cs/configs?dataId=nacos.cfg.dataId&amp;group=test&quot;</code></p>\n<h2>5.关闭服务器</h2>\n<h3>Linux/Unix/Mac</h3>\n<p><code>sh shutdown.sh</code></p>\n<h3>Windows</h3>\n<p><code>cmd shutdown.cmd</code></p>\n'},{filename:"roadmap.md",__html:'<p>我们计划从 Nacos 0.8.0 开始将其做到生产可用状态。在这个版本之前，我们建议您仅将其用于开发和测试环境。我们目前的计划是努力在未来6~8个月内将Nacos演进到生产可用的版本。当然计划可能因为各种因素影响而做调整，包括根据社区的声音进行优先级调整等，但整体应该不会超过1年的时间。</p>\n<p>以下是未来1年我们的主要路线图与计划。</p>\n<h2>Nacos 1.0</h2>\n<p>主要目标有两个：</p>\n<ul>\n<li>构建简单易用的，服务相关的工具集，包括服务发现、配置管理、服务元数据存储、推送、一致性及元数据管理等；</li>\n<li>与包括<a href="xx">Spring Cloud</a>、<a href="xx">Kubernetes</a>、<a href="xx">Dubbo</a>等开源生态做无缝的融合与支持，同时给这些生态带来很多面向生产时需要的优秀特性。</li>\n</ul>\n<p>以下是大致的计划：</p>\n<ul>\n<li>0.1 Basic Nacos server and simple OpenAPI and Java SDK;</li>\n<li>0.2 - 0.3 Seamless support for Kubernetes, Service Mesh and Spring Cloud service discovery and configuration management;</li>\n<li>0.4 - 0.5 Build an easy-to-use Web UI/User Console;</li>\n<li>0.6 - 0.7 High availability, ease of use, monitoring and alert etc.;</li>\n<li>0.8 Production ready;</li>\n<li>0.9 Large scale performance tuning and benchmark;</li>\n<li>1.0 GA for large scale production.</li>\n</ul>\n<h2>Nacos 2.0</h2>\n<p>主要关注在统一服务管理、服务共享及服务治理体系的开放的服务平台的建设上，主要包括两个方面:</p>\n<ul>\n<li>Dubbo 4.0 + Nacos 2.0 开放的服务平台</li>\n</ul>\n<p><img src="https://cdn.yuque.com/lark/0/2018/png/15914/1531319724777-d19b0304-535c-4af9-bee1-f358b6e55d91.png" alt="Screen Shot 2018-07-11 at 22.32.17.png"></p>\n<ul>\n<li>Kubernetes + Spring Cloud 统一服务管理</li>\n</ul>\n<p><img src="https://cdn.yuque.com/lark/0/2018/png/15914/1531319755930-0040e67e-ca05-47b9-9cd0-07ffd7452eae.png" alt="Screen Shot 2018-07-11 at 22.35.30.png"></p>\n'},{filename:"sdk.md",__html:'<h2>概述部分</h2>\n<p>maven坐标</p>\n<pre><code>&lt;groupId&gt;com.alibaba.nacos&lt;/groupId&gt;\n&lt;artifactId&gt;nacos-client&lt;/artifactId&gt;\n&lt;version&gt;0.1.0&lt;/version&gt;\n</code></pre>\n<h1>配置管理</h1>\n<h2>获取配置</h2>\n<h3>描述</h3>\n<p>用于服务启动的时候从 Nacos 获取配置。</p>\n<pre><code class="language-java"><span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">getConfig</span><span class="hljs-params">(String dataId, String group, <span class="hljs-keyword">long</span> timeoutMs)</span> <span class="hljs-keyword">throws</span> NacosException\n</span></code></pre>\n<h3>请求参数</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">参数名</th>\n<th style="text-align:left">参数类型</th>\n<th style="text-align:left">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">dataId</td>\n<td style="text-align:left">string</td>\n<td style="text-align:left">配置 ID，采用类似 package.class（如com.taobao.tc.refund.log.level）的命名规则保证全局唯一性，class 部分建议是配置的业务含义。全部字符小写。只允许英文字符和 4 种特殊字符（&quot;.&quot;、&quot;:&quot;、&quot;-&quot;、&quot;_&quot;），不超过 256 字节。</td>\n</tr>\n<tr>\n<td style="text-align:left">group</td>\n<td style="text-align:left">string</td>\n<td style="text-align:left">配置分组，建议填写产品名:模块名（Nacos:Test）保证唯一性，只允许英文字符和4种特殊字符（&quot;.&quot;、&quot;:&quot;、&quot;-&quot;、&quot;_&quot;），不超过128字节。</td>\n</tr>\n<tr>\n<td style="text-align:left">timeout</td>\n<td style="text-align:left">long</td>\n<td style="text-align:left">读取配置超时时间，单位 ms，推荐值 3000。</td>\n</tr>\n</tbody>\n</table>\n<h3>返回值</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">参数类型</th>\n<th style="text-align:left">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">string</td>\n<td style="text-align:left">配置值</td>\n</tr>\n</tbody>\n</table>\n<h3>请求示例</h3>\n<pre><code class="language-java"><span class="hljs-keyword">try</span> {\n\tString serverAddr = <span class="hljs-string">"{serverAddr}"</span>;\n\tString dataId = <span class="hljs-string">"{dataId}"</span>;\n\tString group = <span class="hljs-string">"{group}"</span>;\n\tProperties properties = <span class="hljs-keyword">new</span> Properties();\n\tproperties.put(<span class="hljs-string">"serverAddr"</span>, serverAddr);\n\tConfigService configService = NacosFactory.createConfigService(properties);\n\tString content = configService.getConfig(dataId, group, <span class="hljs-number">5000</span>);\n\tSystem.out.println(content);\n} <span class="hljs-keyword">catch</span> (NacosException e) {\n    <span class="hljs-comment">// TODO Auto-generated catch block</span>\n    e.printStackTrace();\n}\n</code></pre>\n<h3>异常说明</h3>\n<p>读取配置超时或网络异常，抛出 NacosException 异常。</p>\n<h2>监听配置</h2>\n<h3>描述</h3>\n<p>如果希望 Nacos 推送配置变更，可以使用 Nacos 动态监听配置接口来实现。</p>\n<pre><code class="language-java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">addListener</span><span class="hljs-params">(String dataId, String group, Listener listener)</span> \n</span></code></pre>\n<h3>请求参数</h3>\n<div class="bi-table">\n  <table>\n    <colgroup>\n      <col width="auto" />\n      <col width="auto" />\n      <col width="auto" />\n    </colgroup>\n    <tbody>\n      <tr>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">参数名</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">参数类型</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">描述</div>\n        </td>\n      </tr>\n      <tr>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">dataId</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">string</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">配置 ID，采用类似 package.class（如com.taobao.tc.refund.log.level）的命名规则保证全局唯一性，class 部分建议是配置的业务含义。 全部字符小写。只允许英文字符和 4 种特殊字符（&quot;.&quot;、&quot;:&quot;、&quot;-&quot;、&quot;_&quot;）。不超过 256 字节。</div>\n        </td>\n      </tr>\n      <tr>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">group</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">string</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">配置分组，建议填写<strong>产品名：模块名</strong>（如 Nacos:Test）保证唯一性。 只允许英文字符和4种特殊字符（&quot;.&quot;、&quot;:&quot;、&quot;-&quot;、&quot;_&quot;），不超过128字节。\n          </div>\n        </td>\n      </tr>\n      <tr>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">listener</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">Listener</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">监听器，配置变更进入监听器的回调函数。</div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n<h3>返回值</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">参数类型</th>\n<th style="text-align:left">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">string</td>\n<td style="text-align:left">配置值，初始化或者配置变更的时候通过回调函数返回该值。</td>\n</tr>\n</tbody>\n</table>\n<h3>请求示例</h3>\n<pre><code class="language-java">String serverAddr = <span class="hljs-string">"{serverAddr}"</span>;\nString dataId = <span class="hljs-string">"{dataId}"</span>;\nString group = <span class="hljs-string">"{group}"</span>;\nProperties properties = <span class="hljs-keyword">new</span> Properties();\nproperties.put(<span class="hljs-string">"serverAddr"</span>, serverAddr);\nConfigService configService = NacosFactory.createConfigService(properties);\nString content = configService.getConfig(dataId, group, <span class="hljs-number">5000</span>);\nSystem.out.println(content);\nconfigService.addListener(dataId, group, <span class="hljs-keyword">new</span> Listener() {\n\t<span class="hljs-meta">@Override</span>\n\t<span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">receiveConfigInfo</span><span class="hljs-params">(String configInfo)</span> </span>{\n\t\tSystem.out.println(<span class="hljs-string">"recieve1:"</span> + configInfo);\n\t}\n\t<span class="hljs-meta">@Override</span>\n\t<span class="hljs-function"><span class="hljs-keyword">public</span> Executor <span class="hljs-title">getExecutor</span><span class="hljs-params">()</span> </span>{\n\t\t<span class="hljs-keyword">return</span> <span class="hljs-keyword">null</span>;\n\t}\n});\n\n<span class="hljs-comment">// 测试让主线程不退出，因为订阅配置是守护线程，主线程退出守护线程就会退出。 正式代码中无需下面代码</span>\n<span class="hljs-keyword">while</span> (<span class="hljs-keyword">true</span>) {\n    <span class="hljs-keyword">try</span> {\n        Thread.sleep(<span class="hljs-number">1000</span>);\n    } <span class="hljs-keyword">catch</span> (InterruptedException e) {\n        e.printStackTrace();\n    }\n}\n</code></pre>\n<h2>删除监听</h2>\n<h3>描述</h3>\n<p>取消监听配置，取消监听后配置不会再推送。</p>\n<pre><code class="language-java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">removeListener</span><span class="hljs-params">(String dataId, String group, Listener listener)</span>\n</span></code></pre>\n<h3>请求参数</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">参数名</th>\n<th style="text-align:left">参数类型</th>\n<th style="text-align:left">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">dataId</td>\n<td style="text-align:left">string</td>\n<td style="text-align:left">配置 ID，采用类似 package.class（如com.taobao.tc.refund.log.level）的命名规则保证全局唯一性，class 部分建议是配置的业务含义。全部字符小写。只允许英文字符和 4 种特殊字符（&quot;.&quot;、&quot;:&quot;、&quot;-&quot;、&quot;_&quot;），不超过 256 字节。</td>\n</tr>\n<tr>\n<td style="text-align:left">listener</td>\n<td style="text-align:left">ConfigChangeListenerAdapter</td>\n<td style="text-align:left">监听器，配置变更进入监听器的回调函数。</td>\n</tr>\n</tbody>\n</table>\n<h3>使用示例</h3>\n<pre><code class="language-java">String serverAddr = <span class="hljs-string">"{serverAddr}"</span>;\nString dataId = <span class="hljs-string">"{dataId}"</span>;\nString group = <span class="hljs-string">"{group}"</span>;\nProperties properties = <span class="hljs-keyword">new</span> Properties();\nproperties.put(<span class="hljs-string">"serverAddr"</span>, serverAddr);\nConfigService configService = NacosFactory.createConfigService(properties);\nconfigService.removeListener(dataId, group, yourListener);\n</code></pre>\n<h2>发布配置</h2>\n<h3>描述</h3>\n<p>用于通过程序自动发布 Nacos 配置，以便通过自动化手段降低运维成本。</p>\n<p>__注意：__创建和修改配置时使用的同一个发布接口，当配置不存在时会创建配置，当配置已存在时会更新配置。</p>\n<pre><code class="language-java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">publishConfig</span><span class="hljs-params">(String dataId, String group, String content)</span> <span class="hljs-keyword">throws</span> NacosException\n\n</span></code></pre>\n<h3>请求参数</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">参数名</th>\n<th style="text-align:left">参数类型</th>\n<th style="text-align:left">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">dataId</td>\n<td style="text-align:left">string</td>\n<td style="text-align:left">配置 ID，采用类似 <code>package.class</code>（如 <code>com.taobao.tc.refund.log.level</code>）的命名规则保证全局唯一性。建议根据配置的业务含义来定义 class 部分。全部字符均为小写。只允许英文字符和 4 种特殊字符（“.”、“:”、“-”、“_”），不超过 256 字节。</td>\n</tr>\n<tr>\n<td style="text-align:left">group</td>\n<td style="text-align:left">string</td>\n<td style="text-align:left">配置分组，建议填写<code>产品名:模块名</code>（如 Nacos<code>:Test</code>）来保证唯一性。只允许英文字符和 4 种特殊字符（“.”、“:”、“-”、“_”），不超过 128 字节。</td>\n</tr>\n<tr>\n<td style="text-align:left">content</td>\n<td style="text-align:left">string</td>\n<td style="text-align:left">配置内容，不超过 100K 字节。</td>\n</tr>\n</tbody>\n</table>\n<h3>返回参数</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">参数类型</th>\n<th style="text-align:left">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">boolean</td>\n<td style="text-align:left">是否发布成功</td>\n</tr>\n</tbody>\n</table>\n<h3>请求示例</h3>\n<pre><code class="language-java"><span class="hljs-keyword">try</span> {\n    <span class="hljs-comment">// 初始化配置服务，控制台通过示例代码自动获取下面参数</span>\n\tString serverAddr = <span class="hljs-string">"{serverAddr}"</span>;\n\tString dataId = <span class="hljs-string">"{dataId}"</span>;\n\tString group = <span class="hljs-string">"{group}"</span>;\n\tProperties properties = <span class="hljs-keyword">new</span> Properties();\n\tproperties.put(<span class="hljs-string">"serverAddr"</span>, serverAddr);\n    ConfigService configService = NacosFactory.createConfigService(properties);\n\t<span class="hljs-keyword">boolean</span> isPublishOk = configService.publishConfig(dataId, group, <span class="hljs-string">"content"</span>);\n\tSystem.out.println(isPublishOk);\n} <span class="hljs-keyword">catch</span> (NacosException e) {\n    <span class="hljs-comment">// TODO Auto-generated catch block</span>\n    e.printStackTrace();\n}\n</code></pre>\n<h3>异常说明</h3>\n<p>读取配置超时或网络异常，抛出 NacosException 异常。</p>\n<h2>删除配置</h2>\n<h3>描述</h3>\n<p>用于通过程序自动删除 Nacos 配置，以便通过自动化手段降低运维成本。</p>\n<p><strong>注意：</strong> 当配置已存在时会删除该配置，当配置不存在时会直接返回成功消息。</p>\n<pre><code class="language-java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">removeConfig</span><span class="hljs-params">(String dataId, String group)</span> <span class="hljs-keyword">throws</span> NacosException\n\n</span></code></pre>\n<h3>请求参数</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">参数名</th>\n<th style="text-align:left">参数类型</th>\n<th style="text-align:left">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">dataId</td>\n<td style="text-align:left">string</td>\n<td style="text-align:left">配置 ID</td>\n</tr>\n<tr>\n<td style="text-align:left">group</td>\n<td style="text-align:left">string</td>\n<td style="text-align:left">配置分组</td>\n</tr>\n</tbody>\n</table>\n<h3>返回参数</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">参数类型</th>\n<th style="text-align:left">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">boolean</td>\n<td style="text-align:left">是否删除成功</td>\n</tr>\n</tbody>\n</table>\n<h3>请求示例</h3>\n<pre><code class="language-java"><span class="hljs-keyword">try</span> {\n    <span class="hljs-comment">// 初始化配置服务，控制台通过示例代码自动获取下面参数</span>\n\tString serverAddr = <span class="hljs-string">"{serverAddr}"</span>;\n\tString dataId = <span class="hljs-string">"{dataId}"</span>;\n\tString group = <span class="hljs-string">"{group}"</span>;\n\tProperties properties = <span class="hljs-keyword">new</span> Properties();\n\tproperties.put(<span class="hljs-string">"serverAddr"</span>, serverAddr);\n\n\tConfigService configService = NacosFactory.createConfigService(properties);\n\t<span class="hljs-keyword">boolean</span> isRemoveOk = configService.removeConfig(dataId, group);\n\tSystem.out.println(isRemoveOk);\n} <span class="hljs-keyword">catch</span> (NacosException e) {\n    <span class="hljs-comment">// TODO Auto-generated catch block</span>\n    e.printStackTrace();\n}\n</code></pre>\n<h3>异常说明</h3>\n<p>读取配置超时或网络异常，抛出 NacosException 异常。</p>\n<h1>服务发现SDK</h1>\n<h2>注册实例</h2>\n<h3>描述注册一个实例到服务。</h3>\n<pre><code class="language-java"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">registerInstance</span><span class="hljs-params">(String serviceName, String ip, <span class="hljs-keyword">int</span> port)</span> <span class="hljs-keyword">throws</span> NacosException</span>;\n\n<span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">registerInstance</span><span class="hljs-params">(String serviceName, String ip, <span class="hljs-keyword">int</span> port, String clusterName)</span> <span class="hljs-keyword">throws</span> NacosException</span>;\n\n<span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">registerInstance</span><span class="hljs-params">(String serviceName, Instance instance)</span> <span class="hljs-keyword">throws</span> NacosException</span>;\n</code></pre>\n<h3>请求参数</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">名称</th>\n<th style="text-align:left">类型</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">serviceName</td>\n<td style="text-align:left">字符串</td>\n<td>服务名</td>\n</tr>\n<tr>\n<td style="text-align:left">ip</td>\n<td style="text-align:left">字符串</td>\n<td>服务实例IP</td>\n</tr>\n<tr>\n<td style="text-align:left">port</td>\n<td style="text-align:left">int</td>\n<td>服务实例port</td>\n</tr>\n<tr>\n<td style="text-align:left">clusterName</td>\n<td style="text-align:left">字符串</td>\n<td>集群名</td>\n</tr>\n<tr>\n<td style="text-align:left">instance</td>\n<td style="text-align:left">参见代码注释</td>\n<td>实例属性</td>\n</tr>\n</tbody>\n</table>\n<h3>返回参数</h3>\n<p>无</p>\n<h3>请求示例</h3>\n<pre><code class="language-java">NamingService naming = NamingFactory.createNaming(System.getProperty(<span class="hljs-string">"serveAddr"</span>));\nnaming.registerInstance(<span class="hljs-string">"nacos.test.3"</span>, <span class="hljs-string">"11.11.11.11"</span>, <span class="hljs-number">8888</span>, <span class="hljs-string">"TEST1"</span>);\n\nInstance instance = <span class="hljs-keyword">new</span> Instance();\ninstance.setIp(<span class="hljs-string">"55.55.55.55"</span>);\ninstance.setPort(<span class="hljs-number">9999</span>);\ninstance.setHealthy(<span class="hljs-keyword">false</span>);\ninstance.setWeight(<span class="hljs-number">2.0</span>);\nMap&lt;String, String&gt; instanceMeta = <span class="hljs-keyword">new</span> HashMap&lt;&gt;();\ninstanceMeta.put(<span class="hljs-string">"site"</span>, <span class="hljs-string">"et2"</span>);\ninstance.setMetadata(instanceMeta);\n\nService service = <span class="hljs-keyword">new</span> Service(<span class="hljs-string">"nacos.test.4"</span>);\nservice.setApp(<span class="hljs-string">"nacos-naming"</span>);\nservice.sethealthCheckMode(<span class="hljs-string">"server"</span>);\nservice.setEnableHealthCheck(<span class="hljs-keyword">true</span>);\nservice.setProtectThreshold(<span class="hljs-number">0.8F</span>);\nservice.setGroup(<span class="hljs-string">"CNCF"</span>);\nMap&lt;String, String&gt; serviceMeta = <span class="hljs-keyword">new</span> HashMap&lt;&gt;();\nserviceMeta.put(<span class="hljs-string">"symmetricCall"</span>, <span class="hljs-string">"true"</span>);\nservice.setMetadata(serviceMeta);\ninstance.setService(service);\n\nCluster cluster = <span class="hljs-keyword">new</span> Cluster();\ncluster.setName(<span class="hljs-string">"TEST5"</span>);\nAbstractHealthChecker.Http healthChecker = <span class="hljs-keyword">new</span> AbstractHealthChecker.Http();\nhealthChecker.setExpectedResponseCode(<span class="hljs-number">400</span>);\nhealthChecker.setCurlHost(<span class="hljs-string">"USer-Agent|Nacos"</span>);\nhealthChecker.setCurlPath(<span class="hljs-string">"/xxx.html"</span>);\ncluster.setHealthChecker(healthChecker);\nMap&lt;String, String&gt; clusterMeta = <span class="hljs-keyword">new</span> HashMap&lt;&gt;();\nclusterMeta.put(<span class="hljs-string">"xxx"</span>, <span class="hljs-string">"yyyy"</span>);\ncluster.setMetadata(clusterMeta);\n\ninstance.setCluster(cluster);\n\nnaming.registerInstance(<span class="hljs-string">"nacos.test.4"</span>, instance);\n</code></pre>\n<h2>注销实例</h2>\n<h3>描述</h3>\n<p>删除服务下的一个实例。</p>\n<pre><code class="language-java"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">deregisterInstance</span><span class="hljs-params">(String serviceName, String ip, <span class="hljs-keyword">int</span> port)</span> <span class="hljs-keyword">throws</span> NacosException</span>;\n\n<span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">deregisterInstance</span><span class="hljs-params">(String serviceName, String ip, <span class="hljs-keyword">int</span> port, String clusterName)</span> <span class="hljs-keyword">throws</span> NacosException</span>;\n</code></pre>\n<h3>请求参数</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">名称</th>\n<th style="text-align:left">类型</th>\n<th style="text-align:left">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">serviceName</td>\n<td style="text-align:left">字符串</td>\n<td style="text-align:left">服务名</td>\n</tr>\n<tr>\n<td style="text-align:left">ip</td>\n<td style="text-align:left">字符串</td>\n<td style="text-align:left">服务实例IP</td>\n</tr>\n<tr>\n<td style="text-align:left">port</td>\n<td style="text-align:left">int</td>\n<td style="text-align:left">服务实例port</td>\n</tr>\n<tr>\n<td style="text-align:left">clusterName</td>\n<td style="text-align:left">字符串</td>\n<td style="text-align:left">集群名</td>\n</tr>\n</tbody>\n</table>\n<h3>返回参数</h3>\n<p>无</p>\n<h3>请求示例</h3>\n<pre><code class="language-java">NamingService naming = NamingFactory.createNaming(System.getProperty(<span class="hljs-string">"serveAddr"</span>));\nnaming.deregisterInstance(<span class="hljs-string">"nacos.test.3"</span>, <span class="hljs-string">"11.11.11.11"</span>, <span class="hljs-number">8888</span>, <span class="hljs-string">"DEFAULT"</span>);\n</code></pre>\n<h2>获取全部实例</h2>\n<h3>描述</h3>\n<p>获取服务下的所有实例。</p>\n<pre><code class="language-java"><span class="hljs-function">List&lt;Instance&gt; <span class="hljs-title">getAllInstances</span><span class="hljs-params">(String serviceName)</span> <span class="hljs-keyword">throws</span> NacosException</span>;\n\n<span class="hljs-function">List&lt;Instance&gt; <span class="hljs-title">getAllInstances</span><span class="hljs-params">(String serviceName, List&lt;String&gt; clusters)</span> <span class="hljs-keyword">throws</span> NacosException</span>;\n</code></pre>\n<h3>请求参数</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">名称</th>\n<th style="text-align:left">类型</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">serviceName</td>\n<td style="text-align:left">字符串</td>\n<td>服务名</td>\n</tr>\n<tr>\n<td style="text-align:left">clusters</td>\n<td style="text-align:left">List</td>\n<td>集群列表</td>\n</tr>\n</tbody>\n</table>\n<h3>返回参数</h3>\n<p>List<Instance> 实例列表。</p>\n<h3>请求示例</h3>\n<pre><code class="language-java">NamingService naming = NamingFactory.createNaming(System.getProperty(<span class="hljs-string">"serveAddr"</span>));\nSystem.out.println(naming.getAllInstances(<span class="hljs-string">"nacos.test.3"</span>));\n</code></pre>\n<h2>获取健康或不健康实例列表</h2>\n<h3>描述</h3>\n<p>根据条件获取过滤后的实例列表。</p>\n<pre><code class="language-java"><span class="hljs-function">List&lt;Instance&gt; <span class="hljs-title">selectInstances</span><span class="hljs-params">(String serviceName, <span class="hljs-keyword">boolean</span> healthy)</span> <span class="hljs-keyword">throws</span> NacosException</span>;\n\n<span class="hljs-function">List&lt;Instance&gt; <span class="hljs-title">selectInstances</span><span class="hljs-params">(String serviceName, List&lt;String&gt; clusters, <span class="hljs-keyword">boolean</span> healthy)</span> <span class="hljs-keyword">throws</span> NacosException</span>;\n</code></pre>\n<h3>请求参数</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">名称</th>\n<th style="text-align:left">类型</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">serviceName</td>\n<td style="text-align:left">字符串</td>\n<td>服务名</td>\n</tr>\n<tr>\n<td style="text-align:left">clusters</td>\n<td style="text-align:left">List</td>\n<td>集群列表</td>\n</tr>\n<tr>\n<td style="text-align:left">healthy</td>\n<td style="text-align:left">boolean</td>\n<td>是否健康</td>\n</tr>\n</tbody>\n</table>\n<h3>返回参数</h3>\n<p>List<Instance> 实例列表。</p>\n<h3>请求示例</h3>\n<pre><code class="language-java">NamingService naming = NamingFactory.createNaming(System.getProperty(<span class="hljs-string">"serveAddr"</span>));\nSystem.out.println(naming.selectInstances(<span class="hljs-string">"nacos.test.3"</span>, <span class="hljs-keyword">true</span>));\n</code></pre>\n<h2>获取一个健康实例</h2>\n<h3>描述</h3>\n<p>根据负载均衡算法随机获取一个健康实例。</p>\n<pre><code class="language-java"><span class="hljs-function">Instance <span class="hljs-title">selectOneHealthyInstance</span><span class="hljs-params">(String serviceName)</span> <span class="hljs-keyword">throws</span> NacosException</span>;\n\n<span class="hljs-function">Instance <span class="hljs-title">selectOneHealthyInstance</span><span class="hljs-params">(String serviceName, List&lt;String&gt; clusters)</span> <span class="hljs-keyword">throws</span> NacosException</span>;\n</code></pre>\n<h3>请求参数</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">名称</th>\n<th style="text-align:left">类型</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">serviceName</td>\n<td style="text-align:left">字符串</td>\n<td>服务名</td>\n</tr>\n<tr>\n<td style="text-align:left">clusters</td>\n<td style="text-align:left">List</td>\n<td>集群列表</td>\n</tr>\n</tbody>\n</table>\n<h3>返回参数</h3>\n<p>Instance 实例。</p>\n<h3>请求示例</h3>\n<pre><code class="language-java">NamingService naming = NamingFactory.createNaming(System.getProperty(<span class="hljs-string">"serveAddr"</span>));\nSystem.out.println(naming.selectOneHealthyInstance(<span class="hljs-string">"nacos.test.3"</span>));\n</code></pre>\n<h2>监听服务</h2>\n<h3>描述</h3>\n<p>监听服务下的实例列表变化。</p>\n<pre><code class="language-java"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">subscribe</span><span class="hljs-params">(String serviceName, EventListener listener)</span> <span class="hljs-keyword">throws</span> NacosException</span>;\n\n<span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">subscribe</span><span class="hljs-params">(String serviceName, List&lt;String&gt; clusters, EventListener listener)</span> <span class="hljs-keyword">throws</span> NacosException</span>;\n</code></pre>\n<h3>请求参数</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">名称</th>\n<th style="text-align:left">类型</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">serviceName</td>\n<td style="text-align:left">字符串</td>\n<td>服务名</td>\n</tr>\n<tr>\n<td style="text-align:left">clusters</td>\n<td style="text-align:left">List</td>\n<td>集群列表</td>\n</tr>\n<tr>\n<td style="text-align:left">listener</td>\n<td style="text-align:left">EventListener</td>\n<td>回调listener</td>\n</tr>\n</tbody>\n</table>\n<h3>返回参数</h3>\n<p>无</p>\n<h3>请求示例</h3>\n<pre><code class="language-java">NamingService naming = NamingFactory.createNaming(System.getProperty(<span class="hljs-string">"serveAddr"</span>));\nnaming.subscribe(<span class="hljs-string">"nacos.test.3"</span>, event -&gt; {\n    <span class="hljs-keyword">if</span> (event <span class="hljs-keyword">instanceof</span> NamingEvent) {\n        System.out.println(((NamingEvent) event).getServceName());\n        System.out.println(((NamingEvent) event).getInstances());\n    }\n});\n</code></pre>\n<h2>取消监听服务</h2>\n<h3>描述</h3>\n<p>取消监听服务下的实例列表变化。</p>\n<pre><code class="language-java"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">unsubscribe</span><span class="hljs-params">(String serviceName, EventListener listener)</span> <span class="hljs-keyword">throws</span> NacosException</span>;\n\n<span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">unsubscribe</span><span class="hljs-params">(String serviceName, List&lt;String&gt; clusters, EventListener listener)</span> <span class="hljs-keyword">throws</span> NacosException</span>;\n</code></pre>\n<h3>请求参数</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">名称</th>\n<th style="text-align:left">类型</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">serviceName</td>\n<td style="text-align:left">字符串</td>\n<td>服务名</td>\n</tr>\n<tr>\n<td style="text-align:left">clusters</td>\n<td style="text-align:left">List</td>\n<td>集群列表</td>\n</tr>\n<tr>\n<td style="text-align:left">listener</td>\n<td style="text-align:left">EventListener</td>\n<td>回调listener</td>\n</tr>\n</tbody>\n</table>\n<h3>返回参数</h3>\n<p>无</p>\n<h3>请求示例</h3>\n<pre><code class="language-java">\nNamingService naming = NamingFactory.createNaming(System.getProperty(<span class="hljs-string">"serveAddr"</span>));\nnaming.unsubscribe(<span class="hljs-string">"nacos.test.3"</span>, event -&gt; {});\n\n</code></pre>\n'},{filename:"use-nacos-with-dubbo.md",__html:"<p><strong>IN PLAN</strong> with Nacos 0.3.0</p>\n"},{filename:"use-nacos-with-istio.md",__html:"<p><strong>IN PLAN</strong> with Nacos 0.6.0</p>\n"},{filename:"use-nacos-with-kubernetes.md",__html:"<p><strong>IN PLAN</strong> with Nacos 0.4.0</p>\n"},{filename:"use-nacos-with-springcloud.md",__html:"<p><strong>IN PLAN</strong> with Nacos 0.2.0</p>\n"},{filename:"what-is-nacos.md",__html:'<h1>什么是Nacos</h1>\n<h2>概览</h2>\n<p>欢迎来到 Nacos 的世界！</p>\n<p>Nacos 致力于帮助您发现、配置和管理微服务。Nacos 提供了一组简单易用的特性集，帮助您实现动态服务发现、服务配置管理、服务及流量管理。</p>\n<p>Nacos 帮助您更敏捷和容易地构建、交付和管理微服务平台。 Nacos 是构建以“服务”为中心的现代应用架构(例如微服务范式、云原生范式)的服务基础设施。</p>\n<h2>什么是 Nacos？</h2>\n<p>服务（Service）是 Nacos 世界的一等公民。Nacos 支持几乎所有主流类型的服务的发现、配置和管理：</p>\n<p><a href="https://kubernetes.io/docs/concepts/services-networking/service/">Kubernetes Service</a></p>\n<p><a href="https://grpc.io/docs/guides/concepts.html#service-definition">gRPC</a> &amp; <a href="https://dubbo.incubator.apache.org/#/?lang=en-us">Dubbo RPC Service</a></p>\n<p><a href="https://spring.io/understanding/REST">Spring Cloud RESTful Service</a></p>\n<p>Nacos 的关键特性包括:</p>\n<ul>\n<li>\n<p><strong>服务发现和服务健康监测</strong></p>\n<p>Nacos 支持基于 DNS 和基于 RPC 的服务发现。服务提供者使用 <a href="xx">原生SDK TODO</a>、<a href="xx">OpenAPI TODO</a>、或一个<a href="xx">独立的Agent TODO</a>注册 Service 后，服务消费者可以使用<a href="xx">DNS TODO</a> 或<a href="xx">HTTP&amp;API TODO</a>查找和发现服务。</p>\n<p>Nacos 提供实时健康检查，阻止服务向不健康的主机或服务实例发送请求。Nacos 支持传输层(ping 或 TCP)和应用层(如 http、redis、MySQL、用户自定义）的健康检查。 对于复杂的云环境和网络拓扑环境（如 VPC、边缘服务等）的健康检查，Nacos 提供 agent 模式和服务端模式。Nacos 还提供统一的健康检查仪表盘，帮助您管理服务可用性及流量。</p>\n</li>\n<li>\n<p><strong>动态配置服务</strong></p>\n<p>动态配置服务可以让您以中心化、外部化和动态化的方式管理所有环境的应用配置和服务配置。</p>\n<p>动态配置消除了配置变更时重新部署应用和服务的需要，让配置变得更加高效和敏捷。</p>\n<p>配置中心化管理让无状态服务实现变得更简单，让服务按需弹性扩展变得更容易。</p>\n<p>Nacos 提供了一个 <a href="xx">简单易用的UI TODO</a> 帮助您管理所有的服务和应用的配置。Nacos 还提供包括配置版本跟踪、金丝雀发布、回滚配置以及客户进程配置更新状态跟踪在内的一系列开箱即用的配置管理特性，帮助您更安全地管理配置变更和控制配置变更的风险。</p>\n</li>\n<li>\n<p><strong>动态 DNS 服务</strong></p>\n<p>动态 DNS 服务支持权重路由，让您更容易地实现中间层负载均衡、更灵活的路由策略、流量控制以及数据中心内网的简单DNS解析服务。动态DNS服务帮助您更容易地实现以 DNS 协议为基础的服务发现。</p>\n<p>Nacos 提供了一些简单的 <a href="xx">DNS APIs TODO</a> 帮助您管理服务的关联域名和可用的 IP:Port 列表.</p>\n</li>\n<li>\n<p><strong>服务及其元数据管理</strong></p>\n<p>Nacos 能让您从微服务平台建设的视角管理数据中心的所有服务及元数据，包括管理服务的描述、生命周期、服务的静态依赖分析、服务的健康状态、服务的流量管理、路由及安全策略、服务的 SLA 以及最首要的 Metrics 统计数据。</p>\n</li>\n<li>\n<p><a href="xx">更多的特性列表 TODO ...</a></p>\n</li>\n</ul>\n<h2>Nacos 全景图</h2>\n<p><img src="https://cdn.yuque.com/lark/0/2018/png/15914/1530514380550-31251a79-02bb-4155-bc4f-5a9f436551a2.png" alt="nacos_landscape.png"></p>\n<p>如 Nacos 全景图所示，Nacos 无缝支持开源生态，例如<a href="xx">Dubbo and Dubbo Mesh</a>、<a href="xx">Spring Cloud</a>、<a href="xx">Kubernetes and CNCF</a>。</p>\n<p>使用 Nacos 简化服务发现、配置管理、服务治理及管理的解决方案，让开源生态微服务管理更加容易。</p>\n<p>关于如何在这些生态中使用 Nacos，请参考以下文档：</p>\n<p><a href="xx">Nacos与Spring Cloud一起使用 TODO</a>\n<a href="xx">Nacos与Dubbo一起使用 TODO</a>\n<a href="xx">Nacos与Kubernetes一起使用 TODO</a>\n<a href="xx">Nacos与gRPC一起使用 TODO</a>\n<a href="xx">Nacos与lstio一起使用 TODO</a></p>\n<h2>下一步</h2>\n<p>继续阅读 <a href="xxx">快速开始 TODO</a> 以快速上手 Nacos。</p>\n'}],"en-us":[{filename:"CLI-guide.md",__html:"<p><strong>IN PLAN</strong> with Nacos 0.7.0</p>\n"},{filename:"architecture.md",__html:'<h2>Basic Architecture and Concepts</h2>\n<p><img src="https://cdn.yuque.com/lark/0/2018/jpeg/15914/1530514514515-405eb206-4115-4773-9902-d549fe2c38c5.jpeg" alt="nacos_arch.jpg"></p>\n<ul>\n<li>\n<p><strong>Service</strong></p>\n<p>A software function or a set of software functions (such as the retrieval of specified information or the execution of a set of operations) with the purpose that different clients can be reused for different purposes (for example, through a cross-process network call). Nacos supports almost all types of services:\n<a href="https://kubernetes.io/docs/concepts/services-networking/service/">Kubernetes Service</a>\n<a href="https://grpc.io/docs/guides/concepts.html#service-definition">gRPC</a>\n<a href="https://dubbo.incubator.apache.org/#/?lang=en-us"> | Dubbo RPC Service</a>\n<a href="https://spring.io/understanding/REST">Spring Cloud RESTful Service</a></p>\n</li>\n<li>\n<p><strong>Service Registry</strong></p>\n<p>The database of services, instances and metadata. Service instances are registered with the service registry on startup and deregistered on shutdown. Clients of the service and/or routers query the service registry to find the available instances of a service. A service registry might invoke a service instance��s health check API to verify that it is able to handle requests.</p>\n</li>\n<li>\n<p><strong>Service Metadata</strong></p>\n<p>Data describing services such as service endpoints, service labels, service version, service instance weights, routing rules, security policies.</p>\n</li>\n<li>\n<p><strong>Service Provider</strong></p>\n<p>A process or application which provides reusable and callable services.</p>\n</li>\n<li>\n<p><strong>Service Consumer</strong></p>\n<p>A process or application which initiates a call to a service.</p>\n</li>\n<li>\n<p><strong>Configuration</strong></p>\n<p>During system development, developers usually extract some parameters or variables that need to be changed from the code and manage them in a separate configuration file. This enables the static system artifacts or deliverables (such as WAR and JAR packages) to fit with the physical operating environment in a better way. Configuration management is generally a part of system deployment, which is executed by the administrator or operation and maintenance personnel. Configuration modification is an effective method to adjust the behavior of a running system.</p>\n</li>\n<li>\n<p><strong>Configuration Management</strong></p>\n<p>In the data center, all configuration-related activities such as editing, storage, distribution, change management, history version management, and change audit are collectively referred to as configuration management.</p>\n</li>\n<li>\n<p><strong>Naming Service</strong></p>\n<p>Mapping the &quot;names&quot; of all the objects and entities in the distributed system to the associated metadata, for example, <code>ServiceName</code> -&gt; <code>Endpoints\\Version etc...</code>, <code>Distributed Lock Name</code> -&gt; <code>Lock Owner/Status Info</code>, <code>DNS Domain Name</code> -&gt; <code>IP List</code>. Service discovery and DNS are the two major scenarios of naming service.</p>\n</li>\n<li>\n<p><strong>Configuration Service</strong></p>\n<p>Providing dynamic configuration, service metadata and configuration management for other services or application.</p>\n</li>\n<li>\n<p><strong><a href="xx">More concepts TODO...</a></strong></p>\n</li>\n</ul>\n<h2>Artifacts, Deployment, and Start Mode</h2>\n<p><img src="https://cdn.yuque.com/lark/0/2018/png/15914/1531730742844-e8325932-258b-49b2-9473-8d1199efe20d.png" alt="undefined"></p>\n<ul>\n<li>\n<p><strong>Two Artifacts</strong></p>\n<p>Nacos supports both standard Docker images (v0.2.0) and nacos-.zip(tar.gz). You can choose the appropriate build to deploy the Nacos service according to your needs.</p>\n</li>\n<li>\n<p><strong>Two Start Modes</strong></p>\n<p>Nacos supports two start modes. you can merging the Service Registry and the Config Center in one process or deploying them in separately cluster.</p>\n</li>\n<li>\n<p><strong>Free Public Cloud Service on Alibaba Cloud</strong></p>\n<p>In addition to deploying and launching Nacos services by users themselves, Nacos also supports public cloud. Nacos public cloud service will be free in Alibaba Cloud\'s commercial service (such as <a href="xx">ACM TODO</a>, <a href="xx">EDAS TODO</a>). We also welcome other public cloud providers to offer Nacos public cloud services.</p>\n</li>\n</ul>\n'},{filename:"concepts.md",__html:'<h2>Region</h2>\n<p><span data-type="color" style="color:rgb(51, 51, 51)"><span data-type="background" style="background-color:rgb(255, 255, 255)">Physical data centers, unalterable after resources are created.</span></span></p>\n<h2>Available Zone</h2>\n<p><span data-type="color" style="color:rgb(51, 51, 51)"><span data-type="background" style="background-color:rgb(255, 255, 255)">Physical areas with independent power grids and networks in one region. The network latency for instances in the same zone is lower.</span></span></p>\n<h2>Endpoint</h2>\n<p>The entry domain name of a service in each region.</p>\n<h2>Namespace</h2>\n<p>For configuration isolation by tenants. Different namespaces may have configurations with the same Group or Data ID. One of the common scenarios for namespace is to differentiate and isolate the configurations in different environments, as in development and test environment and production environment.</p>\n<h2>Configuration</h2>\n<p>During system development, developers usually extract some parameters or variables that need to be changed from the code and manage them in a separate configuration file. This enables the static system artifacts or deliverables (such as WAR and JAR packages) to fit with the physical operating environment in a better way. Configuration management is usually a part of system deployment, which is <span data-type="color" style="color:rgb(38, 38, 38)"><span data-type="background" style="background-color:rgb(255, 255, 255)">executed</span></span> by the administrator or operation and maintenance personnel,. Configuration modification is an effective way to adjust the behavior of a running system.</p>\n<h2>Configuration Management</h2>\n<p>Configuration-related activities including editing, storage, distribution, modification management, release version management, and modification audit.</p>\n<h2>Configuration Item</h2>\n<p>A specific configurable parameter with its value range, generally in the form of param-key=param-value. For example, the log output level (logLevel=INFO|WARN|ERROR) of a system is regarded as a configuration item.</p>\n<h2>Configuration Set</h2>\n<p>A collection of related or unrelated configuration <a href="http://items.In">items.In</a> a system, a configuration file is generally a configuration set which contains all the configurations of the system. For example, a configuration set may contain configuration items such as data sources, thread pools, and log levels.</p>\n<h2>Data ID</h2>\n<p>The ID of a configuration set in Nacos. It is one of the dimensions according to which configurations are organized. Data ID is generally used to organize the system configuration sets. A system or application can contain multiple configuration sets, each of which can be identified by a meaningful name. The Data ID usually uses the naming rule similar to Java packages (for example, com.taobao.tc.refund.log.level) to ensure global uniqueness. This naming rule is not mandatory.</p>\n<h2>Group</h2>\n<p>The group of configuration sets in Nacos. It is one of the dimensions according to which configurations are organized. The configuration sets are always grouped by a meaningful string such as Buy or Trade to differentiate the configuration sets with the same Data ID. When you create a configuration on Nacos, the group name is replaced by DEFAULT_GROUP by default if not specified. A typical scenario of Group is when the same configuration type is used for different applications or components, such as database_url configuration and MQ_topic configuration.</p>\n<h2>Configuration Snapshot</h2>\n<p>The Nacos client SDK can generate snapshots of configurations on local machines. Snapshots can be used to indicate the overall disaster recovery capabilities of the system when the client cannot connect to the Nacos server. Configuration snapshot is similar to local commit in Git, or cache, which is updated at the appropriate time, but does not have the notion of expiration as in cache.</p>\n<h2>Service</h2>\n<p>Software functions which are provided to the client via the network through a predefined interface.</p>\n<h2>Service Name</h2>\n<p>Identifier provided by the service, by which the service it refers to can be uniquely determined.</p>\n<h2>Service Registry</h2>\n<p>Database which stores the instances of services and the load balancing policies for services.</p>\n<h2>Service Discovery</h2>\n<p>On a computer network, the address and metadata of an instance under the service are probed (usually using a service name) and provided to the client for querying with a predefined interface.</p>\n<h2>Metadata</h2>\n<p>Custom configuration information, such as a disaster recovery policy, a load balancing policy, an authentication configuration, and various tags. From the scope of action, it is divided into meta-information of service level, meta-information of virtual cluster, and meta-information of instance.</p>\n<h2>Application</h2>\n<p>Property of service which can be used to identify the service provider.</p>\n<h2>Service Group</h2>\n<p>Different services can be categorized into the same service group.</p>\n<h2>Virtual Cluster</h2>\n<p>Service instances under the same service can be further classified. One possible unit of this classification is Virtual Cluster.</p>\n<h2>Instance</h2>\n<p>A process with an accessible network address (IP:Port) that provides one or more services.</p>\n<h2>Weight</h2>\n<p>Instance-level configuration. Weight is a floating-point number. The greater the weight, the greater the traffic that the instance expects to be allocated.</p>\n<h2>Health Check</h2>\n<p>Health check of the instances under a service in a specified manner to ensure that the instances can work properly. Instances are judged to be healthy or unhealthy according to the inspection results. Unhealthy instances are not returned to the client when initiating a resolution request to the service.</p>\n<h2>Protect Threshold</h2>\n<p>To prevent traffic from flowing to healthy instances because of some unhealthy instances, which causes traffic pressure, healthy instance collapse, and finally an avalanche, the health protection threshold should be defined as a floating point number between 0 and 1. When the proportion of the domain name healthy instance to the total instance is smaller than this value, the instance is returned to the client regardless of the health of the instance. Although this can result in a loss of some of the traffic, we ensure that the remaining healthy instances can work normally.</p>\n'},{filename:"console-guide.md",__html:"<p><strong>IN PLAN</strong> with Nacos 0.7.0</p>\n"},{filename:"contributing.md",__html:'<h2>How to Contribute</h2>\n<p>Nacos is released under the non-restrictive Apache 2.0 license, and follows a very standard Github development process, using Github tracker for issues and merging pull requests into master. If you want to contribute even something trivial, please do not hesitate, but follow the guidelines below.</p>\n<p>We are always very happy to have contributions, whether for trivial cleanups or big new features.\nWe want to have high quality, well documented codes for each programming language.</p>\n<p>Nor is code the only way to contribute to the project. We strongly value documentation, integration with other project, and gladly accept improvements for these aspects.</p>\n<h3>Contact</h3>\n<h4>Gitter</h4>\n<p><a href="https://gitter.im/alibaba/nacos">https://gitter.im/alibaba/nacos</a></p>\n<h4>Mailing list</h4>\n<p>Mailing list is recommended for discussing almost anything related to Nacos. Please refer to this <a href="https://github.com/apache/incubator-dubbo/wiki/Mailing-list-subscription-guide">guide</a> for detailed documentation on how to subscribe to mailing lists.</p>\n<ul>\n<li>\n<p><a href="mailto:dev-nacos+subscribe@googlegroups.comg">dev-nacos@googlegroups.com</a>: The develop mailing list. You can ask questions here if you encounter any problem when using or developing Nacos.</p>\n</li>\n<li>\n<p><a href="mailto:commits+nacos-subscribe@googlegroups.com">commits-nacos@googlegroups.com</a>: All commits will be sent to this mailing list. You can subscribe to it if you are interested in Nacos\'s development.</p>\n</li>\n<li>\n<p><a href="mailto:users-nacos+subscribe@googlegroups.com">users-nacos@googlegroups.com</a>: All  Github <a href="https://github.com/alibaba/nacos/issues">issues</a> updates and <a href="https://github.com/alibaba/nacos/pulls">pull request</a> updates will be sent to this mailing list.</p>\n</li>\n<li>\n<p>If you have any questions, please contact <a href="mailto:nacos_dev@linux.alibaba.com">nacos_dev@linux.alibaba.com</a>.</p>\n</li>\n</ul>\n<h2>Contribution flow</h2>\n<p>This is a rough outline of what a contributor\'s workflow looks like:</p>\n<ul>\n<li>Fork the current repository.</li>\n<li>Create a topic branch from where to base the contribution. This is usually the master branch.</li>\n<li>Make commits of logical units.</li>\n<li>Make sure commit messages are in the proper format (see below).</li>\n<li>Push changes in a topic branch to your forked repository.</li>\n<li>Follow the checklist in the <a href="https://lark.alipay.com/nacos/nacosdocs/askodu">pull request template</a></li>\n<li>Before you send the pull request, please sync your forked repository with remote repository. This will make your pull request simple and clear. See guide below:</li>\n</ul>\n<pre><code>git remote add upstream git@github.com:alibaba/nacos.git\ngit fetch upstream\ngit rebase upstream/master\ngit checkout -b your_awesome_patch\n... add some work\ngit push origin your_awesome_patch\n</code></pre>\n<ul>\n<li>Submit a pull request to alibaba/nacos and wait for reply.</li>\n</ul>\n<p>Thanks for contributing!</p>\n<h2>Contributing Code</h2>\n<p>To submit a change for inclusion, please do the following:</p>\n<h4>If the change is non-trivial, please include unit tests that cover the new functionality.</h4>\n<h4>If you are introducing a completely new feature or API, it is a good idea to start a wiki and get consensus on the basic design first.</h4>\n<h4>It is our job to follow up on patches in a timely fashion. Nag us if we aren\'t doing our job (sometimes we drop things).</h4>\n<h2>Becoming a Committer</h2>\n<p>We are always interested in adding new contributors. What we look for are series of contributions, good taste and ongoing interest in the project. If you are interested in becoming a committer, please let one of the existing committers know and they can help you walk through the process.</p>\n<p>Nowadays, we have several important contribution points:</p>\n<h4>Wiki &amp; JavaDoc</h4>\n<h4>Nacos Console</h4>\n<h4>Nacos SDK(<a href="http://C++.Net">C++.Net</a>\\PHP\\Python\\Go\\Node.js)</h4>\n<h5>Prerequisites</h5>\n<p>If you want to contribute to the above listing points, you must abide by the prerequisites listed below.</p>\n<h6>Readability - APIs as well as important methods must have Javadoc.</h6>\n<h6>Testability - Ensure over 80% unit test coverage for main processes.</h6>\n<h6>Maintainability - Comply with our <a href="style/codeStyle.xml">PMD spec</a>, with an update frequency at least once every 3 months.</h6>\n<h6>Deployability - We encourage you to deploy into <a href="http://search.maven.org/">maven repository</a>.</h6>\n'},{filename:"deployment.md",__html:'<p>Nacos supports three types of deployment modes:</p>\n<ul>\n<li>Standalone Mode - used in DEV or TEST environment.</li>\n<li>Cluster Mode - used in production environment to ensure high-availability.</li>\n<li>Multi-Cluster Mode - in complicated production mode, you may want to deploy multi-cluster mode to support different business units.</li>\n</ul>\n<h2>Running Nacos in Standalone Mode</h2>\n<h3>Linux/Unix/Mac</h3>\n<ul>\n<li>Standalone means it is non-cluster Mode. *\nsh <a href="http://startup.sh">startup.sh</a> standalone</li>\n</ul>\n<h3>Windows</h3>\n<ul>\n<li>standalone means it is non-cluster Mode. *\ncmd startup.cmd standalone</li>\n</ul>\n<h2>Running Nacos in Multi-Node Cluster Mode</h2>\n<h3>Linux/Unix/Mac</h3>\n<p>sh <a href="http://startup.sh">startup.sh</a></p>\n<h3>Windows</h3>\n<p>cmd startup.cmd</p>\n<h2>Deploy Nacos in Multi-Cluster Mode</h2>\n<p>Nacos support a NameServer route request mode， by which you can design a useful mapping rule to control the request forward to the corresponding cluster, in the mapping rule you can sharding the request by namespace or by tenant etc...</p>\n<p>to setup a NameServer:</p>\n<ul>\n<li>TODO</li>\n</ul>\n'},{filename:"managementAPI.md",__html:"<p><strong>IN PLAN</strong> with Nacos 0.7.0</p>\n"},{filename:"open-API.md",__html:'<h1>Configuration Management</h1>\n<h2>Get configurations</h2>\n<h3>Description</h3>\n<p>This API is used to get configurations in Nacos.</p>\n<h3>Request type</h3>\n<p>GET</p>\n<h3>Request URL</h3>\n<p>/nacos/v1/cs/configs</p>\n<h3>Request parameters</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">Name</th>\n<th style="text-align:left">Type</th>\n<th style="text-align:left">Required</th>\n<th style="text-align:left">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">tenant</td>\n<td style="text-align:left">string</td>\n<td style="text-align:left">No</td>\n<td style="text-align:left">Tenant information. It corresponds to the Namespace field in Nacos.</td>\n</tr>\n<tr>\n<td style="text-align:left">dataId</td>\n<td style="text-align:left">string</td>\n<td style="text-align:left">Yes</td>\n<td style="text-align:left">Configuration ID</td>\n</tr>\n<tr>\n<td style="text-align:left">group</td>\n<td style="text-align:left">string</td>\n<td style="text-align:left">Yes</td>\n<td style="text-align:left">Configuration group</td>\n</tr>\n</tbody>\n</table>\n<h3>Return parameters</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">Parameter type</th>\n<th style="text-align:left">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">String</td>\n<td style="text-align:left">Configuration value</td>\n</tr>\n</tbody>\n</table>\n<h3>Error codes</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">Error code</th>\n<th style="text-align:left">Description</th>\n<th style="text-align:left">Meaning</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">400</td>\n<td style="text-align:left">Bad Request</td>\n<td style="text-align:left">Syntax error in the client request</td>\n</tr>\n<tr>\n<td style="text-align:left">403</td>\n<td style="text-align:left">Forbidden</td>\n<td style="text-align:left">No permission</td>\n</tr>\n<tr>\n<td style="text-align:left">404</td>\n<td style="text-align:left">Not Found</td>\n<td style="text-align:left">Not found resource</td>\n</tr>\n<tr>\n<td style="text-align:left">500</td>\n<td style="text-align:left">Internal Server Error</td>\n<td style="text-align:left">Internal server error</td>\n</tr>\n<tr>\n<td style="text-align:left">200</td>\n<td style="text-align:left">OK</td>\n<td style="text-align:left">Normal</td>\n</tr>\n</tbody>\n</table>\n<h3>Example</h3>\n<ul>\n<li>\n<p>Request example</p>\n<pre><code>http:serverIp:8080/nacos/v1/cs/configs?dataId=dataIdparam&amp;group=groupParam&amp;tenant=tenantParam\n\n</code></pre>\n</li>\n<li>\n<p>Return example</p>\n<pre><code>contentTest\n</code></pre>\n</li>\n</ul>\n<h2>Listen for configurations</h2>\n<h3>Description</h3>\n<p>This API is used to listen for configurations in Nacos to capture configuration changes. In case of any configuration changes, you can use the <a href="~~64131~~">Get Configurations</a> API to obtain the latest value of the configuration and dynamically refresh the local cache.</p>\n<p>A listener is registered using an asynchronous servlet. The nature of registering a listener is to compare the configuration value and the MD5 value of it with that of the backend. If the values differ, the inconsistent configuration is returned immediately. Otherwise, an empty string is returned after 30 seconds.</p>\n<h3>Request type</h3>\n<p>POST</p>\n<h3>Request URL</h3>\n<p>/nacos/v1/cs/configs/listener</p>\n<h3>Request parameters</h3>\n<div class="bi-table">\n  <table>\n    <colgroup>\n      <col width="auto" />\n      <col width="75px" />\n      <col width="96px" />\n      <col width="385px" />\n    </colgroup>\n    <tbody>\n      <tr>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">Name</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">Type</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">Required</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">Description</div>\n        </td>\n      </tr>\n      <tr>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">Listening-Configs</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">string</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">No</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">A request to listen for data packets. </div>\n          <div data-type="p">Format : dataId^group^2contentMD5^tenant^1 or dataId^group^2contentMD5^1.</div>\n          <ul data-type="unordered-list">\n            <li data-type="list-item" data-list-type="unordered-list">\n              <div data-type="p">dataId : Configuration ID</div>\n            </li>\n            <li data-type="list-item" data-list-type="unordered-list">\n              <div data-type="p">group : Configuration group</div>\n            </li>\n            <li data-type="list-item" data-list-type="unordered-list">\n              <div data-type="p">contentMD5 : The MD5 value of the configuration</div>\n            </li>\n            <li data-type="list-item" data-list-type="unordered-list">\n              <div data-type="p">tenant : Tenant information. It corresponds to the Namespace field in Nacos (not must)</div>\n            </li>\n          </ul>\n        </td>\n      </tr>\n      <tr>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">Listening-Configs</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">string</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">Yes</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">A request to listen for data packets.</div>\n        </td>\n      </tr>\n      <tr>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">tenant</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">string</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">Yes</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">A packet field indicating tenant information. It corresponds to the Namespace field in Nacos.</div>\n        </td>\n      </tr>\n      <tr>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">dataId</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">string</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">Yes</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">A packet field indicating the configuration ID.</div>\n        </td>\n      </tr>\n      <tr>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">group</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">string</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">Yes</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">A packet field indicating the configuration group.</div>\n        </td>\n      </tr>\n      <tr>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">contentMD5</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">string</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">Yes</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">A packet field indicating the MD5 value of the configuration.</div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n<h3>Header parameters</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">Name</th>\n<th style="text-align:left">Type</th>\n<th style="text-align:left">Required</th>\n<th style="text-align:left">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">Long-Pulling-Timeout</td>\n<td style="text-align:left">string</td>\n<td style="text-align:left">Yes</td>\n<td style="text-align:left">The timeout for long polling is 30s. Enter 30,000 here.</td>\n</tr>\n</tbody>\n</table>\n<h3>Parameter description</h3>\n<ul>\n<li>A delimiter to separate fields within a configuration: ^2  = Character.toString((char) 2</li>\n<li>A delimiter to separate configurations: ^1 = Character.toString((char) 1)</li>\n<li>contentMD5:  MD5(content). This is an empty string because the first local cache is empty.</li>\n</ul>\n<h3>Return parameters</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">Parameter type</th>\n<th style="text-align:left">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">String</td>\n<td style="text-align:left">Configuration value</td>\n</tr>\n</tbody>\n</table>\n<h3>Error codes</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">Error code</th>\n<th style="text-align:left">Description</th>\n<th style="text-align:left">Meaning</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">400</td>\n<td style="text-align:left">Bad Request</td>\n<td style="text-align:left">Syntax error in the client request</td>\n</tr>\n<tr>\n<td style="text-align:left">403</td>\n<td style="text-align:left">Forbidden</td>\n<td style="text-align:left">No permission</td>\n</tr>\n<tr>\n<td style="text-align:left">404</td>\n<td style="text-align:left">Not Found</td>\n<td style="text-align:left">Client error, not found</td>\n</tr>\n<tr>\n<td style="text-align:left">500</td>\n<td style="text-align:left">Internal Server Error</td>\n<td style="text-align:left">Internal server error</td>\n</tr>\n<tr>\n<td style="text-align:left">200</td>\n<td style="text-align:left">OK</td>\n<td style="text-align:left">Normal</td>\n</tr>\n</tbody>\n</table>\n<h3>Example</h3>\n<ul>\n<li>Request example</li>\n</ul>\n<pre><code>http://serverIp:8080/nacos/v1/cs/configs/listener\n\nPOST request body data:\n\nListening-Configs=dataId^2group^2contentMD5^2tenant^1\n\n</code></pre>\n<ul>\n<li>Return example</li>\n</ul>\n<pre><code>In case of any configuration changes,\n\ndataId^2group^2tenant^1\n\nOtherwise, an empty string is returned.\n\n</code></pre>\n<h2>Publish configuration</h2>\n<h3>Description</h3>\n<p>It publishes configurations in Nacos.</p>\n<h3>Request Type</h3>\n<p>POST</p>\n<h3>Request URL</h3>\n<p>/nacos/v1/cs/configs</p>\n<h3>Request parameters</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">Name</th>\n<th style="text-align:left">Type</th>\n<th style="text-align:left">Required</th>\n<th style="text-align:left">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">tenant</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">No</td>\n<td style="text-align:left">The tenant, corresponding to the namespace field of Nacos</td>\n</tr>\n<tr>\n<td style="text-align:left">dataId</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">Yes</td>\n<td style="text-align:left">Configuration ID</td>\n</tr>\n<tr>\n<td style="text-align:left">group</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">Yes</td>\n<td style="text-align:left">Configuration group</td>\n</tr>\n<tr>\n<td style="text-align:left">content</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">Yes</td>\n<td style="text-align:left">Configuration content</td>\n</tr>\n</tbody>\n</table>\n<h3>Response parameters</h3>\n<table>\n<thead>\n<tr>\n<th>Parametertype</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>boolean</td>\n<td>If the publishing is successful</td>\n</tr>\n</tbody>\n</table>\n<h3>Error code</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">Error code</th>\n<th style="text-align:left">Description</th>\n<th style="text-align:left">Meaning</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">400</td>\n<td style="text-align:left">Bad Request</td>\n<td style="text-align:left">Syntax error in client request</td>\n</tr>\n<tr>\n<td style="text-align:left">403</td>\n<td style="text-align:left">Forbidden</td>\n<td style="text-align:left">No permission</td>\n</tr>\n<tr>\n<td style="text-align:left">404</td>\n<td style="text-align:left">Not Found</td>\n<td style="text-align:left">Not found resource</td>\n</tr>\n<tr>\n<td style="text-align:left">500</td>\n<td style="text-align:left">Internal Server Error</td>\n<td style="text-align:left">Internal server error</td>\n</tr>\n<tr>\n<td style="text-align:left">200</td>\n<td style="text-align:left">OK</td>\n<td style="text-align:left">Normal</td>\n</tr>\n</tbody>\n</table>\n<h3>Example</h3>\n<h3>Request example</h3>\n<pre><code>http:serverIp:8080/nacos/v1/cs/configs\n\nhttp body：\ndataId=dataIdparam&amp;group=groupParam&amp;tenant=tenantParam&amp;content=contentParam\n\n</code></pre>\n<h4>Response example</h4>\n<pre><code>true\n</code></pre>\n<h2>Delete configuration</h2>\n<h3>Description</h3>\n<p>It deletes configurations in Nacos.</p>\n<h3>Request Type</h3>\n<p>DELETE</p>\n<h3>Request URL</h3>\n<p>/nacos/v1/cs/configs</p>\n<h3>Request parameters</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">Name</th>\n<th style="text-align:left">Type</th>\n<th style="text-align:left">Required</th>\n<th style="text-align:left">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">tenant</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">No</td>\n<td style="text-align:left">The tenant, corresponding to the namespace field of Nacos</td>\n</tr>\n<tr>\n<td style="text-align:left">dataId</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">Yes</td>\n<td style="text-align:left">Configuration ID</td>\n</tr>\n<tr>\n<td style="text-align:left">group</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">Yes</td>\n<td style="text-align:left">Configuration group</td>\n</tr>\n</tbody>\n</table>\n<h3>Response parameters</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">Parameter type</th>\n<th style="text-align:left">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">boolean</td>\n<td style="text-align:left">If the deletion is successful</td>\n</tr>\n</tbody>\n</table>\n<h3>Error code</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">Error code</th>\n<th style="text-align:left">Description</th>\n<th style="text-align:left">Meaning</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">400</td>\n<td style="text-align:left">Bad Request</td>\n<td style="text-align:left">Syntax error in client request</td>\n</tr>\n<tr>\n<td style="text-align:left">403</td>\n<td style="text-align:left">Forbidden</td>\n<td style="text-align:left">No permission</td>\n</tr>\n<tr>\n<td style="text-align:left">404</td>\n<td style="text-align:left">Not Found</td>\n<td style="text-align:left">Not found resource</td>\n</tr>\n<tr>\n<td style="text-align:left">500</td>\n<td style="text-align:left">Internal Server Error</td>\n<td style="text-align:left">Internal server error</td>\n</tr>\n<tr>\n<td style="text-align:left">200</td>\n<td style="text-align:left">OK</td>\n<td style="text-align:left">Normal</td>\n</tr>\n</tbody>\n</table>\n<h3>Example</h3>\n<h4>Request example</h4>\n<pre><code>http:serverIp:8080/nacos/cs/configs?dataId=dataIdparam&amp;group=groupParam\n\n</code></pre>\n<h4>Response example</h4>\n<pre><code>true\n</code></pre>\n<h1>Service Discovery API</h1>\n<h2>Register Instance</h2>\n<h3>Description</h3>\n<p>Register an instance to service.</p>\n<h3>Request Type</h3>\n<p>PUT</p>\n<h3>Request Path</h3>\n<pre><code class="language-plain">/nacos/v1/ns/instance\n</code></pre>\n<h3>Request Parameters</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">Name</th>\n<th style="text-align:left">Type</th>\n<th style="text-align:left">Required</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">ip</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">yes</td>\n<td>IP of instance</td>\n</tr>\n<tr>\n<td style="text-align:left">port</td>\n<td style="text-align:left">int</td>\n<td style="text-align:left">yes</td>\n<td>Port of instance</td>\n</tr>\n<tr>\n<td style="text-align:left">tenant</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">no</td>\n<td>ID of tenant</td>\n</tr>\n<tr>\n<td style="text-align:left">weight</td>\n<td style="text-align:left">double</td>\n<td style="text-align:left">no</td>\n<td>Weight</td>\n</tr>\n<tr>\n<td style="text-align:left">healthy</td>\n<td style="text-align:left">boolean</td>\n<td style="text-align:left">no</td>\n<td>Healthy or not</td>\n</tr>\n<tr>\n<td style="text-align:left">metadata</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">no</td>\n<td>Extended information</td>\n</tr>\n<tr>\n<td style="text-align:left">cluster</td>\n<td style="text-align:left">JSON String</td>\n<td style="text-align:left">no</td>\n<td>Cluster information</td>\n</tr>\n<tr>\n<td style="text-align:left">service</td>\n<td style="text-align:left">JSON String</td>\n<td style="text-align:left">yes if servicName does not exist</td>\n<td>Service information</td>\n</tr>\n<tr>\n<td style="text-align:left">serviceName</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">yes if service does not exist</td>\n<td>Service name</td>\n</tr>\n</tbody>\n</table>\n<p>Service parameter format：</p>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">Name</th>\n<th style="text-align:left">Type</th>\n<th style="text-align:left">Required</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">name</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">yes</td>\n<td>Service name</td>\n</tr>\n<tr>\n<td style="text-align:left">app</td>\n<td style="text-align:left">int</td>\n<td style="text-align:left">no</td>\n<td>Application name</td>\n</tr>\n<tr>\n<td style="text-align:left">group</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">no</td>\n<td>Service group</td>\n</tr>\n<tr>\n<td style="text-align:left">protectThreshold</td>\n<td style="text-align:left">double</td>\n<td style="text-align:left">no</td>\n<td>Protect threshold</td>\n</tr>\n<tr>\n<td style="text-align:left">healthCheckMode</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">no</td>\n<td>Health check mode: server/client/none</td>\n</tr>\n<tr>\n<td style="text-align:left">metadata</td>\n<td style="text-align:left">JSON String</td>\n<td style="text-align:left">no</td>\n<td>Extended information</td>\n</tr>\n</tbody>\n</table>\n<p>Cluster parameter format：</p>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">Name</th>\n<th style="text-align:left">Type</th>\n<th style="text-align:left">Required</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">name</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">yes</td>\n<td>Virtual cluster name</td>\n</tr>\n<tr>\n<td style="text-align:left">serviceName</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">yes</td>\n<td>Service name of virtual cluster</td>\n</tr>\n<tr>\n<td style="text-align:left">healthChecker</td>\n<td style="text-align:left">JSON String</td>\n<td style="text-align:left">yes</td>\n<td>Health check type</td>\n</tr>\n<tr>\n<td style="text-align:left">defaultPort</td>\n<td style="text-align:left">int</td>\n<td style="text-align:left">no</td>\n<td>Default port of instance</td>\n</tr>\n<tr>\n<td style="text-align:left">defaultCheckPort</td>\n<td style="text-align:left">int</td>\n<td style="text-align:left">no</td>\n<td>Default health check port of instance</td>\n</tr>\n<tr>\n<td style="text-align:left">userIPPort4Check</td>\n<td style="text-align:left">boolean</td>\n<td style="text-align:left">no</td>\n<td>If instance port used for health check</td>\n</tr>\n<tr>\n<td style="text-align:left">metadata</td>\n<td style="text-align:left">JSON String</td>\n<td style="text-align:left">no</td>\n<td>Extended information</td>\n</tr>\n</tbody>\n</table>\n<p>The healthChecker currently supports three types: TCP, HTTP and MYSQL.\nDepending on the type of type, there are differences in the parameters that need to be passed.</p>\n<p>TCP type：</p>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">Name</th>\n<th style="text-align:left">Type</th>\n<th style="text-align:left">Required</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">type=TCP</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">yes</td>\n<td>Check type</td>\n</tr>\n</tbody>\n</table>\n<p>HTTP type：</p>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">Name</th>\n<th style="text-align:left">Type</th>\n<th style="text-align:left">Required</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">type=HTTP</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">yes</td>\n<td>Check type</td>\n</tr>\n<tr>\n<td style="text-align:left">curlPath</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">yes</td>\n<td>Check path</td>\n</tr>\n<tr>\n<td style="text-align:left">curlHost</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">no</td>\n<td>HTTP Header</td>\n</tr>\n<tr>\n<td style="text-align:left">expectedResponseCode</td>\n<td style="text-align:left">int</td>\n<td style="text-align:left">no, default value is 200</td>\n<td>Expected return code</td>\n</tr>\n</tbody>\n</table>\n<p>MySQL type：</p>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">Name</th>\n<th style="text-align:left">Type</th>\n<th style="text-align:left">Required</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">type=MYSQL</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">yes</td>\n<td>check type</td>\n</tr>\n<tr>\n<td style="text-align:left">user</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">yes</td>\n<td>MySQL user name</td>\n</tr>\n<tr>\n<td style="text-align:left">pwd</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">yes</td>\n<td>MySQL password</td>\n</tr>\n<tr>\n<td style="text-align:left">cmd</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">yes</td>\n<td>SQL to be executed</td>\n</tr>\n</tbody>\n</table>\n<h3>Request Example</h3>\n<pre><code class="language-plain">curl -X PUT \'http://127.0.0.1:8080/nacos/v1/ns/instance?cluster=%7b%22metadata%22%3a%7b%7d%2c%22defaultCheckPort%22%3a80%2c%22defaultPort%22%3a80%2c%22healthChecker%22%3a%7b%22type%22%3a%22TCP%22%7d%2c%22name%22%3a%22%22%2c%22useIPPort4Check%22%3atrue%7d&amp;port=8080&amp;healthy=true&amp;ip=11.11.11.11&amp;weight=1.0&amp;serviceName=nacos.test.3&amp;encoding=GBK&amp;tenant=n1\'\'\n</code></pre>\n<h3>Response Example</h3>\n<p>ok</p>\n<h2>Deregister Instance</h2>\n<h3>Description</h3>\n<p>Delete instance from service.</p>\n<h3>Request Type</h3>\n<p>DELETE</p>\n<h3>Request Path</h3>\n<pre><code class="language-plain">/nacos/v1/ns/instance\n</code></pre>\n<h3>Request Parameters</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">Name</th>\n<th style="text-align:left">Type</th>\n<th style="text-align:left">Required</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">serviceName</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">yes</td>\n<td>Service name</td>\n</tr>\n<tr>\n<td style="text-align:left">ip</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">yes</td>\n<td>IP of instance</td>\n</tr>\n<tr>\n<td style="text-align:left">port</td>\n<td style="text-align:left">int</td>\n<td style="text-align:left">yes</td>\n<td>Port of instance</td>\n</tr>\n<tr>\n<td style="text-align:left">cluster</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">yes</td>\n<td>Cluster name</td>\n</tr>\n<tr>\n<td style="text-align:left">tenant</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">no</td>\n<td>ID of tenant</td>\n</tr>\n</tbody>\n</table>\n<h3>Request Example</h3>\n<pre><code class="language-plain">curl -X DELETE 127.0.0.1:8080/nacos/v1/ns/instance?serviceName=nacos.test.1&amp;ip=1.1.1.1&amp;port=8888&amp;cluster=TEST1\n</code></pre>\n<h3>Response Example</h3>\n<p>ok</p>\n<h2>Modify Instance</h2>\n<h3>Description</h3>\n<p>Modify an instance of service.</p>\n<h3>Request Type</h3>\n<p>POST</p>\n<h3>Request Path</h3>\n<pre><code class="language-plain">/nacos/v1/ns/instance\n</code></pre>\n<h3>Request Parameters</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">Name</th>\n<th style="text-align:left">Type</th>\n<th style="text-align:left">Required</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">serviceName</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">yes</td>\n<td>Service name</td>\n</tr>\n<tr>\n<td style="text-align:left">ip</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">yes</td>\n<td>IP of instance</td>\n</tr>\n<tr>\n<td style="text-align:left">port</td>\n<td style="text-align:left">int</td>\n<td style="text-align:left">yes</td>\n<td>Port of instance</td>\n</tr>\n<tr>\n<td style="text-align:left">cluster</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">yes</td>\n<td>Cluster name</td>\n</tr>\n<tr>\n<td style="text-align:left">tenant</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">no</td>\n<td>ID of tenant</td>\n</tr>\n<tr>\n<td style="text-align:left">weight</td>\n<td style="text-align:left">double</td>\n<td style="text-align:left">no</td>\n<td>Weight</td>\n</tr>\n<tr>\n<td style="text-align:left">metadata</td>\n<td style="text-align:left">JSON</td>\n<td style="text-align:left">no</td>\n<td>Extended information</td>\n</tr>\n</tbody>\n</table>\n<h3>Request Example</h3>\n<pre><code class="language-plain">curl -X POST 127.0.0.1:8080/nacos/v1/ns/instance?serviceName=nacos.test.1&amp;ip=1.1.1.1&amp;port=8888&amp;cluster=TEST1&amp;weight=8&amp;metadata={}\n</code></pre>\n<h3>Response Example</h3>\n<p>ok</p>\n<h2>Query Instances</h2>\n<h3>Description</h3>\n<p>Query instance list of service.</p>\n<h3>Request Type</h3>\n<p>GET</p>\n<h3>Request Path</h3>\n<pre><code class="language-plain">/nacos/v1/ns/instances\n</code></pre>\n<h3>Request Parameters</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">Name</th>\n<th style="text-align:left">Type</th>\n<th style="text-align:left">Required</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">serviceName</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">yes</td>\n<td>Service name</td>\n</tr>\n<tr>\n<td style="text-align:left">tenant</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">no</td>\n<td>ID of tenant</td>\n</tr>\n<tr>\n<td style="text-align:left">clusters</td>\n<td style="text-align:left">String, splited by comma</td>\n<td style="text-align:left">no</td>\n<td>Cluster name</td>\n</tr>\n<tr>\n<td style="text-align:left">healthyOnly</td>\n<td style="text-align:left">boolean</td>\n<td style="text-align:left">no, default value is false</td>\n<td>Return healthy instance or not</td>\n</tr>\n</tbody>\n</table>\n<h3>Request Example</h3>\n<pre><code class="language-plain">curl -X GET 127.0.0.1:8080/nacos/v1/ns/instances?serviceName=nacos.test.1\n</code></pre>\n<h3>Response Example</h3>\n<pre><code class="language-json">{\n\t<span class="hljs-attr">"dom"</span>: <span class="hljs-string">"nacos.test.1"</span>,\n\t<span class="hljs-attr">"cacheMillis"</span>: <span class="hljs-number">1000</span>,\n\t<span class="hljs-attr">"useSpecifiedURL"</span>: <span class="hljs-literal">false</span>,\n\t<span class="hljs-attr">"hosts"</span>: [{\n\t\t<span class="hljs-attr">"valid"</span>: <span class="hljs-literal">true</span>,\n\t\t<span class="hljs-attr">"marked"</span>: <span class="hljs-literal">false</span>,\n\t\t<span class="hljs-attr">"instanceId"</span>: <span class="hljs-string">"10.10.10.10-8888-DEFAULT-nacos.test.1"</span>,\n\t\t<span class="hljs-attr">"port"</span>: <span class="hljs-number">8888</span>,\n\t\t<span class="hljs-attr">"ip"</span>: <span class="hljs-string">"10.10.10.10"</span>,\n\t\t<span class="hljs-attr">"weight"</span>: <span class="hljs-number">1.0</span>,\n\t\t<span class="hljs-attr">"metadata"</span>: {}\n\t}],\n\t<span class="hljs-attr">"checksum"</span>: <span class="hljs-string">"3bbcf6dd1175203a8afdade0e77a27cd1528787794594"</span>,\n\t<span class="hljs-attr">"lastRefTime"</span>: <span class="hljs-number">1528787794594</span>,\n\t<span class="hljs-attr">"env"</span>: <span class="hljs-string">""</span>,\n\t<span class="hljs-attr">"clusters"</span>: <span class="hljs-string">""</span>\n}\n</code></pre>\n<h2>Query Instance Detail</h2>\n<h3>Description</h3>\n<p>Query instance details of service.</p>\n<h3>Request Type</h3>\n<p>GET</p>\n<h3>Request Path</h3>\n<pre><code class="language-plain">/nacos/v1/ns/instance\n</code></pre>\n<h3>Request Parameters</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">Name</th>\n<th style="text-align:left">Type</th>\n<th style="text-align:left">Required</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">serviceName</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">yes</td>\n<td>Service name</td>\n</tr>\n<tr>\n<td style="text-align:left">ip</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">yes</td>\n<td>IP of instance</td>\n</tr>\n<tr>\n<td style="text-align:left">port</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">yes</td>\n<td>Port of instance</td>\n</tr>\n<tr>\n<td style="text-align:left">tenant</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">no</td>\n<td>ID of tenant</td>\n</tr>\n<tr>\n<td style="text-align:left">clusters</td>\n<td style="text-align:left">String, splited by comma</td>\n<td style="text-align:left">no</td>\n<td>Cluster name</td>\n</tr>\n</tbody>\n</table>\n<h3>Request Example</h3>\n<pre><code class="language-plain">curl -X GET \'127.0.0.1:8080/nacos/v1/ns/instance?serviceName=nacos.test.2&amp;ip=10.10.10.10&amp;port=8888&amp;cluster=DEFAULT\'\n</code></pre>\n<h3>Response Example</h3>\n<pre><code class="language-json">{\n\t<span class="hljs-attr">"metadata"</span>: {},\n\t<span class="hljs-attr">"instanceId"</span>: <span class="hljs-string">"10.10.10.10-8888-DEFAULT-nacos.test.2"</span>,\n\t<span class="hljs-attr">"port"</span>: <span class="hljs-number">8888</span>,\n\t<span class="hljs-attr">"service"</span>: <span class="hljs-string">"nacos.test.2"</span>,\n\t<span class="hljs-attr">"healthy"</span>: <span class="hljs-literal">false</span>,\n\t<span class="hljs-attr">"ip"</span>: <span class="hljs-string">"10.10.10.10"</span>,\n\t<span class="hljs-attr">"clusterName"</span>: <span class="hljs-string">"DEFAULT"</span>,\n\t<span class="hljs-attr">"weight"</span>: <span class="hljs-number">1.0</span>\n}\n</code></pre>\n'},{filename:"other-language.md",__html:'<p>We will rely mainly on the community to develop multi-language clients. We will recommend the most widely used client to Nacos users as the official one in the future.</p>\n<ul>\n<li><a href="TD_LINK">go - IN PLAN</a></li>\n<li><a href="TO_LINK">cpp - IN PLAN</a></li>\n<li><a href="TO_LINK">python - IN PLAN</a></li>\n<li><a href="TO_LINK">nodejs - IN PLAN</a></li>\n<li>more ...</li>\n</ul>\n'},{filename:"pull-request.md",__html:'<p>Please do not create a Pull Request without creating an issue first.</p>\n<h2>What is the purpose of the change</h2>\n<p>XXXXX</p>\n<h2>Brief changelog</h2>\n<p>XX</p>\n<h2>Verifying this change</h2>\n<p>XXXX</p>\n<p>Follow this checklist to help us incorporate your contribution quickly and easily:</p>\n<ul>\n<li>[ ] Make sure there is a Github issue filed for the change (usually before you start working on it). Trivial changes like typos do not require a Github issue. Your pull request should address just this issue, without pulling in other changes - one PR resolves one issue.</li>\n<li>[ ] Format the pull request title like <code>[ISSUE #123] Fix UnknownException when host config not exist</code>. Each commit in the pull request should have a meaningful subject line and body.</li>\n<li>[ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.</li>\n<li>[ ] Write necessary unit-test to verify your logic correction, more mock a little better when cross module dependency exist. If the new feature or significant change is committed, please remember to add integration-test in <a href="https://github.com/apache/rocketmq/tree/master/test">test module</a>.</li>\n<li>[ ] Run <code>mvn -B clean apache-rat:check findbugs:findbugs</code> to make sure basic checks pass. Run <code>mvn clean install -DskipITs</code> to make sure unit-test pass. Run <code>mvn clean test-compile failsafe:integration-test</code>  to make sure integration-test pass.</li>\n<li>[ ] If this contribution is large, please file an <a href="http://www.apache.org/licenses/#clas">Apache Individual Contributor License Agreement</a>.</li>\n</ul>\n'},{filename:"quick-start.md",__html:'<p>This topic is about how to set up and use Nacos.</p>\n<h2>1.Prerequisites</h2>\n<p>Before you begin, install the following:</p>\n<ol>\n<li>64bit OS: Linux/Unix/Mac/Windows supported, Linux/Unix/Mac recommended.</li>\n<li>64bit JDK 1.8+: <a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html">downloads</a>, <a href="https://docs.oracle.com/cd/E19182-01/820-7851/inst_cli_jdk_javahome_t/">JAVA_HOME settings</a>.</li>\n<li>Maven 3.2.x+: <a href="https://maven.apache.org/download.cgi">downloads</a>, <a href="https://maven.apache.org/settings.html">settings</a>.</li>\n</ol>\n<h2>2.Download &amp; Build from Release</h2>\n<p>There are two ways to get Nacos.</p>\n<h3>1)Download source code from Github</h3>\n<blockquote>\n<p>unzip nacos-source.zip\ncd nacos/\nmvn -Prelease-nacos clean install -U<br>\ncd distribution/target/nacos-all/nacos/bin</p>\n</blockquote>\n<h3>2)Download run package</h3>\n<p><a href="http://nacos.oss-cn-hangzhou-zmf.aliyuncs.com/nacos-server-0.1.0.zip">zip package Download</a>\n<a href="http://nacos.oss-cn-hangzhou-zmf.aliyuncs.com/nacos-server-0.1.0.tar.gz">tar.gz package Download</a></p>\n<blockquote>\n<p>unzip nacos-all.zip\ncd nacos/bin</p>\n</blockquote>\n<h2>3.Start Server</h2>\n<h3>Linux/Unix/Mac</h3>\n<p>Run the following command to sart(standalone means non-cluster mode):\n<code>sh startup.sh -m standalone</code></p>\n<h3>Windows</h3>\n<p>Run the following command to start:\n<code>cmd startup.cmd</code></p>\n<p>Or double-click the startup.cmd run file.</p>\n<h2>4.Service &amp; Configuration Management</h2>\n<h3>Service registration</h3>\n<p><code>curl -X PUT \'http://127.0.0.1:8080/nacos/v1/ns/instance?serviceName=nacos.naming.serviceName&amp;ip=20.18.7.10&amp;port=8080\'</code></p>\n<h3>Service discovery</h3>\n<p><code>curl -X GET http://127.0.0.1:8080/nacos/v1/ns/instances?serviceName=nacos.naming.serviceName\'</code></p>\n<h3>Publish config</h3>\n<p><code>curl -X POST &quot;http://127.0.0.1:8080/nacos/v1/cs/configs?dataId=nacos.cfg.dataId&amp;group=test&amp;content=helloWorld&quot;</code></p>\n<h3>Get config</h3>\n<p><code>curl -X GET &quot;http://127.0.0.1:8080/nacos/v1/cs/configs?dataId=nacos.cfg.dataId&amp;group=test&quot;</code></p>\n<h2>5.Shutdown Servers</h2>\n<h3>Linux/Unix/Mac</h3>\n<p><code>sh shutdown.sh</code></p>\n<h3>Windows</h3>\n<p><code>cmd shutdown.cmd</code></p>\n'},{filename:"roadmap.md",__html:'<p><span data-type="color" style="color:rgb(33, 33, 33)"><span data-type="background" style="background-color:rgb(255, 255, 255)">We plan to make Nacos available for production from Nacos 0.8.0. Prior to this release, we recommend that you use it only in development and test environments.</span></span></p>\n<p><span data-type="color" style="color:rgb(33, 33, 33)"><span data-type="background" style="background-color:rgb(255, 255, 255)">Our current plan is to strive to make Nacos production ready in the 6-8 months. The plan might be adjusted due to various factors, including the priority adjustment according to the voice of the community, but the overall plan is that it should not take longer than one year.</span></span></p>\n<p>Below are the main roadmaps and plans for the next year.</p>\n<h2>Nacos 1.0</h2>\n<p>Main goals:</p>\n<ul>\n<li><span data-type="color" style="color:rgb(33, 33, 33)"><span data-type="background" style="background-color:rgb(255, 255, 255)">Build an easy-to-use, service-related toolset that includes dynamic service discovery, configuration management, service metadata storage and management, push, data consistency, and service&amp;DNS management</span></span></li>\n<li><span data-type="color" style="color:rgb(33, 33, 33)"><span data-type="background" style="background-color:rgb(255, 255, 255)">Seamless integration with and support for open-source ecosystems including </span></span><a href="xx">Spring Cloud</a><span data-type="color" style="color:rgb(33, 33, 33)"><span data-type="background" style="background-color:rgb(255, 255, 255)"> , </span></span><a href="xx">Kubernetes</a><span data-type="color" style="color:rgb(33, 33, 33)"><span data-type="background" style="background-color:rgb(255, 255, 255)">, </span></span><a href="xx">Dubbo</a><span data-type="color" style="color:rgb(33, 33, 33)"><span data-type="background" style="background-color:rgb(255, 255, 255)">, etc., while at the same time developing a variety of excellent features for large-scale production.</span></span></li>\n</ul>\n<p>The following is a rough version plan:</p>\n<ul>\n<li>0.1 Basic Nacos server and simple OpenAPI and Java SDK;</li>\n<li>0.2 - 0.3 Seamless support for Kubernetes, Service Mesh and Spring Cloud service discovery and configuration management;</li>\n<li>0.4 - 0.5 Build an easy-to-use Web UI/User Console;</li>\n<li>0.6 - 0.7 High availability, ease of use, monitoring and alert etc.;</li>\n<li>0.8 Production ready;</li>\n<li>0.9 Large scale performance tuning and benchmark;</li>\n<li>1.0 GA for large scale production.</li>\n</ul>\n<h2>Nacos 2.0</h2>\n<p><span data-type="color" style="color:rgb(33, 33, 33)"><span data-type="background" style="background-color:rgb(255, 255, 255)">Main goal:</span></span></p>\n<p>Build<span data-type="color" style="color:rgb(33, 33, 33)"><span data-type="background" style="background-color:rgb(255, 255, 255)"> an open-service platform for unified service management, service sharing and service governance. which can be further divided into two goals.</span></span></p>\n<ul>\n<li>Dubbo 4.0 + Nacos 2.0: An Open-Service Platform</li>\n</ul>\n<p><img src="https://cdn.yuque.com/lark/0/2018/png/15914/1531319724777-d19b0304-535c-4af9-bee1-f358b6e55d91.png" alt="Screen Shot 2018-07-11 at 22.32.17.png | left"></p>\n<ul>\n<li>Kubernetes + Spring Cloud: <span data-type="color" style="color:rgb(33, 33, 33)"><span data-type="background" style="background-color:rgb(255, 255, 255)">Unified Service Management</span></span></li>\n</ul>\n<p><img src="https://cdn.yuque.com/lark/0/2018/png/15914/1531319755930-0040e67e-ca05-47b9-9cd0-07ffd7452eae.png" alt="Screen Shot 2018-07-11 at 22.35.30.png | left"></p>\n'},{filename:"sdk.md",__html:'<h2>Maven</h2>\n<pre><code>&lt;groupId&gt;com.alibaba.nacos&lt;/groupId&gt;\n&lt;artifactId&gt;nacos-client&lt;/artifactId&gt;\n&lt;version&gt;0.1.0&lt;/version&gt;\n</code></pre>\n<h1>Configuration Management</h1>\n<h2>Get configuration</h2>\n<h3>Description</h3>\n<p>Get configuration from Nacos when a service starts.</p>\n<pre><code class="language-java"><span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">getConfig</span><span class="hljs-params">(String dataId, String group, <span class="hljs-keyword">long</span> timeoutMs)</span> <span class="hljs-keyword">throws</span> NacosException\n</span></code></pre>\n<h3>Request parameters</h3>\n<div class="bi-table">\n  <table>\n    <colgroup>\n      <col width="auto" />\n      <col width="auto" />\n      <col width="auto" />\n    </colgroup>\n    <tbody>\n      <tr>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">Name</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">Type</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">Description</div>\n        </td>\n      </tr>\n      <tr>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">dataId</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">string</div>\n          <div data-type="p"></div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">Configuration ID. Use a naming rule similar to package.class (for example, com.taobao.tc.refund.log.level) to ensure global uniqueness. It is recommended to indicate business meaning of the configuration in the &quot;class&quot; section. Use\n            lower case for all characters. Use alphabetical letters and these four special characters (&quot;.&quot;, &quot;:&quot;, &quot;-&quot;, &quot;_&quot;) only. Up to 256 characters are allowed.</div>\n        </td>\n      </tr>\n      <tr>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">group</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">string</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">Configuration group. To ensure uniqueness, format such as <strong>product name: module name </strong>(for example, Nacos:Test) is preferred. Use alphabetical letters and these four special characters (&quot;.&quot;, &quot;:&quot;, &quot;-&quot;,\n            &quot;_&quot;) only. Up to 128 characters are allowed.</div>\n        </td>\n      </tr>\n      <tr>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">timeout</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">long</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">Length of configuration read time-out (in ms). Recommended value: 3000.</div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n<h3>Return values</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">Type</th>\n<th style="text-align:left">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">string</td>\n<td style="text-align:left">configuration value</td>\n</tr>\n</tbody>\n</table>\n<h3>Request example</h3>\n<pre><code class="language-java"><span class="hljs-keyword">try</span> {\n    <span class="hljs-comment">// Initialize the configuration service, and the console automatically obtains the following parameters through the sample code.</span>\n\tString serverAddr = <span class="hljs-string">"{serverAddr}"</span>;\n\tString dataId = <span class="hljs-string">"{dataId}"</span>;\n\tString group = <span class="hljs-string">"{group}"</span>;\n\tProperties properties = <span class="hljs-keyword">new</span> Properties();\n\tproperties.put(<span class="hljs-string">"serverAddr"</span>, serverAddr);\n\tConfigService configService = NacosFactory.createConfigService(properties);\n    <span class="hljs-comment">// Actively get the configuration.</span>\n\tString content = configService.getConfig(dataId, group, <span class="hljs-number">5000</span>);\n\tSystem.out.println(content);\n} <span class="hljs-keyword">catch</span> (NacosException e) {\n    <span class="hljs-comment">// TODO Auto-generated catch block</span>\n    e.printStackTrace();\n}\n</code></pre>\n<h3>Exception specification</h3>\n<p>A ConfigException is thrown in case of a configuration read time-out or a network error.</p>\n<h2>Listen configuration</h2>\n<h3>Description</h3>\n<p>Use dynamic configuration listening API to enable Nacos to send configuration change notifications.</p>\n<pre><code class="language-java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">addListener</span><span class="hljs-params">(String dataId, ConfigChangeListenerAdapter listener)</span>\n</span></code></pre>\n<h3>Request parameters</h3>\n<div class="bi-table">\n  <table>\n    <colgroup>\n      <col width="auto" />\n      <col width="auto" />\n      <col width="auto" />\n    </colgroup>\n    <tbody>\n      <tr>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">Name</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">Type</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">Description</div>\n        </td>\n      </tr>\n      <tr>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">dataId</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">string</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">Configuration ID. Use a naming rule similar to package.class (for example, com.taobao.tc.refund.log.level) to ensure global uniqueness. It is recommended to indicate business meaning of the configuration in the &quot;class&quot; section. Use\n            lower case for all characters. Use alphabetical letters and these four special characters (&quot;.&quot;, &quot;:&quot;, &quot;-&quot;, &quot;_&quot;) only. Up to 256 characters are allowed.</div>\n        </td>\n      </tr>\n      <tr>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">group</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">string</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">Configuration group. To ensure uniqueness, format such as <strong>product name: module name </strong> (for example, Nacos:Test) is preferred. Use alphabetical letters and these four special characters (&quot;.&quot;, &quot;:&quot;, &quot;-&quot;,\n            &quot;_&quot;) only. Up to 128 characters are allowed.</div>\n        </td>\n      </tr>\n      <tr>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">listener</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">Config Change Listener</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">Listener. Configuration changes go into the callback function of the listener.</div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n<h3>Return values</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">Type</th>\n<th style="text-align:left">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">string</td>\n<td style="text-align:left">Configuration value. This value is returned through the callback function during initialization or configuration modification.</td>\n</tr>\n</tbody>\n</table>\n<h3>Request example</h3>\n<pre><code class="language-java">\n<span class="hljs-comment">// Initialize the configuration service, and the console automatically obtains the following parameters through the sample code.</span>\nString serverAddr = <span class="hljs-string">"{serverAddr}"</span>;\nString dataId = <span class="hljs-string">"{dataId}"</span>;\nString group = <span class="hljs-string">"{group}"</span>;\nProperties properties = <span class="hljs-keyword">new</span> Properties();\nproperties.put(<span class="hljs-string">"serverAddr"</span>, serverAddr);\nConfigService configService = NacosFactory.createConfigService(properties);\nString content = configService.getConfig(dataId, group, <span class="hljs-number">5000</span>);\nSystem.out.println(content);\nconfigService.addListener(dataId, group, <span class="hljs-keyword">new</span> Listener() {\n\t<span class="hljs-meta">@Override</span>\n\t<span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">receiveConfigInfo</span><span class="hljs-params">(String configInfo)</span> </span>{\n\t\tSystem.out.println(<span class="hljs-string">"receive1:"</span> + configInfo);\n\t}\n\t<span class="hljs-meta">@Override</span>\n\t<span class="hljs-function"><span class="hljs-keyword">public</span> Executor <span class="hljs-title">getExecutor</span><span class="hljs-params">()</span> </span>{\n\t\t<span class="hljs-keyword">return</span> <span class="hljs-keyword">null</span>;\n\t}\n});\n\n<span class="hljs-comment">// Keep the main thread alive throughout the test, because the configuration subscription runs in a daemon thread, which exits once the main thread exits. The following code is not required in a real environment.</span>\n<span class="hljs-keyword">while</span> (<span class="hljs-keyword">true</span>) {\n    <span class="hljs-keyword">try</span> {\n        Thread.sleep(<span class="hljs-number">1000</span>);\n    } <span class="hljs-keyword">catch</span> (InterruptedException e) {\n        e.printStackTrace();\n    }\n}\n</code></pre>\n<h2>Delete Listening</h2>\n<h3>Description</h3>\n<p>Cancel listen configuration. No more notification after cancellation.</p>\n<pre><code class="language-java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">removeListener</span><span class="hljs-params">(String dataId, String group, Listener listener)</span>\n</span></code></pre>\n<h3>Request parameters</h3>\n<div class="bi-table">\n  <table>\n    <colgroup>\n      <col width="auto" />\n      <col width="auto" />\n      <col width="auto" />\n    </colgroup>\n    <tbody>\n      <tr>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">Name</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">Type</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">Description</div>\n        </td>\n      </tr>\n      <tr>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">dataId</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">string</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">Configuration ID. Use a naming rule similar to package.class (for example, com.taobao.tc.refund.log.level) to ensure global uniqueness. It is recommended to indicate business meaning of the configuration in the &quot;class&quot; section. Use\n            lower case for all characters. Use alphabetical letters and these four special characters (&quot;.&quot;, &quot;:&quot;, &quot;-&quot;, &quot;_&quot;) only. Up to 256 characters are allowed.</div>\n        </td>\n      </tr>\n      <tr>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">listener</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">ConfigChangeListenerAdapter</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">Listener. Configuration changes go into the callback function of the listener.</div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n<h3>Request example</h3>\n<pre><code class="language-java">String serverAddr = <span class="hljs-string">"{serverAddr}"</span>;\nString dataId = <span class="hljs-string">"{dataId}"</span>;\nString group = <span class="hljs-string">"{group}"</span>;\nProperties properties = <span class="hljs-keyword">new</span> Properties();\nproperties.put(<span class="hljs-string">"serverAddr"</span>, serverAddr);\nConfigService configService = NacosFactory.createConfigService(properties);\nconfigService.removeListener(dataId, group, yourListener);\n</code></pre>\n<h2>Publish configuration</h2>\n<h3>Description</h3>\n<p>Publish Nacos configurations automatically to reduce the operation and maintenance cost.</p>\n<p><strong>Note:</strong> It uses the same publishing interface to create or modify a configuration. If the specified configuration doesn’t exist, it will create a configuration. If the specified configuration exists, it will update the configuration.</p>\n<pre><code class="language-java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">publishConfig</span><span class="hljs-params">(String dataId, String group, String content)</span> <span class="hljs-keyword">throws</span> NacosException\n\n</span></code></pre>\n<h3>Request parameters</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">Name</th>\n<th style="text-align:left">Type</th>\n<th style="text-align:left">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">dataId</td>\n<td style="text-align:left">string</td>\n<td style="text-align:left">Configuration ID. Naming rule is similar to package.class (com.taobao.tc.refund.log.level) is used to ensure the global uniqueness We recommend that you define class by business meaning. All characters must be in lower case. Use alphabetical letters and these four special characters (&quot;.&quot;, &quot;:&quot;, &quot;-&quot;, &quot;_&quot;) only. Up to 256 characters are allowed.</td>\n</tr>\n<tr>\n<td style="text-align:left">group</td>\n<td style="text-align:left">string</td>\n<td style="text-align:left">Configuration group. We recommend that you use product name: module name (for example Nacos:Test) to ensure the uniqueness. Use alphabetical letters and these four special characters (&quot;.&quot;, &quot;:&quot;, &quot;-&quot;, &quot;_&quot;) only. Up to 128 characters are allowed.</td>\n</tr>\n<tr>\n<td style="text-align:left">content</td>\n<td style="text-align:left">string</td>\n<td style="text-align:left">Configuration content. No more than 100K bytes.</td>\n</tr>\n</tbody>\n</table>\n<h3>Response parameters</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">Type</th>\n<th style="text-align:left">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">boolean</td>\n<td style="text-align:left">If the publishing is successful</td>\n</tr>\n</tbody>\n</table>\n<h3>Request example</h3>\n<pre><code class="language-java"><span class="hljs-keyword">try</span> {\n    <span class="hljs-comment">// Initialize the configuration service. Retrieves the following parameters in console with sample code</span>\n\tString serverAddr = <span class="hljs-string">"{serverAddr}"</span>;\n\tString dataId = <span class="hljs-string">"{dataId}"</span>;\n\tString group = <span class="hljs-string">"{group}"</span>;\n\tProperties properties = <span class="hljs-keyword">new</span> Properties();\n\tproperties.put(<span class="hljs-string">"serverAddr"</span>, serverAddr);\n    ConfigService configService = NacosFactory.createConfigService(properties);\n\t<span class="hljs-keyword">boolean</span> isPublishOk = configService.publishConfig(dataId, group, <span class="hljs-string">"content"</span>);\n\tSystem.out.println(isPublishOk);\n} <span class="hljs-keyword">catch</span> (NacosException e) {\n    <span class="hljs-comment">// TODO Auto-generated catch block</span>\n    e.printStackTrace();\n}\n</code></pre>\n<h3>Exceptions</h3>\n<p>In case of reading configuration timeout or network issues, ConfigException exception is thrown.</p>\n<h2>Delete configuration</h2>\n<h3>Description</h3>\n<p>It deletes Nacos configurations automatically with program to reduce operation and maintenance costs with automation.</p>\n<p><strong>Note:</strong> If the specified configuration exists, then it deletes the configuration. If the specified configuration doesn’t exist, then it returns a successful message.</p>\n<pre><code class="language-java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">removeConfig</span><span class="hljs-params">(String dataId, String group)</span> <span class="hljs-keyword">throws</span> NacosException\n\n</span></code></pre>\n<h3>Request parameters</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">Parameter name</th>\n<th style="text-align:left">Parameter type</th>\n<th style="text-align:left">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">dataId</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">Configuration ID</td>\n</tr>\n<tr>\n<td style="text-align:left">group</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">Configuration group</td>\n</tr>\n</tbody>\n</table>\n<h3>Response parameters</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">Parameter type</th>\n<th style="text-align:left">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">boolean</td>\n<td style="text-align:left">If the deletion is successful</td>\n</tr>\n</tbody>\n</table>\n<h3>Request example</h3>\n<pre><code class="language-java"><span class="hljs-keyword">try</span> {\n    <span class="hljs-comment">// Initialize the configuration service. Retrieves the following parameters in console with sample code</span>\n\tString serverAddr = <span class="hljs-string">"{serverAddr}"</span>;\n\tString dataId = <span class="hljs-string">"{dataId}"</span>;\n\tString group = <span class="hljs-string">"{group}"</span>;\n\tProperties properties = <span class="hljs-keyword">new</span> Properties();\n\tproperties.put(<span class="hljs-string">"serverAddr"</span>, serverAddr);\n\n\tConfigService configService = NacosFactory.createConfigService(properties);\n\t<span class="hljs-keyword">boolean</span> isRemoveOk = configService.removeConfig(dataId, group);\n\tSystem.out.println(isRemoveOk);\n} <span class="hljs-keyword">catch</span> (NacosException e) {\n    <span class="hljs-comment">// TODO Auto-generated catch block</span>\n    e.printStackTrace();\n}\n</code></pre>\n<h3>Exceptions</h3>\n<p>In case of reading configuration timeout or network issues, ConfigException exception is thrown.</p>\n<h1>Service Discovery SDK</h1>\n<h2>Register Instance</h2>\n<h3>Description</h3>\n<p>Register an instance to service.</p>\n<pre><code class="language-java"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">registerInstance</span><span class="hljs-params">(String serviceName, String ip, <span class="hljs-keyword">int</span> port)</span> <span class="hljs-keyword">throws</span> NacosException</span>;\n\n<span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">registerInstance</span><span class="hljs-params">(String serviceName, String ip, <span class="hljs-keyword">int</span> port, String clusterName)</span> <span class="hljs-keyword">throws</span> NacosException</span>;\n\n<span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">registerInstance</span><span class="hljs-params">(String serviceName, Instance instance)</span> <span class="hljs-keyword">throws</span> NacosException</span>;\n</code></pre>\n<h3>Request Parameters</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">Name</th>\n<th style="text-align:left">Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">serviceName</td>\n<td style="text-align:left">String</td>\n<td>service name</td>\n</tr>\n<tr>\n<td style="text-align:left">ip</td>\n<td style="text-align:left">String</td>\n<td>instance ip</td>\n</tr>\n<tr>\n<td style="text-align:left">port</td>\n<td style="text-align:left">int</td>\n<td>instance port</td>\n</tr>\n<tr>\n<td style="text-align:left">clusterName</td>\n<td style="text-align:left">String</td>\n<td>cluster name</td>\n</tr>\n<tr>\n<td style="text-align:left">instance</td>\n<td style="text-align:left">Refer to Java docs</td>\n<td>instance properties</td>\n</tr>\n</tbody>\n</table>\n<h3>Response</h3>\n<p>void</p>\n<h3>Request Example</h3>\n<pre><code class="language-java">NamingService naming = NamingFactory.createNaming(System.getProperty(<span class="hljs-string">"serveAddr"</span>));\nnaming.registerInstance(<span class="hljs-string">"nacos.test.3"</span>, <span class="hljs-string">"11.11.11.11"</span>, <span class="hljs-number">8888</span>, <span class="hljs-string">"TEST1"</span>);\n\nInstance instance = <span class="hljs-keyword">new</span> Instance();\ninstance.setIp(<span class="hljs-string">"55.55.55.55"</span>);\ninstance.setPort(<span class="hljs-number">9999</span>);\ninstance.setHealthy(<span class="hljs-keyword">false</span>);\ninstance.setWeight(<span class="hljs-number">2.0</span>);\nMap&lt;String, String&gt; instanceMeta = <span class="hljs-keyword">new</span> HashMap&lt;&gt;();\ninstanceMeta.put(<span class="hljs-string">"site"</span>, <span class="hljs-string">"et2"</span>);\ninstance.setMetadata(instanceMeta);\n\nService service = <span class="hljs-keyword">new</span> Service(<span class="hljs-string">"nacos.test.4"</span>);\nservice.setApp(<span class="hljs-string">"nacos-naming"</span>);\nservice.setHealthCheckMode(<span class="hljs-string">"server"</span>);\nservice.setProtectThreshold(<span class="hljs-number">0.8F</span>);\nservice.setGroup(<span class="hljs-string">"CNCF"</span>);\nMap&lt;String, String&gt; serviceMeta = <span class="hljs-keyword">new</span> HashMap&lt;&gt;();\nserviceMeta.put(<span class="hljs-string">"symmetricCall"</span>, <span class="hljs-string">"true"</span>);\nservice.setMetadata(serviceMeta);\ninstance.setService(service);\n\nCluster cluster = <span class="hljs-keyword">new</span> Cluster();\ncluster.setName(<span class="hljs-string">"TEST5"</span>);\nAbstractHealthChecker.Http healthChecker = <span class="hljs-keyword">new</span> AbstractHealthChecker.Http();\nhealthChecker.setExpectedResponseCode(<span class="hljs-number">400</span>);\nhealthChecker.setCurlHost(<span class="hljs-string">"USer-Agent|Nacos"</span>);\nhealthChecker.setCurlPath(<span class="hljs-string">"/xxx.html"</span>);\ncluster.setHealthChecker(healthChecker);\nMap&lt;String, String&gt; clusterMeta = <span class="hljs-keyword">new</span> HashMap&lt;&gt;();\nclusterMeta.put(<span class="hljs-string">"xxx"</span>, <span class="hljs-string">"yyyy"</span>);\ncluster.setMetadata(clusterMeta);\n\ninstance.setCluster(cluster);\n\nnaming.registerInstance(<span class="hljs-string">"nacos.test.4"</span>, instance);\n</code></pre>\n<h2>Deregister Instance</h2>\n<h3>Description</h3>\n<p>Remove instance from service.</p>\n<pre><code class="language-java"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">deregisterInstance</span><span class="hljs-params">(String serviceName, String ip, <span class="hljs-keyword">int</span> port)</span> <span class="hljs-keyword">throws</span> NacosException</span>;\n\n<span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">deregisterInstance</span><span class="hljs-params">(String serviceName, String ip, <span class="hljs-keyword">int</span> port, String clusterName)</span> <span class="hljs-keyword">throws</span> NacosException</span>;\n</code></pre>\n<h3>Request Parameters</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">Name</th>\n<th style="text-align:left">Type</th>\n<th style="text-align:left">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">serviceName</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">service name</td>\n</tr>\n<tr>\n<td style="text-align:left">ip</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">instance ip</td>\n</tr>\n<tr>\n<td style="text-align:left">port</td>\n<td style="text-align:left">int</td>\n<td style="text-align:left">instance port</td>\n</tr>\n<tr>\n<td style="text-align:left">clusterName</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">cluster name</td>\n</tr>\n</tbody>\n</table>\n<h3>Response</h3>\n<p>None</p>\n<h3>Request Example</h3>\n<pre><code class="language-java">NamingService naming = NamingFactory.createNaming(System.getProperty(<span class="hljs-string">"serveAddr"</span>));\nnaming.deregisterInstance(<span class="hljs-string">"nacos.test.3"</span>, <span class="hljs-string">"11.11.11.11"</span>, <span class="hljs-number">8888</span>, <span class="hljs-string">"DEFAULT"</span>);\n</code></pre>\n<h2>Get all instances of service</h2>\n<h3>Description</h3>\n<p>Get all instances of service.</p>\n<pre><code class="language-java"><span class="hljs-function">List&lt;Instance&gt; <span class="hljs-title">getAllInstances</span><span class="hljs-params">(String serviceName)</span> <span class="hljs-keyword">throws</span> NacosException</span>;\n\n<span class="hljs-function">List&lt;Instance&gt; <span class="hljs-title">getAllInstances</span><span class="hljs-params">(String serviceName, List&lt;String&gt; clusters)</span> <span class="hljs-keyword">throws</span> NacosException</span>;\n</code></pre>\n<h3>Request Parameters</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">Name</th>\n<th style="text-align:left">Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">serviceName</td>\n<td style="text-align:left">String</td>\n<td>service name</td>\n</tr>\n<tr>\n<td style="text-align:left">clusters</td>\n<td style="text-align:left">List</td>\n<td>cluster list</td>\n</tr>\n</tbody>\n</table>\n<h3>Response</h3>\n<p>List<Instance> instance list。</p>\n<h3>Request Example</h3>\n<pre><code class="language-java">NamingService naming = NamingFactory.createNaming(System.getProperty(<span class="hljs-string">"serveAddr"</span>));\nSystem.out.println(naming.getAllInstances(<span class="hljs-string">"nacos.test.3"</span>));\n</code></pre>\n<h2>Get filtered list of instance</h2>\n<h3>Description</h3>\n<p>Get healthy or unhealthy instances of service.</p>\n<pre><code class="language-java"><span class="hljs-function">List&lt;Instance&gt; <span class="hljs-title">selectInstances</span><span class="hljs-params">(String serviceName, <span class="hljs-keyword">boolean</span> healthy)</span> <span class="hljs-keyword">throws</span> NacosException</span>;\n\n<span class="hljs-function">List&lt;Instance&gt; <span class="hljs-title">selectInstances</span><span class="hljs-params">(String serviceName, List&lt;String&gt; clusters, <span class="hljs-keyword">boolean</span> healthy)</span> <span class="hljs-keyword">throws</span> NacosException</span>;\n</code></pre>\n<h3>Request Parameters</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">Name</th>\n<th style="text-align:left">Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">serviceName</td>\n<td style="text-align:left">String</td>\n<td>service name</td>\n</tr>\n<tr>\n<td style="text-align:left">clusters</td>\n<td style="text-align:left">List</td>\n<td>cluster list</td>\n</tr>\n<tr>\n<td style="text-align:left">healthy</td>\n<td style="text-align:left">boolean</td>\n<td>healthy or not</td>\n</tr>\n</tbody>\n</table>\n<h3>Response</h3>\n<p>List<Instance> instance list.</p>\n<h3>Request Example</h3>\n<pre><code class="language-java">NamingService naming = NamingFactory.createNaming(System.getProperty(<span class="hljs-string">"serveAddr"</span>));\nSystem.out.println(naming.selectInstances(<span class="hljs-string">"nacos.test.3"</span>, <span class="hljs-keyword">true</span>));\n</code></pre>\n<h2>Get one healthy instance</h2>\n<h3>Description</h3>\n<p>Get one healthy instance selected by load-balance strategy.</p>\n<pre><code class="language-java"><span class="hljs-function">Instance <span class="hljs-title">selectOneHealthyInstance</span><span class="hljs-params">(String serviceName)</span> <span class="hljs-keyword">throws</span> NacosException</span>;\n\n<span class="hljs-function">Instance <span class="hljs-title">selectOneHealthyInstance</span><span class="hljs-params">(String serviceName, List&lt;String&gt; clusters)</span> <span class="hljs-keyword">throws</span> NacosException</span>;\n</code></pre>\n<h3>Request Parameters</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">Name</th>\n<th style="text-align:left">Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">serviceName</td>\n<td style="text-align:left">String</td>\n<td>service name</td>\n</tr>\n<tr>\n<td style="text-align:left">clusters</td>\n<td style="text-align:left">List</td>\n<td>cluster list</td>\n</tr>\n</tbody>\n</table>\n<h3>Response</h3>\n<p>Instance</p>\n<h3>Request Example</h3>\n<pre><code class="language-java">NamingService naming = NamingFactory.createNaming(System.getProperty(<span class="hljs-string">"serveAddr"</span>));\nSystem.out.println(naming.selectOneHealthyInstance(<span class="hljs-string">"nacos.test.3"</span>));\n</code></pre>\n<h2>Listen Service</h2>\n<h3>Description</h3>\n<p>Listen for changes of instances under a service.</p>\n<pre><code class="language-java"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">subscribe</span><span class="hljs-params">(String serviceName, EventListener listener)</span> <span class="hljs-keyword">throws</span> NacosException</span>;\n\n<span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">subscribe</span><span class="hljs-params">(String serviceName, List&lt;String&gt; clusters, EventListener listener)</span> <span class="hljs-keyword">throws</span> NacosException</span>;\n</code></pre>\n<h3>Request Parameters</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">Name</th>\n<th style="text-align:left">Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">serviceName</td>\n<td style="text-align:left">String</td>\n<td>service name</td>\n</tr>\n<tr>\n<td style="text-align:left">clusters</td>\n<td style="text-align:left">List</td>\n<td>cluster list</td>\n</tr>\n<tr>\n<td style="text-align:left">listener</td>\n<td style="text-align:left">EventListener</td>\n<td>event listener</td>\n</tr>\n</tbody>\n</table>\n<h3>Response</h3>\n<p>void</p>\n<h3>Request Example</h3>\n<pre><code class="language-java">NamingService naming = NamingFactory.createNaming(System.getProperty(<span class="hljs-string">"serveAddr"</span>));\nnaming.subscribe(<span class="hljs-string">"nacos.test.3"</span>, event -&gt; {\n    <span class="hljs-keyword">if</span> (event <span class="hljs-keyword">instanceof</span> NamingEvent) {\n        System.out.println(((NamingEvent) event).getServceName());\n        System.out.println(((NamingEvent) event).getInstances());\n    }\n});\n</code></pre>\n<h2>Unlisten Service</h2>\n<h3>Description</h3>\n<p>Cancel listening service.</p>\n<pre><code class="language-java"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">unsubscribe</span><span class="hljs-params">(String serviceName, EventListener listener)</span> <span class="hljs-keyword">throws</span> NacosException</span>;\n\n<span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">unsubscribe</span><span class="hljs-params">(String serviceName, List&lt;String&gt; clusters, EventListener listener)</span> <span class="hljs-keyword">throws</span> NacosException</span>;\n</code></pre>\n<h3>Request Parameters</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">Name</th>\n<th style="text-align:left">Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">serviceName</td>\n<td style="text-align:left">String</td>\n<td>service name</td>\n</tr>\n<tr>\n<td style="text-align:left">clusters</td>\n<td style="text-align:left">List</td>\n<td>cluster list</td>\n</tr>\n<tr>\n<td style="text-align:left">listener</td>\n<td style="text-align:left">EventListener</td>\n<td>event listener</td>\n</tr>\n</tbody>\n</table>\n<h3>Response</h3>\n<p>void</p>\n<h3>Request Example</h3>\n<pre><code class="language-java">NamingService naming = NamingFactory.createNaming(System.getProperty(<span class="hljs-string">"serveAddr"</span>));\nnaming.unsubscribe(<span class="hljs-string">"nacos.test.3"</span>, event -&gt; {});\n</code></pre>\n'},{filename:"use-nacos-with-dubbo.md",__html:"<p><strong>IN PLAN</strong> with Nacos 0.3.0</p>\n"},{filename:"use-nacos-with-istio.md",__html:"<p><strong>IN PLAN</strong> with Nacos 0.6.0</p>\n"},{filename:"use-nacos-with-kubernetes.md",__html:"<p><strong>IN PLAN</strong> with Nacos 0.4.0</p>\n"},{filename:"use-nacos-with-springcloud.md",__html:"<p><strong>IN PLAN</strong> with Nacos 0.2.0</p>\n"},{filename:"what-is-nacos.md",__html:'<h1>What is Nacos</h1>\n<h2>Overview</h2>\n<p>Welcome to Nacos!</p>\n<p>Nacos is committed to help you discover, configure, and manage your microservices. It provides a set of simple and useful features enabling you to realize dynamic service discovery, service configuration, service metadata and traffic management.</p>\n<p>Nacos makes it easier and faster to construct, deliver and manage your microservices platform. It is the infrastructure that supports a service-centered modern application architecture with a microservices or cloud-native approach.</p>\n<h2>What is Nacos？</h2>\n<p>Service is a first-class citizen in Nacos. Nacos supports discovering, configuring, and managing almost all types of services:</p>\n<p><a href="https://kubernetes.io/docs/concepts/services-networking/service/">Kubernetes Service</a>\n<a href="https://grpc.io/docs/guides/concepts.html#service-definition">gRPC</a> &amp; <a href="https://dubbo.incubator.apache.org/#/?lang=en-us">Dubbo RPC Service</a>\n<a href="https://spring.io/understanding/REST">Spring Cloud RESTful Service</a></p>\n<p>Key features of Nacos:</p>\n<ul>\n<li>\n<p><strong>Service Discovery And Service Health Check</strong></p>\n<p>Nacos supports both DNS-based and RPC-based (Dubbo/gRPC) service discovery. After a service provider registers a service with <a href="xx">native SDK TODO</a>, <a href="xx">OpenAPI TODO</a>, or <a href="xx">a dedicated agent TODO</a>, a consumer can discover the service with either <a href="xx">DNS TODO</a> or <a href="xx">HTTP TODO</a>.</p>\n<p>Nacos provides real-time health check to prevent services from sending requests to unhealthy hosts or service instances. Nacos supports both transport layer (PING or TCP) health check and application layer (such as HTTP, Redis, MySQL, and user-defined protocol) health check. For the health check of complex clouds and network topologies(such as VPC, Edge Service etc), Nacos provides both agent mode and server mode health check. Nacos also provide a unity service health dashboard to help you manage the availability and traffic of services.</p>\n</li>\n<li>\n<p><strong>Dynamic configuration management</strong></p>\n<p>Dynamic configuration service allows you to manage the configuration of all applications and services in a centralized, externalized and dynamic manner across all environments.</p>\n<p>Dynamic configuration eliminates the need to redeploy applications and services when configurations are updated.</p>\n<p>Centralized management of configuration makes it more convenient for you to achieve stateless services and elastic expansion of service instances on-demand.</p>\n<p>Nacos provides an <a href="xx">easy-to-use UI TODO</a> to help you manage all of your application or services\'s configurations. It provides some out-of-box features including configuration version tracking, canary/beta release, configuration rollback, and client configuration update status tracking to ensure the safety and control the risk of configuration change.</p>\n</li>\n<li>\n<p><strong>Dynamic DNS service</strong></p>\n<p>Dynamic DNS service which supports weighted routing makes it easier for you to implement mid-tier load balancing, flexible routing policies, traffic control, and simple DNS resolution services in your production environment within your data center. Dynamic DNS service makes it easier for you to implement DNS-based Service discovery.</p>\n<p>Nacos provides some simple <a href="xx">DNS APIs TODO</a> for you to manage your DNS domain names and IPs.</p>\n</li>\n<li>\n<p><strong>Service governance and metadata management</strong></p>\n<p>Nacos allows you to manage all of your services and metadata from the perspective of a microservices platform builder. This includes managing service description, life cycle, service static dependencies analysis, service health status, service traffic management，routing and security rules, service SLA, and first line metrics.</p>\n</li>\n<li>\n<p><a href="xx">Check more features ...</a></p>\n</li>\n</ul>\n<h2>Nacos landscape</h2>\n<p><img src="https://cdn.yuque.com/lark/0/2018/png/15914/1530514380550-31251a79-02bb-4155-bc4f-5a9f436551a2.png" alt="nacos_landscape.png"></p>\n<p>As the figure above shows, Nacos seamlessly supports open source ecologies including <a href="xx">Dubbo and Dubbo Mesh</a>, <a href="xx">Spring Cloud</a>, and <a href="xx">Kubernetes and CNCF</a>.</p>\n<p>Use Nacos to simplify your solutions in service discovery, configuration management, and service governance and management. With Nacos, microservices management in open source system is easy.</p>\n<p>For more information about how to use Nacos with other open source projects, see the following:</p>\n<p><a href="xx">Use Nacos with Kubernetes</a>\n<a href="xx">Use Nacos with Dubbo</a>\n<a href="xx">Use Nacos with gRPC</a>\n<a href="xx">Use Nacos with Spring Cloud</a>\n<a href="xx">Use Nacos with Istio</a></p>\n<h2>What’s next</h2>\n<p>Continue with <a href="xxx">quick start</a> to get started with Nacos.</p>\n'}]}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default={"en-us":{barText:"Blog",postsTitle:"All posts",list:[{title:"微服务架构中基于DNS的服务发现",author:"@zhengji",dateStr:"June 2nd, 2018",desc:"当前，微服务架构已经成为企业尤其是互联网企业技术选型的一个重要参考。微服务架构中涉及到很多模块，本文将重点介绍微服务架构的服务注册与发现以及如何基于DNS做服务发现。",link:"/blog/DNS-SD.md"},{title:"Nacos - 阿里巴巴注册中心和配置中心开源计划",author:"@Penn(PingGuo)",dateStr:"June 1st, 2018",desc:'阿里巴巴计划在7月份开启一个名叫Nacos的新开源项目, 在活动演讲中，坤宇介绍了这个开源项目的初衷，他表示 “将通过Nacos项目将阿里巴巴在建设共享服务体系中使用的服务发现、配置及服务管理平台贡献给开源社区"。',link:"/blog/Nacos-is-Coming.md"},{title:"阿里巴巴服务注册中心产品ConfigServer 10年技术发展回顾",author:"@muyi",dateStr:"May 20th, 2018",desc:"本文简单描述了Eureka1.0存在的架构问题，Eureka2.0设想的架构。详细回顾了阿里巴巴的服务注册中心ConfigServer产品从2008年建设元年至今经历的关键架构演进。通过这个文章你会对基于AP模式的注册中心在技术发展过程中将会碰到的问题有所感知。",link:"/blog/alibaba-configserver.md"}]},"zh-cn":{barText:"博客",postsTitle:"所有文章",list:[{title:"微服务架构中基于DNS的服务发现",author:"@zhengji",dateStr:"June 2nd, 2018",desc:"当前，微服务架构已经成为企业尤其是互联网企业技术选型的一个重要参考。微服务架构中涉及到很多模块，本文将重点介绍微服务架构的服务注册与发现以及如何基于DNS做服务发现。",link:"/blog/DNS-SD.md"},{title:"Nacos - 阿里巴巴注册中心和配置中心开源计划",author:"@Penn(PingGuo)",dateStr:"June 1st, 2018",desc:'阿里巴巴计划在7月份开启一个名叫Nacos的新开源项目, 在活动演讲中，坤宇介绍了这个开源项目的初衷，他表示 “将通过Nacos项目将阿里巴巴在建设共享服务体系中使用的服务发现、配置及服务管理平台贡献给开源社区"。',link:"/blog/Nacos-is-Coming.md"},{title:"阿里巴巴服务注册中心产品ConfigServer 10年技术发展回顾",author:"@muyi",dateStr:"May 20th, 2018",desc:"本文简单描述了Eureka1.0存在的架构问题，Eureka2.0设想的架构。详细回顾了阿里巴巴的服务注册中心ConfigServer产品从2008年建设元年至今经历的关键架构演进。通过这个文章你会对基于AP模式的注册中心在技术发展过程中将会碰到的问题有所感知。",link:"/blog/alibaba-configserver.md"}]}}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var a=n(2),r=n(0),s=function(t){return t&&t.__esModule?t:{default:t}}(r);e.default={"en-us":{barText:"Community",events:{title:"Events & News",list:[{img:"https://cdn.yuque.com/lark/0/2018/png/15914/1530083408486-b4698533-8e69-4e0a-9f3a-fdb1cdfbd290.png",title:"阿里巴巴服务注册中心产品ConfigServer 10年技术发展回顾",content:"本文详细回顾了阿里巴巴的服务注册中心ConfigServer产品从2008年建设元年至今经历的关键架构演进。通过这个文章你会对基于AP模式的注册中心在技术发展过程中将会碰到的问题有所感知。",dateStr:"March 06，2018",link:"/blog/alibaba-configserver.md"},{img:"/img/kunyu.JPG",title:"Nacos - 阿里巴巴注册中心和配置中心开源计划",content:'阿里巴巴计划开启一个名叫Nacos的新开源项目,坤宇介绍了这个开源项目的初衷，他表示 “将通过Nacos项目将阿里巴巴在建设共享服务体系中使用的服务发现、配置及服务管理平台贡献给开源社区"。',dateStr:"March 06，2018",link:"/blog/Nacos-is-Coming.md"},{img:"https://cdn.yuque.com/lark/0/2018/png/7601/1525185700084-16f2c073-0c2b-49c0-b85b-ce2ca1163326.png",title:"微服务架构中基于DNS的服务注册与发现",content:"当前，微服务架构已经成为企业尤其是互联网企业技术选型的一个重要参考。微服务架构中涉及到很多模块，本文将重点介绍微服务架构的服务注册与发现以及如何基于DNS做服务发现。",dateStr:"March 06，2018",link:"/blog/DNS-SD.md"}]},contacts:{title:"Talk To Us",desc:"Nacos is an easy-to-use dynamic service discovery, configuration and service management platform for building cloud native application.",list:[{img:"./img/weibo.png",imgHover:"./img/weibo_hover.png",title:"@Nacos",link:"https://weibo.com/u/6574374908"},{img:"./img/alibaba.png",imgHover:"./img/alibaba_hover.png",title:"#alibaba/Nacos",link:"https://gitter.im/alibaba/nacos"},{img:"./img/segmentfault.png",imgHover:"./img/segmentfault_hover.png",title:"Segment Fault",link:"https://segmentfault.com/t/nacos"},{img:"./img/mailinglist.png",imgHover:"./img/mailinglist_hover.png",title:"Mailing List",link:"mailto:nacos_dev@linux.alibaba.com"}]},contributorGuide:{title:"Contributor Guide",desc:"Want to contribute to Nacos?",list:[{img:"./img/mailinglist.png",title:"Mailing List",content:s.default.createElement("span",null,"Be sure to follow our ",s.default.createElement(a.Link,{to:"mailto:nacos_dev@linux.alibaba.com"},"our community addition guidelines"))},{img:"./img/issue.png",title:"Issue",content:s.default.createElement("span",null,"Reporting issues via ",s.default.createElement(a.Link,{to:"https://github.com/alibaba/nacos/issues"},"Github issues."))},{img:"./img/documents.png",title:"Documents",content:s.default.createElement("span",null,"Improve the ",s.default.createElement(a.Link,{to:"https://github.com/xuechaos/nacos.io/tree/master/docs"},"documentation."))},{img:"./img/pullrequest.png",title:"Pull Request",content:s.default.createElement("span",null,"Send your awesome enhancement via ",s.default.createElement(a.Link,{to:"https://github.com/alibaba/nacos/pulls"},"Pull requests."))}]},ecos:{title:"Open Source Ecology Corelated",list:[{title:"Dubbo and Dubbo Mesh",content:s.default.createElement("span",null,"Dubbo and Nacos are the classic combination from production practice of Aibaba's large-scale micro-service. Compared to traditional registry centers such as ZooKeeper and configuration center solutions, when building a microservice application platform by using cloud native and Service Mesh paradigm, with the use of Nacos in Dubbo, all the power of Dubbo in the large-scale microservice management, traffic management, service integration and sharing can be fully released."),tags:[{text:"Dubbo",link:"http://dubbo.io/",bgColor:"#7A63FC"},{text:"Dubbo Mesh",link:"http://dubbo.io/",bgColor:"#00D0D9"}]},{title:"Kubernetes and CNCF",content:s.default.createElement("span",null,"Nacos supports service discovery and dynamic configuration management required by Kubernetes and CNCF. Nacos can replace completely and seamlessly Kubernetes’ primary DNS-based Service Discovery solutions. Nacos is featured with providing more service governance, which includes management of service domain, service health and life cycle management, traffic management and intelligent routing strategy management and etc. Nacos also enhances the management of ConfigMap, including version configuration and gated launch and etc."),tags:[{text:"Kubernetes",link:"https://kubernetes.io/docs/concepts/overview/what-is-kubernetes/",bgColor:"#7A63FC"},{text:"CNCF",link:"https://www.cncf.io/",bgColor:"#00D0D9"}]},{title:"Spring Cloud",content:s.default.createElement("span",null,"Nacos is fully compatible and seamlessly supports the relevant API and main related functions of Spring Cloud. You can use Nacos as a configuration service for Spring Cloud Config Server or a better alternative for product of service discovery such as Eureka/Consul/ZooKeeper and etc. Nacos brings many feature enhancements required by the production and micro-service governance in configuration management and service management."),tags:[{text:"Spring Cloud",link:"http://projects.spring.io/spring-cloud/",bgColor:"#7A63FC"},{text:"Microservice",link:"http://microservices.io/",bgColor:"#00D0D9"}]}]}},"zh-cn":{barText:"社区",events:{title:"事件 & 新闻",list:[{img:"https://cdn.yuque.com/lark/0/2018/png/15914/1530083408486-b4698533-8e69-4e0a-9f3a-fdb1cdfbd290.png",title:"阿里巴巴服务注册中心产品ConfigServer 10年技术发展回顾",content:"本文详细回顾了阿里巴巴的服务注册中心ConfigServer产品从2008年建设元年至今经历的关键架构演进。通过这个文章你会对基于AP模式的注册中心在技术发展过程中将会碰到的问题有所感知。",dateStr:"March 06，2018",link:"/blog/alibaba-configserver.md"},{img:"/img/kunyu.JPG",title:"Nacos - 阿里巴巴注册中心和配置中心开源计划",content:'阿里巴巴计划开启一个名叫Nacos的新开源项目,坤宇介绍了这个开源项目的初衷，他表示 “将通过Nacos项目将阿里巴巴在建设共享服务体系中使用的服务发现、配置及服务管理平台贡献给开源社区"。',dateStr:"March 06，2018",link:"/blog/Nacos-is-Coming.md"},{img:"https://cdn.yuque.com/lark/0/2018/png/7601/1525185700084-16f2c073-0c2b-49c0-b85b-ce2ca1163326.png",title:"微服务架构中基于DNS的服务注册与发现",content:"当前，微服务架构已经成为企业尤其是互联网企业技术选型的一个重要参考。微服务架构中涉及到很多模块，本文将重点介绍微服务架构的服务注册与发现以及如何基于DNS做服务发现。",dateStr:"March 06，2018",link:"/blog/DNS-SD.md"}]},contacts:{title:"联系我们",desc:"有问题需要反馈？请通过一下方式联系我们。",list:[{img:"./img/mailinglist.png",imgHover:"./img/mailinglist_hover.png",title:"邮件列表",link:"mailto:nacos_dev@linux.alibaba.com"},{img:"./img/alibaba.png",imgHover:"./img/alibaba_hover.png",title:"Gitter",link:"https://gitter.im/alibaba/nacos"},{img:"./img/segmentfault.png",imgHover:"./img/segmentfault_hover.png",title:"Segment Fault",link:"https://segmentfault.com/t/nacos"},{img:"./img/weibo.png",imgHover:"./img/weibo_hover.png",title:"@Nacos",link:"https://weibo.com/u/6574374908"}]},contributorGuide:{title:"贡献指南",desc:"Nacos社区欢迎任何形式的贡献。",list:[{img:"./img/mailinglist.png",title:"邮件列表",content:s.default.createElement("span",null,"发送 ",s.default.createElement("a",{href:"mailto:nacos_dev@linux.alibaba.com"},"邮件列表 "),"参与讨论。")},{img:"./img/issue.png",title:"报告缺陷",content:s.default.createElement("span",null,"通过",s.default.createElement("a",{href:"https://github.com/alibaba/nacos/issues"}," Github issues "),"报告缺陷。")},{img:"./img/documents.png",title:"文档",content:s.default.createElement("span",null,"优化Nacos ",s.default.createElement("a",{href:"http://nacos.io/#/docs/what-is-nacos.md"}," 文档"),"。")},{img:"./img/pullrequest.png",title:"Pull Request",content:s.default.createElement("span",null,"提交 ",s.default.createElement("a",{href:"https://github.com/alibaba/nacos/pulls"}," Pull requests "),"来修复问题。")}]},ecos:{title:"开源生态相关",list:[{title:"Dubbo and Dubbo Mesh",content:s.default.createElement("span",null,"Dubbo 及 Nacos是阿里巴巴大规模微服务生产实践中的经典组合，对比传统的如ZooKeeper等注册中心与配置中心解决方案，在使用云原生及Service Mesh范式构建微服务应用平台时，通过在Dubbo中使用Nacos，可以完全释放Dubbo在大规模微服务治理、流量管理、服务集成及共享上的所有威力。"),tags:[{text:"Dubbo",link:"http://dubbo.io/",bgColor:"#7A63FC"},{text:"Dubbo Mesh",link:"http://dubbo.io/",bgColor:"#00D0D9"}]},{title:"Kubernetes and CNCF",content:s.default.createElement("span",null,"Nacos 支持Kubernetes 以及 CNCF所需要的服务发现及动态配置管理的需求，Nacos可以完全无缝的替代Kubernetes的原生的DNS-based Service Discovery 解决方案，Nacos 提供了更多的服务治理侧的特性，这包括服务的域名管理，服务健康及生命周期管理，流量管理及智能路由策略管理等，Nacos也增强了对ConfigMap的管理，这包括版本配置、灰度发布等。"),tags:[{text:"Kubernetes",link:"https://kubernetes.io/docs/concepts/overview/what-is-kubernetes/",bgColor:"#7A63FC"},{text:"CNCF",link:"https://www.cncf.io/",bgColor:"#00D0D9"}]},{title:"Spring Cloud",content:s.default.createElement("span",null,"Nacos 完全兼容和无缝支持 Spring Cloud的相关API及主要相关功能，你可以将Nacos作为SpringCloud Config Server的配置服务或者Eureka/Consul/ZooKeeper等的服务发现产品的更好替代者，Nacos 在配置管理和服务管理上带来了很多面向生产及微服务治理所需要的特性增强。"),tags:[{text:"Spring Cloud",link:"http://projects.spring.io/spring-cloud/",bgColor:"#7A63FC"},{text:"Microservice",link:"http://microservices.io/",bgColor:"#00D0D9"}]}]}}}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default={"en-us":{sidemenu:[{title:"Nacos ",children:[{title:"What is Nacos",opened:!0,children:[{title:"What is Nacos",link:"/docs/what-is-nacos.md"},{title:"Concepts",link:"/docs/concepts.md"},{title:"Architecure",link:"/docs/architecure.md"}]},{title:"User Guide",opened:!0,children:[{title:"Quick Start",link:"/docs/quick-start.md"},{title:"Java SDK",link:"/docs/sdk.md"},{title:"Other Language",link:"/docs/other-language.md"},{title:"Open-API",link:"/docs/open-API.md"}]},{title:"Admin Guide",children:[{title:"Deployment Guide",link:"/docs/deployment.md"},{title:"Management OpenAPI",link:"/docs/managementAPI.md"},{title:"Nacos Operator CLI Guide",link:"/docs/CLI-guide.md"},{title:"Admin Console Guide",link:"/docs/console-guide.md"}]},{title:"Contributor Guide",children:[{title:"Contribute to Nacos",link:"/docs/contributing.md"},{title:"Pull Request Template",link:"/docs/pull-request.md"},{title:"Nacos RoadMap",link:"/docs/roadmap.md"},{title:"Nacos with SpringCloud",link:"/docs/use-nacos-with-springcloud.md"},{title:"Nacos with Dubbo",link:"/docs/use-nacos-with-dubbo.md"},{title:"Nacos with K8s",link:"/docs/use-nacos-with-kubernetes.md"},{title:"Nacos with Istio",link:"/docs/use-nacos-with-istio.md"}]},{title:"Community",children:[{title:"Community",link:"/docs/community.md"}]}]}],barText:"Documentation"},"zh-cn":{sidemenu:[{title:"Nacos ",children:[{title:"Nacos是什么?",opened:!0,children:[{title:"Nacos简介",link:"/docs/what-is-nacos.md"},{title:"概念",link:"/docs/concepts.md"},{title:"架构",link:"/docs/architecure.md"}]},{title:"用户指南",opened:!0,children:[{title:"快速入门",link:"/docs/quick-start.md"},{title:"Java的SDK",link:"/docs/sdk.md"},{title:"其他语言的SDK",link:"/docs/other-language.md"},{title:"Open-API指南",link:"/docs/open-API.md"}]},{title:"运维指南",children:[{title:"部署手册",link:"/docs/deployment.md"},{title:"运维API",link:"/docs/managementAPI.md"},{title:"命令行手册",link:"/docs/CLI-guide.md"},{title:"控制台手册",link:"/docs/console-guide.md"}]},{title:"开源共建",children:[{title:"贡献源码",link:"/docs/contributing.md"},{title:"pull request模板",link:"/docs/pull-request.md"},{title:"Nacos规划",link:"/docs/roadmap.md"},{title:"Nacos支持SpringCloud生态",link:"/docs/use-nacos-with-springcloud.md"},{title:"nacos支持dubbo生态",link:"/docs/use-nacos-with-dubbo.md"},{title:"Nacos支持k8s",link:"/docs/use-nacos-with-kubernetes.md"},{title:"nacos支持istio",link:"/docs/use-nacos-with-istio.md"}]},{title:"社区",children:[{title:"社区",link:"/docs/community.md"}]}]}],barText:"Nacos 文档"}}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default={"en-us":{brand:{briefIntroduction:"an easy-to-use dynamic service discovery, configuration and service management platform for building cloud native application.",buttons:[{text:"View on Github",link:"https://github.com/alibaba/nacos",type:"primary"},{text:"Manual",link:"http://nacos.io/#/docs/what-is-nacos.md",type:"normal"}],version:{text:"V0.1.0",link:""},note:{text:"Release notes.",link:""},releaseDate:"released July 20, 2018"},functions:{title:"Function",list:[{img:"./img/dynamic_configuration.png",title:"Dynamic Configuration Service",content:"Dynamic Configuration Service allows you to manage application or service configuration in a centralized and dynamic style across all environments. Dynamic configuration eliminates the need to redeploy applications when configuration is updated. You can implement stateless services and achieve on-demand scaling more easily."},{img:"./img/service_discovery.png",title:"Service Discovery and Management",content:"Dynamic Service Discovery is essential to service-centric (i.e. microservice or cloud-native) architectures. Nacos supports both DNS-based and RPC-based (Dubbo, gRPC) service discovery, and provides service health checks for you to prevent routing requests from unhealthy hosts. You can also implement circuit breakers for your services more easier."},{img:"./img/dynamic_DNS.png",title:"Dynamic DNS Service",content:"Dynamic DNS Service which supports weighted routing makes it easier for you to implement mid-tier load balancing, `more flexible intelligent routing`, flow control and DNS resolution services in the production environment within your data center.Dynamic DNS Service also help you to implement DNS-based service discovery more easilier and prevent applications from coupling to vendor-specific service discovery APIs."}]},features:{title:"Feature List",list:[{img:"./img/feature_easy_to_use.png",title:"Easy to use",content:["One-stop solution for dynamic service discovery, configuration management and dynamic DNS service","More than 20+ out-of-the-box features for service-centric architecture","Light-weighted but production-ready console"]},{img:"./img/feature_adaptable.png",title:"More adaptable to cloud architecture",content:["Seamlessly support kubernetes and spring cloud","Easy to deploy and run on mainstream public cloud (i.e AliCloud、AWS）","Support multi-tenants and multi-environments"]},{img:"./img/feature_production_grade.png",title:"Production grade",content:["Born out of 10 years' production verification within Alibaba Group","Supports large-scale scenarios with millions of services","Provides enterprise-level SLA"]},{img:"./img/feature_rich.png",title:"Rich internet application scenarios affinity",content:["Rate limiting and throttling, big promotion plan, multi-region active-active architecture","Easy to expand and support common internet application scenarios as follows","Traffic scheduling & service governance"]}]}},"zh-cn":{brand:{briefIntroduction:"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台。",buttons:[{text:"前往 Github",link:"https://github.com/alibaba/nacos",type:"primary"},{text:"手册",link:"http://nacos.io/#/docs/what-is-nacos.md",type:"normal"}],version:{text:"V0.1.0",link:""},note:{text:"Release notes.",link:""},releaseDate:"released July 20, 2018"},functions:{title:"功能",list:[{img:"./img/dynamic_configuration.png",title:"动态配置服务",content:"动态配置服务让用户可以以中心化、外部化和动态化的方式管理所有环境的配置。动态配置消除了配置变更时重新部署应用和服务的需要。通过配置中心化管理，让实现无状态服务更简单，也让服务的按需弹性扩展变的更容易。"},{img:"./img/service_discovery.png",title:"服务发现及管理",content:"动态服务发现对以服务为中心（如微服务及云原生）的应用架构方式非常关键。Nacos支持DNS-based 和 RPC-based(Dubbo, gRPC) 模式的服务发现。Nacos也提供实时的健康检查以便组织将请求发向不健康的主机或服务实例。基于Nacos你可以更容易的为你的服务实现断路器。"},{img:"./img/dynamic_DNS.png",title:"动态DNS服务",content:"动态DNS服务通过支持权重路由让你更容易实现中间层负载均衡、更灵活的路由策略、流量控制以及简单的数据中心内网的简单DNS解析服务。动态DNS服务也帮你更容易的实现以DNS协议为基础的服务发现，以消除耦合到厂商私有服务发现API上的风险。"}]},features:{title:"特性一览",list:[{img:"./img/feature_easy_to_use.png",title:"易于使用",content:["动态配置管理，服务发现和动态DNS服务的一站式解决方案","超过20多种开箱即用的服务架构特性","轻量级但基本符合生产要求的易用的控制台"]},{img:"./img/feature_adaptable.png",title:"更适应云架构",content:["无缝支持kubernetes和spring cloud","在主流公共云上更容易部署和运行（如AliCloud，AWS）","多租户和多环境支持"]},{img:"./img/feature_production_grade.png",title:"生产等级",content:["脱胎于阿里10年生产验证的内部产品","支持具有数百万服务的大规模场景","虽然是开源产品，但能做到企业级的 SLA 保障/水准"]},{img:"./img/feature_rich.png",title:"丰富的应用场景",content:["支持限流，大促销预案，异地多活","很容易支持或者稍作扩展就能支持大量的有用的互联网应用场景","流量调度和服务治理"]}]}}}},function(t,e,n){"use strict";function a(t){return t&&t.__esModule?t:{default:t}}function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}Object.defineProperty(e,"__esModule",{value:!0});var s=n(0),i=a(s),l=n(3),o=a(l);n(72);var c=function(t){return i.default.createElement("a",{className:(0,o.default)(r({button:!0},"button-"+t.type,!0)),target:"__blank",href:t.link},t.children)};e.default=c},function(t,e,n){"use strict";function a(t){return t&&t.__esModule?t:{default:t}}function r(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function s(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function i(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}function l(t,e,n,a,r){var s={};return Object.keys(a).forEach(function(t){s[t]=a[t]}),s.enumerable=!!s.enumerable,s.configurable=!!s.configurable,("value"in s||s.initializer)&&(s.writable=!0),s=n.slice().reverse().reduce(function(n,a){return a(t,e,n)||n},s),r&&void 0!==s.initializer&&(s.value=s.initializer?s.initializer.call(r):void 0,s.initializer=void 0),void 0===s.initializer&&(Object.defineProperty(t,e,s),s=null),s}Object.defineProperty(e,"__esModule",{value:!0});var o,c=function(){function t(t,e){for(var n=0;n<e.length;n++){var a=e[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(t,a.key,a)}}return function(e,n,a){return n&&t(e.prototype,n),a&&t(e,a),e}}(),d=n(0),p=a(d),u=n(4),h=n(3),f=a(h),g=n(16);n(75);var y={pageSize:5},m=(o=function(t){function e(t){r(this,e);var n=s(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,t));return n.container=null,n.state={page:0,pageWidth:0},n}return i(e,t),c(e,[{key:"componentDidMount",value:function(){var t=this,e=this.container.getBoundingClientRect().width;this.setState({pageWidth:e}),this.throttleAdjust=(0,g.throttle)(function(){t.setState({pageWidth:t.container.getBoundingClientRect().width})},200),window.addEventListener("resize",this.throttleAdjust)}},{key:"componentWillUnmount",value:function(){window.removeEventListener("resize",this.throttleAdjust)}},{key:"changePage",value:function(t){this.setState({page:t})}},{key:"renderSliderList",value:function(){for(var t=this.props,e=t.children,n=t.pageSize,a=this.state,r=a.page,s=a.pageWidth,i=[],l=p.default.Children.count(e),o=Math.ceil(l/n),c=0;c<o;c++)i.push(Array.from(e).slice(c*n,(c+1)*n));return p.default.createElement("div",{className:"slider-list",style:{transform:"translateX(-"+r*s+"px)",transition:"transform 500ms ease",width:o*s}},i.map(function(t,e){return p.default.createElement("div",{className:"slider-page",style:{width:s},key:e},t.map(function(t,e){return p.default.createElement("div",{className:"slider-item",key:e},t)}))}))}},{key:"renderControl",value:function(){var t=this.props,e=t.children,n=t.pageSize,a=this.state.page,r=p.default.Children.count(e),s=Math.ceil(r/n);return p.default.createElement("div",{className:"slider-control"},p.default.createElement("img",{className:(0,f.default)({"slider-control-prev":!0,"slider-control-prev-hidden":0===a}),src:"./img/prev.png",onClick:this.changePage.bind(this,a-1)}),p.default.createElement("img",{className:(0,f.default)({"slider-control-next":!0,"slider-control-next-hidden":a===s-1}),src:"./img/next.png",onClick:this.changePage.bind(this,a+1)}))}},{key:"render",value:function(){var t=this;return p.default.createElement("div",{className:"page-slider",ref:function(e){t.container=e}},this.renderSliderList(),this.renderControl())}}]),e}(p.default.Component),l(o.prototype,"renderSliderList",[u.autobind],Object.getOwnPropertyDescriptor(o.prototype,"renderSliderList"),o.prototype),l(o.prototype,"renderControl",[u.autobind],Object.getOwnPropertyDescriptor(o.prototype,"renderControl"),o.prototype),o);m.defaultProps=y,e.default=m},function(t,e,n){"use strict";function a(t){return t&&t.__esModule?t:{default:t}}function r(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function s(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function i(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var l,o=function(){function t(t,e){for(var n=0;n<e.length;n++){var a=e[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(t,a.key,a)}}return function(e,n,a){return n&&t(e.prototype,n),a&&t(e,a),e}}(),c=n(0),d=a(c),p=n(3),u=a(p),h=n(4),f=n(43),g=a(f);n(76);var y=(l=function(t){function e(t){r(this,e);var n=s(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,t));return n.state={menuBodyVisible:!1},n}return i(e,t),o(e,[{key:"toggleMenuBody",value:function(){this.setState({menuBodyVisible:!this.state.menuBodyVisible})}},{key:"render",value:function(){var t=this,e=this.props.dataSource,n=this.state.menuBodyVisible,a=(0,u.default)({sidemenu:!0,"sidemenu-open":n}),r=(0,u.default)({"menu-item":!0,"menu-item-level-1":!0});return d.default.createElement("div",{className:a},d.default.createElement("div",{onClick:this.toggleMenuBody,className:"sidemenu-toggle"},d.default.createElement("img",{src:n?"https://img.alicdn.com/tfs/TB1I5itXQyWBuNjy0FpXXassXXa-200-200.png":"https://img.alicdn.com/tfs/TB1E6apXHGYBuNjy0FoXXciBFXa-200-200.png"})),d.default.createElement("ul",null,e.map(function(e,n){return d.default.createElement("li",{className:r,key:n},d.default.createElement("span",null,e.title),d.default.createElement("ul",null,e.children.map(function(e,n){return d.default.createElement(g.default,{item:e,key:n,toggleMenuBody:t.toggleMenuBody})})))})))}}]),e}(d.default.Component),function(t,e,n,a,r){var s={};return Object.keys(a).forEach(function(t){s[t]=a[t]}),s.enumerable=!!s.enumerable,s.configurable=!!s.configurable,("value"in s||s.initializer)&&(s.writable=!0),s=n.slice().reverse().reduce(function(n,a){return a(t,e,n)||n},s),r&&void 0!==s.initializer&&(s.value=s.initializer?s.initializer.call(r):void 0,s.initializer=void 0),void 0===s.initializer&&(Object.defineProperty(t,e,s),s=null),s}(l.prototype,"toggleMenuBody",[h.autobind],Object.getOwnPropertyDescriptor(l.prototype,"toggleMenuBody"),l.prototype),l);e.default=y},function(t,e,n){"use strict";function a(t){return t&&t.__esModule?t:{default:t}}function r(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function s(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function i(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}function l(t,e,n,a,r){var s={};return Object.keys(a).forEach(function(t){s[t]=a[t]}),s.enumerable=!!s.enumerable,s.configurable=!!s.configurable,("value"in s||s.initializer)&&(s.writable=!0),s=n.slice().reverse().reduce(function(n,a){return a(t,e,n)||n},s),r&&void 0!==s.initializer&&(s.value=s.initializer?s.initializer.call(r):void 0,s.initializer=void 0),void 0===s.initializer&&(Object.defineProperty(t,e,s),s=null),s}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var o,c=function(){function t(t,e){for(var n=0;n<e.length;n++){var a=e[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(t,a.key,a)}}return function(e,n,a){return n&&t(e.prototype,n),a&&t(e,a),e}}(),d=n(0),p=a(d),u=n(2),h=n(4),f=n(3),g=a(f),y=(o=function(t){function e(t){r(this,e);var n=s(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,t)),a=t.item,i=a.children&&a.children.length,l=t.item.opened;return i?void 0===l&&(l=a.children.find(function(t){return t.link===window.location.hash.split("?")[0].slice(1)})):l=!1,n.state={opened:l},n}return i(e,t),c(e,[{key:"onItemClick",value:function(t){this.props.toggleMenuBody(),t.stopPropagation()}},{key:"toggle",value:function(){this.setState({opened:!this.state.opened})}},{key:"renderSubMenu",value:function(t){var e=this;return p.default.createElement("ul",null,t.map(function(t,n){return p.default.createElement("li",{className:(0,g.default)({"menu-item":!0,"menu-item-level-3":!0,"menu-item-selected":t.link===window.location.hash.split("?")[0].slice(1)}),key:n,onClick:e.onItemClick},p.default.createElement(u.Link,{to:t.link},t.title))}))}},{key:"render",value:function(){var t=this.props.item,e=t.children&&t.children.length,n=this.state.opened,a=(0,g.default)({"menu-item":!0,"menu-item-level-2":!0,"menu-item-selected":t.link===window.location.hash.split("?")[0].slice(1)}),r={height:n?36*(t.children.length+1):36,overflow:"hidden"};return e?p.default.createElement("li",{style:r,className:a,onClick:this.toggle},p.default.createElement("span",null,t.title,p.default.createElement("img",{style:{transform:"rotate("+(n?0:-90)+"deg)"},className:"menu-toggle",src:"./img/arrow_down.png"})),this.renderSubMenu(t.children)):p.default.createElement("li",{style:r,className:a,onClick:this.onItemClick},p.default.createElement(u.Link,{to:t.link},t.title))}}]),e}(p.default.Component),l(o.prototype,"onItemClick",[h.autobind],Object.getOwnPropertyDescriptor(o.prototype,"onItemClick"),o.prototype),l(o.prototype,"toggle",[h.autobind],Object.getOwnPropertyDescriptor(o.prototype,"toggle"),o.prototype),l(o.prototype,"renderSubMenu",[h.autobind],Object.getOwnPropertyDescriptor(o.prototype,"renderSubMenu"),o.prototype),o);e.default=y},function(t,e,n){"use strict";function a(t){return t&&t.__esModule?t:{default:t}}function r(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function s(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function i(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}function l(t,e,n,a,r){var s={};return Object.keys(a).forEach(function(t){s[t]=a[t]}),s.enumerable=!!s.enumerable,s.configurable=!!s.configurable,("value"in s||s.initializer)&&(s.writable=!0),s=n.slice().reverse().reduce(function(n,a){return a(t,e,n)||n},s),r&&void 0!==s.initializer&&(s.value=s.initializer?s.initializer.call(r):void 0,s.initializer=void 0),void 0===s.initializer&&(Object.defineProperty(t,e,s),s=null),s}Object.defineProperty(e,"__esModule",{value:!0});var o,c=function(){function t(t,e){for(var n=0;n<e.length;n++){var a=e[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(t,a.key,a)}}return function(e,n,a){return n&&t(e.prototype,n),a&&t(e,a),e}}(),d=n(0),p=a(d),u=n(8),h=a(u),f=n(4),g=n(3),y=a(g),m=n(16);n(77);var v=(o=function(t){function e(t){r(this,e);var n=s(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,t));return n.container=null,n.state={screenIndex:0,visibleNum:1},n}return i(e,t),c(e,[{key:"componentDidMount",value:function(){var t=this;this.throttleAdjust=(0,m.throttle)(function(){t.setState({visibleNum:t.getVisibleNum()})},200),window.addEventListener("resize",this.throttleAdjust),this.setState({visibleNum:this.getVisibleNum()})}},{key:"componentWillUnmount",value:function(){window.removeEventListener("resize",this.throttleAdjust)}},{key:"getVisibleNum",value:function(){var t=1,e=this.container.getBoundingClientRect().width,n=this.sliderItemChild0.getBoundingClientRect?this.sliderItemChild0.getBoundingClientRect().width:h.default.findDOMNode(this.sliderItemChild0).getBoundingClientRect().width;return e&&n&&(t=Math.floor(e/n)),t||1}},{key:"getListWidth",value:function(){var t=0,e=this.props.children,n=this.state.visibleNum,a=p.default.Children.count(e),r=Math.ceil(a/n);if(this.container){t=this.container.getBoundingClientRect().width*r}return t}},{key:"changeScreen",value:function(t){t!==this.state.screenIndex&&this.setState({screenIndex:t})}},{key:"renderSliderList",value:function(){for(var t=this,e=this.props.children,n=this.state,a=n.screenIndex,r=n.visibleNum,s=[],i=p.default.Children.count(e),l=Math.ceil(i/r),o=0;o<l;o++)s.push(Array.from(e).slice(o*r,(o+1)*r));return p.default.createElement("div",{className:"slider-list",style:{transform:"translateX(-"+a*(this.container&&this.container.getBoundingClientRect().width||0)+"px)",transition:"transform 500ms ease",width:this.getListWidth()}},s.map(function(e,n){return p.default.createElement("div",{className:"slider-screen",style:{width:t.container&&t.container.getBoundingClientRect().width||0},key:n,ref:function(e){t["sliderScreen"+n]=e}},e.map(function(e,a){return p.default.createElement("div",{className:"slider-item",key:a},p.default.cloneElement(e,{ref:function(e){t["sliderItemChild"+(n*r+a)]=e}}))}))}))}},{key:"renderControl",value:function(){for(var t=this.props.children,e=this.state,n=e.screenIndex,a=e.visibleNum,r=p.default.Children.count(t),s=Math.ceil(r/a),i=[],l=0;l<s;l++)i.push(p.default.createElement("span",{key:l,className:(0,y.default)({"slider-control-item":!0,"slider-control-item-active":l===n}),onClick:this.changeScreen.bind(this,l)}));return p.default.createElement("div",{className:"slider-control"},i)}},{key:"render",value:function(){var t=this;return p.default.createElement("div",{className:"slider",ref:function(e){t.container=e}},this.renderSliderList(),this.renderControl())}}]),e}(p.default.Component),l(o.prototype,"getVisibleNum",[f.autobind],Object.getOwnPropertyDescriptor(o.prototype,"getVisibleNum"),o.prototype),l(o.prototype,"getListWidth",[f.autobind],Object.getOwnPropertyDescriptor(o.prototype,"getListWidth"),o.prototype),l(o.prototype,"renderSliderList",[f.autobind],Object.getOwnPropertyDescriptor(o.prototype,"renderSliderList"),o.prototype),l(o.prototype,"renderControl",[f.autobind],Object.getOwnPropertyDescriptor(o.prototype,"renderControl"),o.prototype),o);e.default=v},function(t,e,n){"use strict";function a(t){return t&&t.__esModule?t:{default:t}}function r(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function s(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function i(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}var l=function(){function t(t,e){for(var n=0;n<e.length;n++){var a=e[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(t,a.key,a)}}return function(e,n,a){return n&&t(e.prototype,n),a&&t(e,a),e}}(),o=n(0),c=a(o),d=n(8),p=a(d),u=n(2),h=n(32),f=a(h),g=n(28),y=a(g),m=n(29),v=a(m),b=n(30),x=a(b),S=n(31),w=a(S);n(33);var k=function(t){function e(){return r(this,e),s(this,(e.__proto__||Object.getPrototypeOf(e)).apply(this,arguments))}return i(e,t),l(e,[{key:"render",value:function(){return c.default.createElement(u.HashRouter,null,c.default.createElement(u.Switch,null,c.default.createElement(u.Redirect,{exact:!0,from:"/docs",to:"/docs/quick-start.md"}),c.default.createElement(u.Redirect,{exact:!0,from:"/docs/",to:"/docs/quick-start.md"}),c.default.createElement(u.Route,{exact:!0,path:"/",component:f.default}),c.default.createElement(u.Route,{exact:!0,path:"/blog",component:y.default}),c.default.createElement(u.Route,{path:"/blog/*",component:v.default}),c.default.createElement(u.Route,{exact:!0,path:"/community",component:x.default}),c.default.createElement(u.Route,{path:"/docs/*",component:w.default})))}}]),e}(c.default.Component);p.default.render(c.default.createElement(k,null),document.getElementById("root"))},function(t,e,n){"use strict";function a(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function r(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function s(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}function i(t,e,n,a,r){var s={};return Object.keys(a).forEach(function(t){s[t]=a[t]}),s.enumerable=!!s.enumerable,s.configurable=!!s.configurable,("value"in s||s.initializer)&&(s.writable=!0),s=n.slice().reverse().reduce(function(n,a){return a(t,e,n)||n},s),r&&void 0!==s.initializer&&(s.value=s.initializer?s.initializer.call(r):void 0,s.initializer=void 0),void 0===s.initializer&&(Object.defineProperty(t,e,s),s=null),s}Object.defineProperty(e,"__esModule",{value:!0});var l,o=function(){function t(t,e){for(var n=0;n<e.length;n++){var a=e[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(t,a.key,a)}}return function(e,n,a){return n&&t(e.prototype,n),a&&t(e,a),e}}(),c=n(0),d=function(t){return t&&t.__esModule?t:{default:t}}(c),p=n(2),u=n(4);n(78);var h=(l=function(t){function e(t){a(this,e);var n=r(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,t));return n.state={isHovered:!1},n}return s(e,t),o(e,[{key:"onMouseOver",value:function(){this.setState({isHovered:!0})}},{key:"onMouseOut",value:function(){this.setState({isHovered:!1})}},{key:"render",value:function(){var t=this.props.dataSource,e=t.link,n=t.title,a=t.author,r=t.companyIcon,s=t.companyIconHover,i=t.dateStr,l=t.desc,o=this.state.isHovered;return d.default.createElement(p.Link,{to:e,className:"blog-item",onMouseOver:this.onMouseOver,onMouseOut:this.onMouseOut},d.default.createElement("div",{className:"title"},d.default.createElement("img",{src:o?"./img/docs_hover.png":"./img/docs_normal.png"}),d.default.createElement("span",null,n)),d.default.createElement("div",{className:"brief-info"},d.default.createElement("span",{className:"author"},a),r?d.default.createElement("img",{src:o?s:r}):null,d.default.createElement("span",{className:"date"},i)),d.default.createElement("p",null,l))}}]),e}(d.default.Component),i(l.prototype,"onMouseOver",[u.autobind],Object.getOwnPropertyDescriptor(l.prototype,"onMouseOver"),l.prototype),i(l.prototype,"onMouseOut",[u.autobind],Object.getOwnPropertyDescriptor(l.prototype,"onMouseOut"),l.prototype),l);e.default=h},function(t,e,n){"use strict";function a(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function r(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function s(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}function i(t,e,n,a,r){var s={};return Object.keys(a).forEach(function(t){s[t]=a[t]}),s.enumerable=!!s.enumerable,s.configurable=!!s.configurable,("value"in s||s.initializer)&&(s.writable=!0),s=n.slice().reverse().reduce(function(n,a){return a(t,e,n)||n},s),r&&void 0!==s.initializer&&(s.value=s.initializer?s.initializer.call(r):void 0,s.initializer=void 0),void 0===s.initializer&&(Object.defineProperty(t,e,s),s=null),s}Object.defineProperty(e,"__esModule",{value:!0});var l,o=function(){function t(t,e){for(var n=0;n<e.length;n++){var a=e[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(t,a.key,a)}}return function(e,n,a){return n&&t(e.prototype,n),a&&t(e,a),e}}(),c=n(0),d=function(t){return t&&t.__esModule?t:{default:t}}(c),p=n(4),u=(l=function(t){function e(t){a(this,e);var n=r(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,t));return n.state={img:t.contact.img},n}return s(e,t),o(e,[{key:"onMouseOver",value:function(){this.setState({img:this.props.contact.imgHover})}},{key:"onMouseOut",value:function(){this.setState({img:this.props.contact.img})}},{key:"render",value:function(){var t=this.props.contact,e=this.state.img;return d.default.createElement("a",{className:"contact-item",href:t.link,target:"__blank",onMouseOver:this.onMouseOver,onMouseOut:this.onMouseOut},d.default.createElement("img",{src:e}),d.default.createElement("div",null,t.title))}}]),e}(d.default.Component),i(l.prototype,"onMouseOver",[p.autobind],Object.getOwnPropertyDescriptor(l.prototype,"onMouseOver"),l.prototype),i(l.prototype,"onMouseOut",[p.autobind],Object.getOwnPropertyDescriptor(l.prototype,"onMouseOut"),l.prototype),l);e.default=u},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var a=n(0),r=function(t){return t&&t.__esModule?t:{default:t}}(a),s=function(t){var e=t.contributor,n=e.img,a=e.title,s=e.content;return r.default.createElement("div",{className:"contributor-item"},r.default.createElement("img",{src:n}),r.default.createElement("div",null,a),r.default.createElement("p",null,s))};e.default=s},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var a=n(0),r=function(t){return t&&t.__esModule?t:{default:t}}(a),s=function(t){var e=t.eco;return r.default.createElement("div",{className:"eco-item"},r.default.createElement("h4",null,e.title),r.default.createElement("p",null,e.content),r.default.createElement("div",{className:"tags"},e.tags.map(function(t,e){return r.default.createElement("a",{key:e,href:t.link,target:"__blank",style:{background:t.bgColor}},t.text)})))};e.default=s},function(t,e,n){"use strict";function a(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function r(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function s(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}Object.defineProperty(e,"__esModule",{value:!0});var i=function(){function t(t,e){for(var n=0;n<e.length;n++){var a=e[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(t,a.key,a)}}return function(e,n,a){return n&&t(e.prototype,n),a&&t(e,a),e}}(),l=n(0),o=function(t){return t&&t.__esModule?t:{default:t}}(l),c=n(2),d=function(t){function e(){return a(this,e),r(this,(e.__proto__||Object.getPrototypeOf(e)).apply(this,arguments))}return s(e,t),i(e,[{key:"render",value:function(){var t=this.props.event;return o.default.createElement("div",{className:"event-card"},o.default.createElement("img",{src:t.img}),o.default.createElement("div",{className:"event-introduction"},o.default.createElement("h4",null,t.title),o.default.createElement("p",null,t.content),o.default.createElement(c.Link,{to:t.link},t.dateStr,o.default.createElement("img",{className:"arrow",src:"./img/arrow_right.png"}))))}}]),e}(o.default.Component);e.default=d},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var a=n(0),r=function(t){return t&&t.__esModule?t:{default:t}}(a),s=function(t){var e=t.feature;return r.default.createElement("li",{className:"feature-list-item"},r.default.createElement("img",{src:e.img}),r.default.createElement("div",null,r.default.createElement("h4",null,e.title),r.default.createElement("ul",null,e.content.map(function(t){return r.default.createElement("li",null,t)}))))};e.default=s},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var a=n(0),r=function(t){return t&&t.__esModule?t:{default:t}}(a),s=function(t){var e=t.func;return t.imgFirst?r.default.createElement("div",{className:"func-item"},r.default.createElement("div",{className:"col img"},r.default.createElement("img",{src:e.img})),r.default.createElement("div",{className:"col"},r.default.createElement("div",{className:"vertical-middle"},r.default.createElement("h4",null,e.title),r.default.createElement("p",null,e.content)))):r.default.createElement("div",{className:"func-item"},r.default.createElement("div",{className:"col"},r.default.createElement("div",{className:"vertical-middle"},r.default.createElement("h4",null,e.title),r.default.createElement("p",null,e.content))),r.default.createElement("div",{className:"col img"},r.default.createElement("img",{src:e.img})))};e.default=s},function(t,e,n){"use strict";function a(t,e){var n=t.prototype;for(var a in e)for(var i=e[a],l=0,o=i.length;l<o;l++){var c=i[l];r(n,a,c(n,a,s(n,a)))}return t}e.a=a;var r=Object.defineProperty,s=Object.getOwnPropertyDescriptor},function(t,e,n){"use strict";function a(t){if(Array.isArray(t)){for(var e=0,n=Array(t.length);e<t.length;e++)n[e]=t[e];return n}return Array.from(t)}function r(t,e){if("undefined"==typeof WeakMap)throw new Error("Using @autobind on "+e.name+"() requires WeakMap support due to its use of super."+e.name+"()\n      See https://github.com/jayphelps/core-decorators.js/issues/20");u||(u=new WeakMap),!1===u.has(t)&&u.set(t,new WeakMap);var a=u.get(t);return!1===a.has(e)&&a.set(e,n.i(c.a)(e,t)),a.get(e)}function s(t){for(var e=n.i(c.f)(t.prototype),a=n.i(c.g)(e),r=0,s=a.length;r<s;r++){var l=a[r],o=e[l];"function"==typeof o.value&&"constructor"!==l&&d(t.prototype,l,i(t.prototype,l,o))}}function i(t,e,a){var s=a.value,i=a.configurable,l=a.enumerable;if("function"!=typeof s)throw new SyntaxError("@autobind can only be used on functions, not: "+s);var o=t.constructor;return{configurable:i,enumerable:l,get:function(){if(this===t)return s;if(this.constructor!==o&&p(this).constructor===o)return s;if(this.constructor!==o&&e in this.constructor.prototype)return r(this,s);var a=n.i(c.a)(s,this);return d(this,e,{configurable:!0,writable:!0,enumerable:!1,value:a}),a},set:n.i(c.e)(e)}}function l(t){return 1===t.length?s.apply(void 0,a(t)):i.apply(void 0,a(t))}function o(){for(var t=arguments.length,e=Array(t),n=0;n<t;n++)e[n]=arguments[n];return 0===e.length?function(){return l(arguments)}:l(e)}e.a=o;var c=n(1),d=Object.defineProperty,p=Object.getPrototypeOf,u=void 0},function(t,e,n){"use strict";function a(t,e,a,r){var c=l(r,2),d=c[0],p=void 0===d?o:d,u=c[1],h=void 0!==u&&u,f=a.value;if("function"!=typeof f)throw new SyntaxError("Only functions can be debounced");return i({},a,{value:function(){var t=this,a=n.i(s.c)(this),r=a.debounceTimeoutIds,i=r[e],l=h&&!i,o=arguments;clearTimeout(i),r[e]=setTimeout(function(){delete r[e],h||f.apply(t,o)},p),l&&f.apply(this,o)}})}function r(){n.i(s.h)("@debounce is deprecated and will be removed shortly. Use @debounce from lodash-decorators.\n\n  https://www.npmjs.com/package/lodash-decorators");for(var t=arguments.length,e=Array(t),r=0;r<t;r++)e[r]=arguments[r];return n.i(s.d)(a,e)}e.a=r;var s=n(1),i=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(t[a]=n[a])}return t},l=function(){function t(t,e){var n=[],a=!0,r=!1,s=void 0;try{for(var i,l=t[Symbol.iterator]();!(a=(i=l.next()).done)&&(n.push(i.value),!e||n.length!==e);a=!0);}catch(t){r=!0,s=t}finally{try{!a&&l.return&&l.return()}finally{if(r)throw s}}return n}return function(e,n){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return t(e,n);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),o=300},function(t,e,n){"use strict";function a(t){if(Array.isArray(t)){for(var e=0,n=Array(t.length);e<t.length;e++)n[e]=t[e];return n}return Array.from(t)}function r(t){return Array.isArray(t)?t:Array.from(t)}function s(t,e,s,i){var c=r(i),d=c[0],p=c.slice(1),u=s.configurable,h=s.enumerable,f=s.writable,g=s.get,y=s.set,m=s.value,v=!!g;return{configurable:u,enumerable:h,get:function(){var t=v?g.call(this):m,n=d.call.apply(d,[this,t].concat(a(p)));if(v)return n;var r={configurable:u,enumerable:h};return r.value=n,r.writable=f,o(this,e,r),n},set:v?y:n.i(l.e)()}}function i(){for(var t=arguments.length,e=Array(t),a=0;a<t;a++)e[a]=arguments[a];return n.i(l.d)(s,e)}e.a=i;var l=n(1),o=Object.defineProperty},function(t,e,n){"use strict";function a(t,e,a,r){var c=l(r,2),d=c[0],p=void 0===d?o:d,u=c[1],h=void 0===u?{}:u;if("function"!=typeof a.value)throw new SyntaxError("Only functions can be marked as deprecated");var f=t.constructor.name+"#"+e;return h.url&&(p+="\n\n    See "+h.url+" for more details.\n\n"),i({},a,{value:function(){return n.i(s.b)("DEPRECATION "+f+": "+p),a.value.apply(this,arguments)}})}function r(){for(var t=arguments.length,e=Array(t),r=0;r<t;r++)e[r]=arguments[r];return n.i(s.d)(a,e)}e.a=r;var s=n(1),i=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(t[a]=n[a])}return t},l=function(){function t(t,e){var n=[],a=!0,r=!1,s=void 0;try{for(var i,l=t[Symbol.iterator]();!(a=(i=l.next()).done)&&(n.push(i.value),!e||n.length!==e);a=!0);}catch(t){r=!0,s=t}finally{try{!a&&l.return&&l.return()}finally{if(r)throw s}}return n}return function(e,n){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return t(e,n);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),o="This function will be removed in future versions."},function(t,e,n){"use strict";function a(t,e,n){return n.enumerable=!0,n}function r(){for(var t=arguments.length,e=Array(t),r=0;r<t;r++)e[r]=arguments[r];return n.i(s.d)(a,e)}e.a=r;var s=n(1)},function(t,e,n){"use strict";function a(t,e,n){var a=l(t),r=o(a,e);return i({},r,{value:n.value,initializer:n.initializer,get:n.get||r.get,set:n.set||r.set})}function r(){for(var t=arguments.length,e=Array(t),r=0;r<t;r++)e[r]=arguments[r];return n.i(s.d)(a,e)}e.a=r;var s=n(1),i=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(t[a]=n[a])}return t},l=Object.getPrototypeOf,o=Object.getOwnPropertyDescriptor},function(t,e,n){"use strict";function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function r(t,e){return e===Object(e)?e:t[e]||(t[e]={})}function s(t,e,n,a,r){var s=e.apply(t,n);return a[r]=s,s}function i(t){var e=void 0,n=void 0;return t.value?(e=t.value,n="value"):t.get?(e=t.get,n="get"):t.set&&(e=t.set,n="set"),{fn:e,wrapKey:n}}function l(t,e,n){var l=i(n),o=l.fn,c=l.wrapKey,p=new WeakMap,u=Object.create(null),h=Object.create(null),f=0;return d({},n,a({},c,function(){for(var t=arguments.length,e=Array(t),n=0;n<t;n++)e[n]=arguments[n];for(var a="0",i=0,l=e.length;i<l;i++){var c=e[i],d=r(h,c),g=p.get(d);void 0===g&&(g=++f,p.set(d,g)),a+=g}return u[a]||s(this,o,arguments,u,a)}))}function o(){n.i(c.h)("@memoize is deprecated and will be removed shortly. Use @memoize from lodash-decorators.\n\n  https://www.npmjs.com/package/lodash-decorators");for(var t=arguments.length,e=Array(t),a=0;a<t;a++)e[a]=arguments[a];return n.i(c.d)(l,e)}e.a=o;var c=n(1),d=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(t[a]=n[a])}return t}},function(t,e,n){"use strict";function a(t){return"[object Symbol]"===Object.prototype.toString.call(t)&&"object"===(void 0===t?"undefined":o(t))}function r(t,e){if(a(t)){do{if(e===Object.prototype)return void 0!==e[t];if(e.hasOwnProperty(t))return!0}while(e=d(e));return!1}return t in e}function s(t,e){if(!e.length)throw new SyntaxError("@mixin() class "+t.name+" requires at least one mixin as an argument");for(var a=0,s=e.length;a<s;a++)for(var i=n.i(l.f)(e[a]),o=n.i(l.g)(i),d=0,p=o.length;d<p;d++){var u=o[d];r(u,t.prototype)||c(t.prototype,u,i[u])}}function i(){for(var t=arguments.length,e=Array(t),a=0;a<t;a++)e[a]=arguments[a];return n.i(l.h)("@mixin is deprecated and will be removed shortly. Use @mixin from lodash-decorators.\n\n  https://www.npmjs.com/package/lodash-decorators"),"function"==typeof e[0]?s(e[0],[]):function(t){return s(t,e)}}e.a=i;var l=n(1),o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},c=Object.defineProperty,d=Object.getPrototypeOf},function(t,e,n){"use strict";function a(t,e,n){return n.configurable=!1,n}function r(){for(var t=arguments.length,e=Array(t),r=0;r<t;r++)e[r]=arguments[r];return n.i(s.d)(a,e)}e.a=r;var s=n(1)},function(t,e,n){"use strict";function a(t,e,n){return n.enumerable=!1,n}function r(){for(var t=arguments.length,e=Array(t),r=0;r<t;r++)e[r]=arguments[r];return n.i(s.d)(a,e)}e.a=r;var s=n(1)},function(t,e,n){"use strict";function a(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function r(t){return t.hasOwnProperty("value")?"data":t.hasOwnProperty("get")||t.hasOwnProperty("set")?"accessor":"data"}function s(t,e,n){n.assert(t.length===e.length)}function i(t,e,n){var a=h(t.value),r=h(e.value);if("undefined"===a&&"undefined"===r&&n.error("descriptor values are both undefined. (class properties are are not currently supported)'"),a!==r){("function"===r&&void 0===a||void 0!==a)&&n.error('value types do not match. {parent} is "'+a+'", {child} is "'+r+'"')}switch(r){case"function":s(t.value,e.value,n);break;default:n.error('Unexpected error. Please file a bug with: {parent} is "'+a+'", {child} is "'+r+'"')}}function l(t,e,n){var a="function"==typeof t.get,r="function"==typeof e.get,i="function"==typeof t.set,l="function"==typeof e.set;(a||r)&&(!a&&i&&n.error("{parent} is setter but {child} is getter"),!r&&l&&n.error("{parent} is getter but {child} is setter"),s(t.get,e.get,n)),(i||l)&&(!i&&a&&n.error("{parent} is getter but {child} is setter"),!l&&r&&n.error("{parent} is setter but {child} is getter"),s(t.set,e.set,n))}function o(t,e,n){var a=r(t),s=r(e);switch(a!==s&&n.error('descriptor types do not match. {parent} is "'+a+'", {child} is "'+s+'"'),s){case"data":i(t,e,n);break;case"accessor":l(t,e,n)}}function c(t,e){for(var n=0,a=m.length;n<a;n++){var r=m[n],s=r(e);if(s in t)return s}return null}function d(t,e,n){n.key=e;var a=Object.getPrototypeOf(t),r=Object.getOwnPropertyDescriptor(a,e),s=new y(a,t,r,n);if(void 0===r){var i=c(a,e),l=i?'\n\n  Did you mean "'+i+'"?':"";s.error("No descriptor matching {child} was found on the prototype chain."+l)}return o(r,n,s),n}function p(){for(var t=arguments.length,e=Array(t),a=0;a<t;a++)e[a]=arguments[a];return n.i(u.d)(d,e)}e.a=p;var u=n(1),h="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},f=function(){function t(t,e){for(var n=0;n<e.length;n++){var a=e[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(t,a.key,a)}}return function(e,n,a){return n&&t(e.prototype,n),a&&t(e,a),e}}(),g=/^function ([_$a-zA-Z\xA0-\uFFFF][_$a-zA-Z0-9\xA0-\uFFFF]*)?(\([^\)]*\))[\s\S]+$/,y=function(){function t(e,n,r,s){a(this,t),this.parentKlass=e,this.childKlass=n,this.parentDescriptor=r,this.childDescriptor=s}return f(t,[{key:"_getTopic",value:function(t){return void 0===t?null:"value"in t?t.value:"get"in t?t.get:"set"in t?t.set:void 0}},{key:"_extractTopicSignature",value:function(t){switch(void 0===t?"undefined":h(t)){case"function":return this._extractFunctionSignature(t);default:return this.key}}},{key:"_extractFunctionSignature",value:function(t){var e=this;return t.toString().replace(g,function(t){return(arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.key)+arguments[2]})}},{key:"key",get:function(){return this.childDescriptor.key}},{key:"parentNotation",get:function(){return this.parentKlass.constructor.name+"#"+this.parentPropertySignature}},{key:"childNotation",get:function(){return this.childKlass.constructor.name+"#"+this.childPropertySignature}},{key:"parentTopic",get:function(){return this._getTopic(this.parentDescriptor)}},{key:"childTopic",get:function(){return this._getTopic(this.childDescriptor)}},{key:"parentPropertySignature",get:function(){return this._extractTopicSignature(this.parentTopic)}},{key:"childPropertySignature",get:function(){return this._extractTopicSignature(this.childTopic)}}]),f(t,[{key:"assert",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";!0!==t&&this.error("{child} does not properly override {parent}"+e)}},{key:"error",value:function(t){var e=this;throw t=t.replace("{parent}",function(t){return e.parentNotation}).replace("{child}",function(t){return e.childNotation}),new SyntaxError(t)}}]),t}(),m=[function(t){return t.toLowerCase()},function(t){return t.toUpperCase()},function(t){return t+"s"},function(t){return t.slice(0,-1)},function(t){return t.slice(1,t.length)}]},function(t,e,n){"use strict";function a(t,e,a,c){var d=l(c,3),p=d[0],u=void 0===p?null:p,h=d[1],f=void 0!==h&&h,g=d[2],y=void 0===g?o:g;if(!r.__enabled)return r.__warned||(y.warn("console.profile is not supported. All @profile decorators are disabled."),r.__warned=!0),a;var m=a.value;if(null===u&&(u=t.constructor.name+"."+e),"function"!=typeof m)throw new SyntaxError("@profile can only be used on functions, not: "+m);return i({},a,{value:function(){var t=Date.now(),e=n.i(s.c)(this);(!0===f&&!e.profileLastRan||!1===f||"number"==typeof f&&t-e.profileLastRan>f||"function"==typeof f&&f.apply(this,arguments))&&(y.profile(u),e.profileLastRan=t);try{return m.apply(this,arguments)}finally{y.profileEnd(u)}}})}function r(){for(var t=arguments.length,e=Array(t),r=0;r<t;r++)e[r]=arguments[r];return n.i(s.d)(a,e)}e.a=r;var s=n(1),i=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(t[a]=n[a])}return t},l=function(){function t(t,e){var n=[],a=!0,r=!1,s=void 0;try{for(var i,l=t[Symbol.iterator]();!(a=(i=l.next()).done)&&(n.push(i.value),!e||n.length!==e);a=!0);}catch(t){r=!0,s=t}finally{try{!a&&l.return&&l.return()}finally{if(r)throw s}}return n}return function(e,n){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return t(e,n);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),o=(console,{profile:console.profile?n.i(s.a)(console.profile,console):function(){},profileEnd:console.profileEnd?n.i(s.a)(console.profileEnd,console):function(){},warn:s.b});r.__enabled=!!console.profile,r.__warned=!1},function(t,e,n){"use strict";function a(t,e,n){return n.writable=!1,n}function r(){for(var t=arguments.length,e=Array(t),r=0;r<t;r++)e[r]=arguments[r];return n.i(s.d)(a,e)}e.a=r;var s=n(1)},function(t,e,n){"use strict";function a(){}function r(t,e,n){if("object"===("undefined"==typeof console?"undefined":c(console))){var r=console.warn;console.warn=a;var s=e.apply(t,n);return console.warn=r,s}return e.apply(t,n)}function s(t,e,n){return o({},n,{value:function(){return r(this,n.value,arguments)}})}function i(){for(var t=arguments.length,e=Array(t),a=0;a<t;a++)e[a]=arguments[a];return n.i(l.d)(s,e)}e.a=i;var l=n(1),o=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(t[a]=n[a])}return t},c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t}},function(t,e,n){"use strict";function a(t,e,a,r){var c=l(r,2),d=c[0],p=void 0===d?o:d,u=c[1],h=void 0===u?{}:u,f=a.value;if("function"!=typeof f)throw new SyntaxError("Only functions can be throttled");return!1!==h.leading&&(h.leading=!0),!1!==h.trailing&&(h.trailing=!0),i({},a,{value:function(){var t=this,a=n.i(s.c)(this),r=a.throttleTimeoutIds,i=a.throttlePreviousTimestamps,l=r[e],o=i[e]||0,c=Date.now();h.trailing&&(a.throttleTrailingArgs=arguments),o||!1!==h.leading||(o=c);var d=p-(c-o);d<=0?(clearTimeout(l),delete r[e],i[e]=c,f.apply(this,arguments)):!l&&h.trailing&&(r[e]=setTimeout(function(){i[e]=!1===h.leading?0:Date.now(),delete r[e],f.apply(t,a.throttleTrailingArgs),a.throttleTrailingArgs=null},d))}})}function r(){n.i(s.h)("@throttle is deprecated and will be removed shortly. Use @throttle from lodash-decorators.\n\n  https://www.npmjs.com/package/lodash-decorators");for(var t=arguments.length,e=Array(t),r=0;r<t;r++)e[r]=arguments[r];return n.i(s.d)(a,e)}e.a=r;var s=n(1),i=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(t[a]=n[a])}return t},l=function(){function t(t,e){var n=[],a=!0,r=!1,s=void 0;try{for(var i,l=t[Symbol.iterator]();!(a=(i=l.next()).done)&&(n.push(i.value),!e||n.length!==e);a=!0);}catch(t){r=!0,s=t}finally{try{!a&&l.return&&l.return()}finally{if(r)throw s}}return n}return function(e,n){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return t(e,n);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),o=300},function(t,e,n){"use strict";function a(t,e,n,a){var r=l(a,2),s=r[0],o=void 0===s?null:s,p=r[1],u=void 0===p?c:p,h=n.value;if(null===o&&(o=t.constructor.name+"."+e),"function"!=typeof h)throw new SyntaxError("@time can only be used on functions, not: "+h);return i({},n,{value:function(){var t=o+"-"+d;d++,u.time(t);try{return h.apply(this,arguments)}finally{u.timeEnd(t)}}})}function r(){for(var t=arguments.length,e=Array(t),r=0;r<t;r++)e[r]=arguments[r];return n.i(s.d)(a,e)}e.a=r;var s=n(1),i=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(t[a]=n[a])}return t},l=function(){function t(t,e){var n=[],a=!0,r=!1,s=void 0;try{for(var i,l=t[Symbol.iterator]();!(a=(i=l.next()).done)&&(n.push(i.value),!e||n.length!==e);a=!0);}catch(t){r=!0,s=t}finally{try{!a&&l.return&&l.return()}finally{if(r)throw s}}return n}return function(e,n){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return t(e,n);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),o={},c={time:console.time?console.time.bind(console):function(t){o[t]=new Date},timeEnd:console.timeEnd?console.timeEnd.bind(console):function(t){var e=new Date,n=e-o[t];delete o[t],console.log(t+": "+n+"ms")}},d=0},function(t,e){},function(t,e){},function(t,e){},function(t,e){},function(t,e){},function(t,e){},function(t,e){},function(t,e){},function(t,e){},function(t,e){},function(t,e){},function(t,e){},function(t,e){},function(t,e){},function(t,e,n){"use strict";function a(t){return function(){return t}}var r=function(){};r.thatReturns=a,r.thatReturnsFalse=a(!1),r.thatReturnsTrue=a(!0),r.thatReturnsNull=a(null),r.thatReturnsThis=function(){return this},r.thatReturnsArgument=function(t){return t},t.exports=r},function(t,e,n){"use strict";function a(t,e,n,a,s,i,l,o){if(r(e),!t){var c;if(void 0===e)c=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var d=[n,a,s,i,l,o],p=0;c=new Error(e.replace(/%s/g,function(){return d[p++]})),c.name="Invariant Violation"}throw c.framesToPop=1,c}}var r=function(t){};t.exports=a},function(t,e,n){(function(e){function n(t,e,n){function a(e){var n=g,a=y;return g=y=void 0,N=e,v=t.apply(a,n)}function s(t){return N=t,b=setTimeout(d,e),j?a(t):v}function i(t){var n=t-x,a=t-N,r=e-n;return E?w(r,m-a):r}function c(t){var n=t-x,a=t-N;return void 0===x||n>=e||n<0||E&&a>=m}function d(){var t=k();if(c(t))return p(t);b=setTimeout(d,i(t))}function p(t){return b=void 0,C&&g?a(t):(g=y=void 0,v)}function u(){void 0!==b&&clearTimeout(b),N=0,g=x=y=b=void 0}function h(){return void 0===b?v:p(k())}function f(){var t=k(),n=c(t);if(g=arguments,y=this,x=t,n){if(void 0===b)return s(x);if(E)return b=setTimeout(d,e),a(x)}return void 0===b&&(b=setTimeout(d,e)),v}var g,y,m,v,b,x,N=0,j=!1,E=!1,C=!0;if("function"!=typeof t)throw new TypeError(o);return e=l(e)||0,r(n)&&(j=!!n.leading,E="maxWait"in n,m=E?S(l(n.maxWait)||0,e):m,C="trailing"in n?!!n.trailing:C),f.cancel=u,f.flush=h,f}function a(t,e,a){var s=!0,i=!0;if("function"!=typeof t)throw new TypeError(o);return r(a)&&(s="leading"in a?!!a.leading:s,i="trailing"in a?!!a.trailing:i),n(t,e,{leading:s,maxWait:e,trailing:i})}function r(t){var e=typeof t;return!!t&&("object"==e||"function"==e)}function s(t){return!!t&&"object"==typeof t}function i(t){return"symbol"==typeof t||s(t)&&x.call(t)==d}function l(t){if("number"==typeof t)return t;if(i(t))return c;if(r(t)){var e="function"==typeof t.valueOf?t.valueOf():t;t=r(e)?e+"":e}if("string"!=typeof t)return 0===t?t:+t;t=t.replace(p,"");var n=h.test(t);return n||f.test(t)?g(t.slice(2),n?2:8):u.test(t)?c:+t}var o="Expected a function",c=NaN,d="[object Symbol]",p=/^\s+|\s+$/g,u=/^[-+]0x[0-9a-f]+$/i,h=/^0b[01]+$/i,f=/^0o[0-7]+$/i,g=parseInt,y="object"==typeof e&&e&&e.Object===Object&&e,m="object"==typeof self&&self&&self.Object===Object&&self,v=y||m||Function("return this")(),b=Object.prototype,x=b.toString,S=Math.max,w=Math.min,k=function(){return v.Date.now()};t.exports=a}).call(e,n(99))},function(t,e){function n(){throw new Error("setTimeout has not been defined")}function a(){throw new Error("clearTimeout has not been defined")}function r(t){if(d===setTimeout)return setTimeout(t,0);if((d===n||!d)&&setTimeout)return d=setTimeout,setTimeout(t,0);try{return d(t,0)}catch(e){try{return d.call(null,t,0)}catch(e){return d.call(this,t,0)}}}function s(t){if(p===clearTimeout)return clearTimeout(t);if((p===a||!p)&&clearTimeout)return p=clearTimeout,clearTimeout(t);try{return p(t)}catch(e){try{return p.call(null,t)}catch(e){return p.call(this,t)}}}function i(){g&&h&&(g=!1,h.length?f=h.concat(f):y=-1,f.length&&l())}function l(){if(!g){var t=r(i);g=!0;for(var e=f.length;e;){for(h=f,f=[];++y<e;)h&&h[y].run();y=-1,e=f.length}h=null,g=!1,s(t)}}function o(t,e){this.fun=t,this.array=e}function c(){}var d,p,u=t.exports={};!function(){try{d="function"==typeof setTimeout?setTimeout:n}catch(t){d=n}try{p="function"==typeof clearTimeout?clearTimeout:a}catch(t){p=a}}();var h,f=[],g=!1,y=-1;u.nextTick=function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)e[n-1]=arguments[n];f.push(new o(t,e)),1!==f.length||g||r(l)},o.prototype.run=function(){this.fun.apply(null,this.array)},u.title="browser",u.browser=!0,u.env={},u.argv=[],u.version="",u.versions={},u.on=c,u.addListener=c,u.once=c,u.off=c,u.removeListener=c,u.removeAllListeners=c,u.emit=c,u.prependListener=c,u.prependOnceListener=c,u.listeners=function(t){return[]},u.binding=function(t){throw new Error("process.binding is not supported")},u.cwd=function(){return"/"},u.chdir=function(t){throw new Error("process.chdir is not supported")},u.umask=function(){return 0}},function(t,e,n){"use strict";var a=n(84),r=n(85),s=n(89);t.exports=function(){function t(t,e,n,a,i,l){l!==s&&r(!1,"Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types")}function e(){return t}t.isRequired=t;var n={array:t,bool:t,func:t,number:t,object:t,string:t,symbol:t,any:t,arrayOf:e,element:t,instanceOf:e,node:t,objectOf:e,oneOf:e,oneOfType:e,shape:e,exact:e};return n.checkPropTypes=a,n.PropTypes=n,n}},function(t,e,n){"use strict";t.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},function(t,e,n){"use strict";function a(t,e){return Object.prototype.hasOwnProperty.call(t,e)}t.exports=function(t,e,n,s){e=e||"&",n=n||"=";var i={};if("string"!=typeof t||0===t.length)return i;var l=/\+/g;t=t.split(e);var o=1e3;s&&"number"==typeof s.maxKeys&&(o=s.maxKeys);var c=t.length;o>0&&c>o&&(c=o);for(var d=0;d<c;++d){var p,u,h,f,g=t[d].replace(l,"%20"),y=g.indexOf(n);y>=0?(p=g.substr(0,y),u=g.substr(y+1)):(p=g,u=""),h=decodeURIComponent(p),f=decodeURIComponent(u),a(i,h)?r(i[h])?i[h].push(f):i[h]=[i[h],f]:i[h]=f}return i};var r=Array.isArray||function(t){return"[object Array]"===Object.prototype.toString.call(t)}},function(t,e,n){"use strict";function a(t,e){if(t.map)return t.map(e);for(var n=[],a=0;a<t.length;a++)n.push(e(t[a],a));return n}var r=function(t){switch(typeof t){case"string":return t;case"boolean":return t?"true":"false";case"number":return isFinite(t)?t:"";default:return""}};t.exports=function(t,e,n,l){return e=e||"&",n=n||"=",null===t&&(t=void 0),"object"==typeof t?a(i(t),function(i){var l=encodeURIComponent(r(i))+n;return s(t[i])?a(t[i],function(t){return l+encodeURIComponent(r(t))}).join(e):l+encodeURIComponent(r(t[i]))}).join(e):l?encodeURIComponent(r(l))+n+encodeURIComponent(r(t)):""};var s=Array.isArray||function(t){return"[object Array]"===Object.prototype.toString.call(t)},i=Object.keys||function(t){var e=[];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&e.push(n);return e}},function(t,e,n){!function(e,a){t.exports=a(n(0),n(12))}("undefined"!=typeof self&&self,function(t,e){return function(t){function e(a){if(n[a])return n[a].exports;var r=n[a]={i:a,l:!1,exports:{}};return t[a].call(r.exports,r,r.exports,e),r.l=!0,r.exports}var n={};return e.m=t,e.c=n,e.d=function(t,n,a){e.o(t,n)||Object.defineProperty(t,n,{configurable:!1,enumerable:!0,get:a})},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},e.p="",e(e.s=2)}([function(t,e,n){"use strict";function a(t){console.warn("[react-ga]",t)}Object.defineProperty(e,"__esModule",{value:!0}),e.default=a},function(t,e,n){"use strict";function a(t){return t.replace(/^\s+|\s+$/g,"")}Object.defineProperty(e,"__esModule",{value:!0}),e.default=a},function(t,e,n){"use strict";function a(t){return t&&t.__esModule?t:{default:t}}function r(t,e){var n={};for(var a in t)e.indexOf(a)>=0||Object.prototype.hasOwnProperty.call(t,a)&&(n[a]=t[a]);return n}function s(t){if(Array.isArray(t)){for(var e=0,n=Array(t.length);e<t.length;e++)n[e]=t[e];return n}return Array.from(t)}function i(t){return(0,w.default)(t,L)}function l(t){for(var e=arguments.length,n=Array(e>1?e-1:0),a=1;a<e;a++)n[a-1]=arguments[a];var r=n[0];if("function"==typeof H){if("string"!=typeof r)return void(0,D.default)("ga command must be a string");!z&&Array.isArray(t)||H.apply(void 0,n),Array.isArray(t)&&t.forEach(function(t){H.apply(void 0,s([t+"."+r].concat(n.slice(1))))})}}function o(t,e){if(!t)return void(0,D.default)("gaTrackingID is required in initialize()");e&&(e.debug&&!0===e.debug&&(R=!0),!1===e.titleCase&&(L=!1)),e&&e.gaOptions?H("create",t,e.gaOptions):H("create",t,"auto")}function c(t,e){if(e&&!0===e.testMode)F=!0;else{if("undefined"==typeof window)return!1;(0,P.default)(e)}return z=!e||"boolean"!=typeof e.alwaysSendToDefaultTracker||e.alwaysSendToDefaultTracker,Array.isArray(t)?t.forEach(function(t){if("object"!==(void 0===t?"undefined":x(t)))return void(0,D.default)("All configs must be an object");o(t.trackingId,t)}):o(t,e),!0}function d(){for(var t=arguments.length,e=Array(t),n=0;n<t;n++)e[n]=arguments[n];return e.length>0&&(H.apply(void 0,e),R&&((0,_.default)("called ga('arguments');"),(0,_.default)("with arguments: "+JSON.stringify(e)))),window.ga}function p(t,e){return t?"object"!==(void 0===t?"undefined":x(t))?void(0,D.default)("Expected `fieldsObject` arg to be an Object"):(0===Object.keys(t).length&&(0,D.default)("empty `fieldsObject` given to .set()"),l(e,"set",t),void(R&&((0,_.default)("called ga('set', fieldsObject);"),(0,_.default)("with fieldsObject: "+JSON.stringify(t))))):void(0,D.default)("`fieldsObject` is required in .set()")}function u(t,e){l(e,"send",t),R&&((0,_.default)("called ga('send', fieldObject);"),(0,_.default)("with fieldObject: "+JSON.stringify(t)),(0,_.default)("with trackers: "+JSON.stringify(e)))}function h(t,e,n){if(!t)return void(0,D.default)("path is required in .pageview()");var a=(0,E.default)(t);if(""===a)return void(0,D.default)("path cannot be an empty string in .pageview()");var r={};if(n&&(r.title=n),"function"==typeof d&&(l(e,"send",b({hitType:"pageview",page:a},r)),R)){(0,_.default)("called ga('send', 'pageview', path);");var s="";n&&(s=" and title: "+n),(0,_.default)("with path: "+a+s)}}function f(t,e){if(!t)return void(0,D.default)("modalName is required in .modalview(modalName)");var n=(0,N.default)((0,E.default)(t));if(""===n)return void(0,D.default)("modalName cannot be an empty string or a single / in .modalview()");if("function"==typeof d){var a="/modal/"+n;l(e,"send","pageview",a),R&&((0,_.default)("called ga('send', 'pageview', path);"),(0,_.default)("with path: "+a))}}function g(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=t.category,n=t.variable,a=t.value,r=t.label,s=arguments[1];if("function"==typeof d){if(!e||!n||!a||"number"!=typeof a)return void(0,D.default)("args.category, args.variable AND args.value are required in timing() AND args.value has to be a number");var l={hitType:"timing",timingCategory:i(e),timingVar:i(n),timingValue:a};r&&(l.timingLabel=i(r)),u(l,s)}}function y(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=arguments[1],n=t.category,a=t.action,s=t.label,l=t.value,o=t.nonInteraction,c=t.transport,p=r(t,["category","action","label","value","nonInteraction","transport"]);if("function"==typeof d){if(!n||!a)return void(0,D.default)("args.category AND args.action are required in event()");var h={hitType:"event",eventCategory:i(n),eventAction:i(a)};s&&(h.eventLabel=i(s)),void 0!==l&&("number"!=typeof l?(0,D.default)("Expected `args.value` arg to be a Number."):h.eventValue=l),void 0!==o&&("boolean"!=typeof o?(0,D.default)("`args.nonInteraction` must be a boolean."):h.nonInteraction=o),void 0!==c&&("string"!=typeof c?(0,D.default)("`args.transport` must be a string."):(-1===["beacon","xhr","image"].indexOf(c)&&(0,D.default)("`args.transport` must be either one of these values: `beacon`, `xhr` or `image`"),h.transport=c)),Object.keys(p).filter(function(t){return"dimension"===t.substr(0,"dimension".length)}).forEach(function(t){h[t]=p[t]}),Object.keys(p).filter(function(t){return"metric"===t.substr(0,"metric".length)}).forEach(function(t){h[t]=p[t]}),u(h,e)}}function m(t,e){var n=t.description,a=t.fatal;if("function"==typeof d){var r={hitType:"exception"};n&&(r.exDescription=i(n)),void 0!==a&&("boolean"!=typeof a?(0,D.default)("`args.fatal` must be a boolean."):r.exFatal=a),u(r,e)}}function v(t,e,n){if("function"!=typeof e)return void(0,D.default)("hitCallback function is required");if("function"==typeof d){if(!t||!t.label)return void(0,D.default)("args.label is required in outboundLink()");var a={hitType:"event",eventCategory:"Outbound",eventAction:"Click",eventLabel:i(t.label)},r=!1,s=function(){r=!0,e()},l=setTimeout(s,250),o=function(){clearTimeout(l),r||e()};a.hitCallback=o,u(a,n)}else setTimeout(e,0)}Object.defineProperty(e,"__esModule",{value:!0}),e.testModeAPI=e.OutboundLink=e.plugin=void 0;var b=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(t[a]=n[a])}return t},x="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t};e.initialize=c,e.ga=d,e.set=p,e.send=u,e.pageview=h,e.modalview=f,e.timing=g,e.event=y,e.exception=m,e.outboundLink=v;var S=n(3),w=a(S),k=n(6),N=a(k),j=n(1),E=a(j),C=n(7),P=a(C),O=n(0),D=a(O),I=n(8),_=a(I),T=n(9),A=a(T),q=n(10),M=a(q),R=!1,L=!0,F=!1,z=!0,H=function(){var t;return F?A.default.ga.apply(A.default,arguments):window.ga?(t=window).ga.apply(t,arguments):(0,D.default)("ReactGA.initialize must be called first or GoogleAnalytics should be loaded manually")},U=e.plugin={require:function(t,e){if("function"==typeof d){if(!t)return void(0,D.default)("`name` is required in .require()");var n=(0,E.default)(t);if(""===n)return void(0,D.default)("`name` cannot be an empty string in .require()");if(e){if("object"!==(void 0===e?"undefined":x(e)))return void(0,D.default)("Expected `options` arg to be an Object");0===Object.keys(e).length&&(0,D.default)("Empty `options` given to .require()"),d("require",n,e),R&&(0,_.default)("called ga('require', '"+n+"', "+JSON.stringify(e))}else d("require",n),R&&(0,_.default)("called ga('require', '"+n+"');")}},execute:function(t,e){var n=void 0,a=void 0;if(1==(arguments.length<=2?0:arguments.length-2)?n=arguments.length<=2?void 0:arguments[2]:(a=arguments.length<=2?void 0:arguments[2],n=arguments.length<=3?void 0:arguments[3]),"function"==typeof d)if("string"!=typeof t)(0,D.default)("Expected `pluginName` arg to be a String.");else if("string"!=typeof e)(0,D.default)("Expected `action` arg to be a String.");else{var r=t+":"+e;n=n||null,a&&n?(d(r,a,n),R&&((0,_.default)("called ga('"+r+"');"),(0,_.default)('actionType: "'+a+'" with payload: '+JSON.stringify(n)))):n?(d(r,n),R&&((0,_.default)("called ga('"+r+"');"),(0,_.default)("with payload: "+JSON.stringify(n)))):(d(r),R&&(0,_.default)("called ga('"+r+"');"))}}};M.default.origTrackLink=M.default.trackLink,M.default.trackLink=v;var B=e.OutboundLink=M.default;e.testModeAPI=A.default;e.default={initialize:c,ga:d,set:p,send:u,pageview:h,modalview:f,timing:g,event:y,exception:m,plugin:U,outboundLink:v,OutboundLink:B,testModeAPI:A.default}},function(t,e,n){"use strict";function a(t){return t&&t.__esModule?t:{default:t}}function r(t,e){return(0,i.default)(t)?((0,d.default)("This arg looks like an email address, redacting."),p):e?(0,o.default)(t):t}Object.defineProperty(e,"__esModule",{value:!0}),e.default=r;var s=n(4),i=a(s),l=n(5),o=a(l),c=n(0),d=a(c),p="REDACTED (Potential Email Address)"},function(t,e,n){"use strict";function a(t){return/[^@]+@[^@]+/.test(t)}Object.defineProperty(e,"__esModule",{value:!0}),e.default=a},function(t,e,n){"use strict";function a(t){return(0,s.default)(t).replace(/[A-Za-z0-9\u00C0-\u00FF]+[^\s-]*/g,function(t,e,n){return e>0&&e+t.length!==n.length&&t.search(i)>-1&&":"!==n.charAt(e-2)&&("-"!==n.charAt(e+t.length)||"-"===n.charAt(e-1))&&n.charAt(e-1).search(/[^\s-]/)<0?t.toLowerCase():t.substr(1).search(/[A-Z]|\../)>-1?t:t.charAt(0).toUpperCase()+t.substr(1)})}Object.defineProperty(e,"__esModule",{value:!0}),e.default=a;var r=n(1),s=function(t){return t&&t.__esModule?t:{default:t}}(r),i=/^(a|an|and|as|at|but|by|en|for|if|in|nor|of|on|or|per|the|to|vs?\.?|via)$/i},function(t,e,n){"use strict";function a(t){return"/"===t.substring(0,1)?t.substring(1):t}Object.defineProperty(e,"__esModule",{value:!0}),e.default=a},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(t){!function(t,e,n,a,r,s,i){t.GoogleAnalyticsObject=r,t[r]=t[r]||function(){(t[r].q=t[r].q||[]).push(arguments)},t[r].l=1*new Date,s=e.createElement(n),i=e.getElementsByTagName(n)[0],s.async=1,s.src=a,i.parentNode.insertBefore(s,i)}(window,document,"script",t&&t.gaAddress?t.gaAddress:"https://www.google-analytics.com/analytics.js","ga")}},function(t,e,n){"use strict";function a(t){console.info("[react-ga]",t)}Object.defineProperty(e,"__esModule",{value:!0}),e.default=a},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var a=e.gaCalls=[];e.default={calls:a,ga:function(){for(var t=arguments.length,e=Array(t),n=0;n<t;n++)e[n]=arguments[n];a.push([].concat(e))}}},function(t,e,n){"use strict";function a(t){return t&&t.__esModule?t:{default:t}}function r(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function s(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function i(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}Object.defineProperty(e,"__esModule",{value:!0});var l=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(t[a]=n[a])}return t},o=function(){function t(t,e){for(var n=0;n<e.length;n++){var a=e[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(t,a.key,a)}}return function(e,n,a){return n&&t(e.prototype,n),a&&t(e,a),e}}(),c=n(11),d=a(c),p=n(12),u=a(p),h=n(0),f=a(h),g="_blank",y=1,m=function(t){function e(){var t,n,a,i;r(this,e);for(var l=arguments.length,o=Array(l),c=0;c<l;c++)o[c]=arguments[c];return n=a=s(this,(t=e.__proto__||Object.getPrototypeOf(e)).call.apply(t,[this].concat(o))),a.handleClick=function(t){var n=a.props,r=n.target,s=n.eventLabel,i=n.to,l=n.onClick,o={label:s},c=r!==g,d=!(t.ctrlKey||t.shiftKey||t.metaKey||t.button===y);c&&d?(t.preventDefault(),e.trackLink(o,function(){window.location.href=i})):e.trackLink(o,function(){}),l&&l(t)},i=n,s(a,i)}return i(e,t),o(e,[{key:"render",value:function(){var t=l({},this.props,{href:this.props.to,onClick:this.handleClick});return delete t.eventLabel,d.default.createElement("a",t)}}]),e}(c.Component);m.propTypes={eventLabel:u.default.string.isRequired,target:u.default.string,to:u.default.string,onClick:u.default.func},m.defaultProps={target:null,to:null,onClick:null},m.trackLink=function(){(0,f.default)("ga tracking not enabled")},e.default=m},function(e,n){e.exports=t},function(t,n){t.exports=e}])})},function(t,e,n){"use strict";function a(t){return t&&t.__esModule?t:{default:t}}function r(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function s(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function i(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}Object.defineProperty(e,"__esModule",{value:!0});var l=function(){function t(t,e){for(var n=0;n<e.length;n++){var a=e[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(t,a.key,a)}}return function(e,n,a){return n&&t(e.prototype,n),a&&t(e,a),e}}(),o=n(0),c=a(o),d=n(19),p=a(d),u=function(t){function e(){return r(this,e),s(this,(e.__proto__||Object.getPrototypeOf(e)).apply(this,arguments))}return i(e,t),l(e,[{key:"render",value:function(){return c.default.createElement("input",this.props,this.props.children)}}]),e}(c.default.Component);e.default=(0,p.default)(u)},function(t,e,n){"use strict";function a(t){return t&&t.__esModule?t:{default:t}}function r(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function s(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function i(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}Object.defineProperty(e,"__esModule",{value:!0});var l=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(t[a]=n[a])}return t},o=function(){function t(t,e){for(var n=0;n<e.length;n++){var a=e[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(t,a.key,a)}}return function(e,n,a){return n&&t(e.prototype,n),a&&t(e,a),e}}(),c=n(0),d=a(c),p=n(26),u=a(p),h=n(12),f=a(h),g=function(t){function e(){return r(this,e),s(this,(e.__proto__||Object.getPrototypeOf(e)).apply(this,arguments))}return i(e,t),o(e,[{key:"render",value:function(){var t=this,e=l({},this.props);return e.parentBindings&&delete e.parentBindings,d.default.createElement("div",l({},e,{ref:function(e){t.props.parentBindings.domNode=e}}),this.props.children)}}]),e}(d.default.Component);g.propTypes={name:f.default.string,id:f.default.string},e.default=(0,u.default)(g)},function(t,e,n){"use strict";function a(t){return t&&t.__esModule?t:{default:t}}function r(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function s(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function i(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}Object.defineProperty(e,"__esModule",{value:!0});var l=n(0),o=a(l),c=n(19),d=a(c),p=function(t){function e(){var t,n,a,i;r(this,e);for(var l=arguments.length,c=Array(l),d=0;d<l;d++)c[d]=arguments[d];return n=a=s(this,(t=e.__proto__||Object.getPrototypeOf(e)).call.apply(t,[this].concat(c))),a.render=function(){return o.default.createElement("a",a.props,a.props.children)},i=n,s(a,i)}return i(e,t),e}(o.default.Component);e.default=(0,d.default)(p)},function(t,e,n){"use strict";function a(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function r(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function s(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}var i=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(t[a]=n[a])}return t},l=function(){function t(t,e){for(var n=0;n<e.length;n++){var a=e[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(t,a.key,a)}}return function(e,n,a){return n&&t(e.prototype,n),a&&t(e,a),e}}(),o=n(0),c=(n(8),n(13),n(20)),d=n(14),p=n(12),u=n(27),h={to:p.string.isRequired,containerId:p.string,container:p.object,activeClass:p.string,spy:p.bool,smooth:p.oneOfType([p.bool,p.string]),offset:p.number,delay:p.number,isDynamic:p.bool,onClick:p.func,duration:p.oneOfType([p.number,p.func]),absolute:p.bool,onSetActive:p.func,onSetInactive:p.func,ignoreCancelEvents:p.bool,hashSpy:p.bool},f={Scroll:function(t,e){console.warn("Helpers.Scroll is deprecated since v1.7.0");var n=e||d,p=function(e){function d(t){a(this,d);var e=r(this,(d.__proto__||Object.getPrototypeOf(d)).call(this,t));return f.call(e),e.state={active:!1},e}return s(d,e),l(d,[{key:"getScrollSpyContainer",value:function(){var t=this.props.containerId,e=this.props.container;return t?document.getElementById(t):e&&e.nodeType?e:document}},{key:"componentDidMount",value:function(){if(this.props.spy||this.props.hashSpy){var t=this.getScrollSpyContainer();c.isMounted(t)||c.mount(t),this.props.hashSpy&&(u.isMounted()||u.mount(n),u.mapContainer(this.props.to,t)),this.props.spy&&c.addStateHandler(this.stateHandler),c.addSpyHandler(this.spyHandler,t),this.setState({container:t})}}},{key:"componentWillUnmount",value:function(){c.unmount(this.stateHandler,this.spyHandler)}},{key:"render",value:function(){var e="";e=this.state&&this.state.active?((this.props.className||"")+" "+(this.props.activeClass||"active")).trim():this.props.className;var n=i({},this.props);for(var a in h)n.hasOwnProperty(a)&&delete n[a];return n.className=e,n.onClick=this.handleClick,o.createElement(t,n)}}]),d}(o.Component),f=function(){var t=this;this.scrollTo=function(e,a){n.scrollTo(e,i({},t.state,a))},this.handleClick=function(e){t.props.onClick&&t.props.onClick(e),e.stopPropagation&&e.stopPropagation(),e.preventDefault&&e.preventDefault(),t.scrollTo(t.props.to,t.props)},this.stateHandler=function(){n.getActiveLink()!==t.props.to&&(null!==t.state&&t.state.active&&t.props.onSetInactive&&t.props.onSetInactive(),t.setState({active:!1}))},this.spyHandler=function(e){var a=t.getScrollSpyContainer();if(!u.isMounted()||u.isInitialized()){var r=t.props.to,s=null,i=0,l=0,o=0;if(a.getBoundingClientRect){o=a.getBoundingClientRect().top}if(!s||t.props.isDynamic){if(!(s=n.get(r)))return;var d=s.getBoundingClientRect();i=d.top-o+e,l=i+d.height}var p=e-t.props.offset,h=p>=Math.floor(i)&&p<Math.floor(l),f=p<Math.floor(i)||p>=Math.floor(l),g=n.getActiveLink();return f?(r===g&&n.setActiveLink(void 0),t.props.hashSpy&&u.getHash()===r&&u.changeHash(),t.props.spy&&t.state.active&&(t.setState({active:!1}),t.props.onSetInactive&&t.props.onSetInactive()),c.updateStates()):h&&g!==r?(n.setActiveLink(r),t.props.hashSpy&&u.changeHash(r),t.props.spy&&(t.setState({active:!0}),t.props.onSetActive&&t.props.onSetActive(r)),c.updateStates()):void 0}}};return p.propTypes=h,p.defaultProps={offset:0},p},Element:function(t){console.warn("Helpers.Element is deprecated since v1.7.0");var e=function(e){function n(t){a(this,n);var e=r(this,(n.__proto__||Object.getPrototypeOf(n)).call(this,t));return e.childBindings={domNode:null},e}return s(n,e),l(n,[{key:"componentDidMount",value:function(){if("undefined"==typeof window)return!1;this.registerElems(this.props.name)}},{key:"componentWillReceiveProps",value:function(t){this.props.name!==t.name&&this.registerElems(t.name)}},{key:"componentWillUnmount",value:function(){if("undefined"==typeof window)return!1;d.unregister(this.props.name)}},{key:"registerElems",value:function(t){d.register(t,this.childBindings.domNode)}},{key:"render",value:function(){return o.createElement(t,i({},this.props,{parentBindings:this.childBindings}))}}]),n}(o.Component);return e.propTypes={name:p.string,id:p.string},e}};t.exports=f},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var a=n(17),r=["mousedown","mousewheel","touchmove","keydown"];e.default={subscribe:function(t){return"undefined"!=typeof document&&r.forEach(function(e){return(0,a.addPassiveEventListener)(document,e,t)})}}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default={defaultEasing:function(t){return t<.5?Math.pow(2*t,2)/2:1-Math.pow(2*(1-t),2)/2},linear:function(t){return t},easeInQuad:function(t){return t*t},easeOutQuad:function(t){return t*(2-t)},easeInOutQuad:function(t){return t<.5?2*t*t:(4-2*t)*t-1},easeInCubic:function(t){return t*t*t},easeOutCubic:function(t){return--t*t*t+1},easeInOutCubic:function(t){return t<.5?4*t*t*t:(t-1)*(2*t-2)*(2*t-2)+1},easeInQuart:function(t){return t*t*t*t},easeOutQuart:function(t){return 1- --t*t*t*t},easeInOutQuart:function(t){return t<.5?8*t*t*t*t:1-8*--t*t*t*t},easeInQuint:function(t){return t*t*t*t*t},easeOutQuint:function(t){return 1+--t*t*t*t*t},easeInOutQuint:function(t){return t<.5?16*t*t*t*t*t:1+16*--t*t*t*t*t}}},function(t,e){var n;n=function(){return this}();try{n=n||Function("return this")()||(0,eval)("this")}catch(t){"object"==typeof window&&(n=window)}t.exports=n}]);